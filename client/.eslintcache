[{"/home/rails/Documents/backend/client/src/index.js":"1","/home/rails/Documents/backend/client/src/store.js":"2","/home/rails/Documents/backend/client/src/reportWebVitals.js":"3","/home/rails/Documents/backend/client/src/App.js":"4","/home/rails/Documents/backend/client/src/reducers/index.js":"5","/home/rails/Documents/backend/client/src/components/deleteAccount.jsx":"6","/home/rails/Documents/backend/client/src/components/notFound.jsx":"7","/home/rails/Documents/backend/client/src/components/logout.jsx":"8","/home/rails/Documents/backend/client/src/components/home.jsx":"9","/home/rails/Documents/backend/client/src/components/signup.jsx":"10","/home/rails/Documents/backend/client/src/components/addTasks.jsx":"11","/home/rails/Documents/backend/client/src/components/navbar.jsx":"12","/home/rails/Documents/backend/client/src/components/profile.jsx":"13","/home/rails/Documents/backend/client/src/components/addProject.jsx":"14","/home/rails/Documents/backend/client/src/components/project.jsx":"15","/home/rails/Documents/backend/client/src/components/login.jsx":"16","/home/rails/Documents/backend/client/src/reducers/taskReducer.js":"17","/home/rails/Documents/backend/client/src/reducers/projectReducer.js":"18","/home/rails/Documents/backend/client/src/reducers/userReducer.js":"19","/home/rails/Documents/backend/client/src/actions/projectAction.js":"20","/home/rails/Documents/backend/client/src/actions/taskAction.js":"21","/home/rails/Documents/backend/client/src/actions/userAction.js":"22","/home/rails/Documents/backend/client/src/components/tasks.jsx":"23","/home/rails/Documents/backend/client/src/components/updateTask.jsx":"24"},{"size":926,"mtime":1611729669829,"results":"25","hashOfConfig":"26"},{"size":540,"mtime":1611229149279,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1610357711063,"results":"28","hashOfConfig":"26"},{"size":1701,"mtime":1611914587180,"results":"29","hashOfConfig":"26"},{"size":286,"mtime":1611832505620,"results":"30","hashOfConfig":"26"},{"size":633,"mtime":1611814487717,"results":"31","hashOfConfig":"26"},{"size":188,"mtime":1610947286015,"results":"32","hashOfConfig":"26"},{"size":454,"mtime":1611814527519,"results":"33","hashOfConfig":"26"},{"size":243,"mtime":1611725591575,"results":"34","hashOfConfig":"26"},{"size":2616,"mtime":1611814670836,"results":"35","hashOfConfig":"26"},{"size":1571,"mtime":1611908229470,"results":"36","hashOfConfig":"26"},{"size":2720,"mtime":1611839975540,"results":"37","hashOfConfig":"26"},{"size":4763,"mtime":1611814541703,"results":"38","hashOfConfig":"26"},{"size":3907,"mtime":1611815572759,"results":"39","hashOfConfig":"26"},{"size":5916,"mtime":1611924434951,"results":"40","hashOfConfig":"26"},{"size":2185,"mtime":1611816791709,"results":"41","hashOfConfig":"26"},{"size":939,"mtime":1612156646015,"results":"42","hashOfConfig":"26"},{"size":572,"mtime":1611837483884,"results":"43","hashOfConfig":"26"},{"size":786,"mtime":1611819968485,"results":"44","hashOfConfig":"26"},{"size":1472,"mtime":1611837065118,"results":"45","hashOfConfig":"26"},{"size":1922,"mtime":1612156812825,"results":"46","hashOfConfig":"26"},{"size":1854,"mtime":1611837181049,"results":"47","hashOfConfig":"26"},{"size":3275,"mtime":1611912343139,"results":"48","hashOfConfig":"26"},{"size":3492,"mtime":1612157212743,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1m20khj",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},"/home/rails/Documents/backend/client/src/index.js",[],["103","104"],"/home/rails/Documents/backend/client/src/store.js",[],"/home/rails/Documents/backend/client/src/reportWebVitals.js",[],"/home/rails/Documents/backend/client/src/App.js",[],"/home/rails/Documents/backend/client/src/reducers/index.js",[],"/home/rails/Documents/backend/client/src/components/deleteAccount.jsx",[],"/home/rails/Documents/backend/client/src/components/notFound.jsx",[],"/home/rails/Documents/backend/client/src/components/logout.jsx",[],"/home/rails/Documents/backend/client/src/components/home.jsx",[],"/home/rails/Documents/backend/client/src/components/signup.jsx",[],"/home/rails/Documents/backend/client/src/components/addTasks.jsx",["105"],"import { Link, Redirect } from \"react-router-dom\";\nimport { connect, useDispatch } from \"react-redux\";\nimport React, { useEffect } from \"react\";\nimport {  getUserTasks } from \"../actions/taskAction\";\n\n\n\nconst token = localStorage.getItem(\"x-auth-token\");\nconst AddTasks = (props) => {\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const userId = props.users.user._id\n    dispatch(getUserTasks(userId));\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      {!token && (\n        <React.Fragment>\n          <Redirect to=\"/not-found\" />\n        </React.Fragment>\n      )}\n\n      {token && (\n        <React.Fragment>\n          <div className=\"m-5\">\n            <h1> Welcome {props.users.user.name}..! </h1>\n            <h5> Now You Can Add Your Tasks... Here </h5>\n          </div>\n\n          <div className=\"container\">\n            <ul className=\"list-group\">\n              {props.tasks.map((task) => (\n                <Link to={`/tasks/${task._id}`}  style={{textDecoration: 'none'}}>\n                <div className=\"list-group-item col-sm-5 card text-white bg-secondary mb-3 m-2\" key={task._id}>\n                <div className=\"card-header\">Task : {task.description}</div>\n                <h5 className=\"card-title\">Project : {task.project.title}</h5>\n                 </div>\n                </Link>\n              ))}\n            </ul>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  users: state.users,\n  tasks: state.tasks,\n});\n\nexport default connect(mapStateToProps)(AddTasks);","/home/rails/Documents/backend/client/src/components/navbar.jsx",[],"/home/rails/Documents/backend/client/src/components/profile.jsx",[],"/home/rails/Documents/backend/client/src/components/addProject.jsx",[],"/home/rails/Documents/backend/client/src/components/project.jsx",["106","107"],"import React, { useEffect, useState } from 'react';\nimport { connect, useDispatch } from \"react-redux\";\nimport { findProject, updateProject} from '../actions/projectAction'\nimport { addTask, getTasks } from '../actions/taskAction'\nimport { getUser} from '../actions/userAction'\nimport {Link, withRouter} from 'react-router-dom';\nimport { Button, Modal }  from \"react-bootstrap\"\n\n\nconst token = localStorage.getItem(\"x-auth-token\");\nconst Project = (props) => {\n\n    const dispatch = useDispatch();\n    const [projectValues, setProjectValues] = useState([{}]);\n    const [values, setValues] = useState({});\n    const [users, setUser] = useState([]);\n    const [tasks, setTask] = useState([]);\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [show1, setShow1] = useState(false);\n    const handleClose1 = () => setShow1(false);\n    const handleShow1 = () => setShow1(true);\n    \n    useEffect(()=>{\n        const projectId = props.match.params.id;\n        dispatch(findProject(projectId))\n        .then(res  => setProjectValues(res));\n        dispatch(getUser())\n        .then(res  => setUser(res));\n        dispatch(getTasks(projectId))\n        .then(res  => setTask(res));\n    },[dispatch])\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setProjectValues({ \n          ...projectValues,\n          [name]: value,\n        });\n      };\n    \n      const handleSubmit =  (e) => {\n        e.preventDefault();\n        dispatch(updateProject(projectValues))\n        .then((res) => {\n          setProjectValues((projectValues) => res);\n        })\n      };\n\n      const handleInputChangeTask = (e) => {\n        const { name, value } = e.target;\n        setValues({\n          ...values,\n          [name]: value,\n        });\n      };\n\n      const handleSubmitTask =  (e) => {\n        e.preventDefault();\n        const projectId = props.match.params.id;\n        dispatch(addTask(values, projectId))\n        .then((res) => {\n          setTask((tasks) => [res, ...tasks]);\n        })\n        window.location.reload();\n      };\n      \n    return ( \n        <div>\n            <h2>title : {projectValues.title}</h2>\n            <h2> description : {projectValues.description}</h2>\n            <div className=\"m-2\">\n            <Button variant=\"primary\" onClick={handleShow}>Update</Button>\n          <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>New Project</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <form onSubmit={handleSubmit}>\n              <div className=\"mb-3\">\n                <label htmlFor=\"title\" className=\"form-label\">Title</label>\n                <input\n                  value={projectValues.title}\n                  onChange={handleInputChange}\n                  name=\"title\"\n                  type=\"text\"\n                  placeholder=\"Title\"\n                  className=\"form-control\"\n                />\n             </div>\n\n             <div className=\"mb-3\">\n                <label htmlFor=\"password\" className=\"form-label\">Description</label>\n                <input\n                  value={projectValues.description}\n                  onChange={handleInputChange}\n                  name=\"description\"\n                  type=\"text\"\n                  placeholder=\"Description\"\n                  className=\"form-control\"/>\n             </div>\n          <div className=\"mb-3\">\n              <Button variant=\"primary\" type=\"submit\" onClick={handleClose}>Submit</Button>\n          </div>\n        </form>\n            </Modal.Body>\n          </Modal>\n          </div>\n\n\n          <div className=\"m-2\">\n          <Button variant=\"primary\" onClick={handleShow1}>\n              Add Task\n            </Button>\n\n          <Modal show={show1} onHide={handleClose1}>\n            <Modal.Header closeButton>\n              <Modal.Title>Assign Task</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <form onSubmit={handleSubmitTask}>\n             <div className=\"mb-3\">\n                <label htmlFor=\"task\" className=\"form-label\">Task</label>\n                <input\n                  value={values.task}\n                  onChange={handleInputChangeTask}\n                  name=\"task\"\n                  type=\"text\"\n                  placeholder=\"Task\"\n                  className=\"form-control\"/>\n              </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"user\" className=\"form-label\">User</label>\n            <select name=\"user\" id=\"user\" label=\"User\" \n            value={values.user}\n            className=\"form-control\"\n            onChange={handleInputChangeTask}\n            >\n              <option value=\"\" />\n              {users.map((option) => (\n              <option key={option._id} value={option._id}>\n                {option.name}\n              </option>\n            ))}\n      </select>\n          </div>\n          <div className=\"mb-3\">\n              <Button variant=\"primary\" type=\"submit\" onClick={handleClose1}>\n                Submit\n              </Button>\n          </div>\n        </form>\n            </Modal.Body>\n          </Modal>\n          </div>\n          <div className=\"container\">\n          <div className=\"row\">\n            {tasks.map(task => (\n              \n              <div className=\"col-sm-5 card text-white bg-dark mb-3 m-2\" key={task._id}>\n               <div className=\"card-header\">Task : {task.description}</div>\n               <h5 className=\"card-title\">User : {task.owner.name}</h5>\n               <Link to={`/updatetask/${task._id}`} className=\"stretched-link\"></Link>\n              </div>\n            ))}\n          </div>\n          </div>\n        </div>\n\n     );\n}\n\nconst mapStateToProps = (state) => ({\n    users: state.users,\n  });\n \nexport default withRouter(connect(mapStateToProps)(Project));\n","/home/rails/Documents/backend/client/src/components/login.jsx",[],"/home/rails/Documents/backend/client/src/reducers/taskReducer.js",[],"/home/rails/Documents/backend/client/src/reducers/projectReducer.js",[],"/home/rails/Documents/backend/client/src/reducers/userReducer.js",[],"/home/rails/Documents/backend/client/src/actions/projectAction.js",[],"/home/rails/Documents/backend/client/src/actions/taskAction.js",[],"/home/rails/Documents/backend/client/src/actions/userAction.js",[],"/home/rails/Documents/backend/client/src/components/tasks.jsx",["108"],"import { Redirect } from \"react-router-dom\";\nimport { connect, useDispatch } from \"react-redux\";\nimport React, { useEffect, useState } from \"react\";\nimport { getTaskById, toggleTask} from \"../actions/taskAction\";\n\nconst token = localStorage.getItem(\"x-auth-token\");\nconst Tasks = (props) => {\n  const options = [\n    { id: 1, name: \"Processing\", value: false },\n    { id: 2, name: \"Done\", value: true },\n  ];\n  const dispatch = useDispatch();\n  const [status, setStatus] = useState(\"\");\n\n  useEffect(() => {\n    const taskId = props.match.params.id;\n    dispatch(getTaskById(taskId));\n  }, [dispatch]);\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    const isTrueSet = value === \"true\";\n    setStatus(isTrueSet);\n  };\n  const handleUpdate = (task) => {\n    task.completed = status;\n    dispatch(toggleTask(task, token));\n  };\n\n  return (\n    <div className=\"container\">\n      {!token && (\n        <React.Fragment>\n          <Redirect to=\"/not-found\" />\n        </React.Fragment>\n      )}\n\n      {token && (\n        <React.Fragment>\n          <div className=\"m-5\">\n            <h1> Welcome {props.users.user.name}..! </h1>\n            <h5> Now You Can Add Your Tasks... Here </h5>\n          </div>\n\n          <div className=\"container\">\n            <ul className=\"list-group\">\n              {props.tasks.map((task) => (\n                <li className=\"list-group-item\" key={task._id}>\n                  <div className=\"row\">\n                    <div className=\"col-1\">\n                      {task.completed ? (\n                        <i class=\"fa fa-check fa-3x\" aria-hidden=\"true\"></i>\n                      ) : (\n                          <i class=\"fa fa-times fa-3x\" aria-hidden=\"true\"></i>\n                        )}\n                    </div>\n                    <div className=\"col-4\">{task.description}</div>\n                    <div className=\"col-3\">\n                      \n                        <label htmlFor=\"status\" className=\"form-label\">\n                          Status\n                        </label>\n                        <select\n                          name=\"status\"\n                          id=\"status\"\n                          label=\"Status\"\n                          className=\"form-control\"\n                          onChange={handleChange}\n                        >\n                          <option value=\"\" />\n                          {options.map((option) => (\n                            <option key={option.id} value={option.value}>\n                              {option.name}\n                            </option>\n                          ))}\n                        </select>\n                   \n                    </div>\n                    <div className=\"col-4\">\n                      <button\n                        className=\"btn btn-warning\"\n                        onClick={() => handleUpdate(task)}\n                      >\n                        Update\n                      </button>\n                      </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  users: state.users,\n  tasks: state.tasks,\n});\n\nexport default connect(mapStateToProps)(Tasks);\n","/home/rails/Documents/backend/client/src/components/updateTask.jsx",["109","110","111"],"import React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { getTaskById, updateTask } from '../actions/taskAction';\nimport { Button, Modal }  from \"react-bootstrap\";\nimport { getUser} from '../actions/userAction'\n\nconst token = localStorage.getItem(\"x-auth-token\");\nconst UpdateTask = (props) => {\n    \n    const dispatch = useDispatch();\n    useEffect(() => {\n        const taskId = props.match.params.id;\n        dispatch(getUser())\n        .then(res  => setUser(res))\n        dispatch(getTaskById(taskId))\n        .then(res  => setTask(res));\n    }, [dispatch]);\n    \n    const [show, setShow] = useState(false);\n    const [values, setValues] = useState({});\n    const [users, setUser] = useState([]);\n    const [tasks, setTask] = useState();\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    \n\n      const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setValues({\n          ...values,\n          [name]: value,\n        });\n      };\n\n      const handleSubmit =  (e) => {\n        e.preventDefault();\n        dispatch(updateTask(values, props.match.params.id))\n        // .then((res) => {\n        //   setTask((tasks) => [res, ...tasks]);\n        // })\n        window.location.reload();\n      };\n\n    return ( \n            <div>\n                <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Update Task</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <form onSubmit={handleSubmit}>\n             <div className=\"mb-3\">\n                <label htmlFor=\"task\" className=\"form-label\">Task</label>\n                <input\n                  value={values.task}\n                  onChange={handleInputChange}\n                  name=\"task\"\n                  type=\"text\"\n                  placeholder=\"Task\"\n                  className=\"form-control\"/>\n              </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"user\" className=\"form-label\">User</label>\n            <select name=\"user\" id=\"user\" label=\"User\" \n            value={values.user}\n            className=\"form-control\"\n            onChange={handleInputChange}\n            >\n              <option value=\"\" />\n              {users.map((option) => (\n              <option key={option._id} value={option._id}>\n                {option.name}\n              </option>\n            ))}\n      </select>\n          </div>\n          <div className=\"mb-3\">\n              <Button variant=\"primary\" type=\"submit\" onClick={handleClose}>\n                Submit\n              </Button>\n          </div>\n        </form>\n            </Modal.Body>\n          </Modal>\n            <div className=\"container mt-5\">\n                <ul className=\"list-group\">\n                    {props.tasks.map((task) => ( \n                    <li className=\"list-group-item\">\n                        <div className=\"row\">\n                        <div className=\"col-4\">Task : {task.description}</div>\n                        <h5 className=\"col-4\">User : {task.owner.name}</h5>\n                        <Button variant=\"primary\" onClick={handleShow}>Update</Button>\n                        </div>\n                    </li>\n                    ))}\n                </ul>\n          </div>\n          </div>\n       \n    );\n}\nconst mapStateToProps = (state) => ({\n    tasks: state.tasks,\n  });\nexport default connect(mapStateToProps)(UpdateTask);",{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":16,"column":6,"nodeType":"118","endLine":16,"endColumn":16,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":10,"column":7,"nodeType":"122","messageId":"123","endLine":10,"endColumn":12},{"ruleId":"116","severity":1,"message":"124","line":35,"column":7,"nodeType":"118","endLine":35,"endColumn":17,"suggestions":"125"},{"ruleId":"116","severity":1,"message":"124","line":18,"column":6,"nodeType":"118","endLine":18,"endColumn":16,"suggestions":"126"},{"ruleId":"120","severity":1,"message":"121","line":7,"column":7,"nodeType":"122","messageId":"123","endLine":7,"endColumn":12},{"ruleId":"116","severity":1,"message":"124","line":17,"column":8,"nodeType":"118","endLine":17,"endColumn":18,"suggestions":"127"},{"ruleId":"120","severity":1,"message":"128","line":22,"column":12,"nodeType":"122","messageId":"123","endLine":22,"endColumn":17},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.users.user._id'. Either include it or remove the dependency array.","ArrayExpression",["131"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["132"],["133"],["134"],"'tasks' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"137","fix":"139"},{"desc":"137","fix":"140"},"Update the dependencies array to be: [dispatch, props.users.user._id]",{"range":"141","text":"142"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"143","text":"144"},{"range":"145","text":"144"},{"range":"146","text":"144"},[422,432],"[dispatch, props.users.user._id]",[1277,1287],"[dispatch, props.match.params.id]",[590,600],[606,616]]