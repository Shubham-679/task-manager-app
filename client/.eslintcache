[{"/home/rails/Documents/backend/client/src/index.js":"1","/home/rails/Documents/backend/client/src/store.js":"2","/home/rails/Documents/backend/client/src/reportWebVitals.js":"3","/home/rails/Documents/backend/client/src/App.js":"4","/home/rails/Documents/backend/client/src/reducers/index.js":"5","/home/rails/Documents/backend/client/src/components/deleteAccount.jsx":"6","/home/rails/Documents/backend/client/src/components/notFound.jsx":"7","/home/rails/Documents/backend/client/src/components/logout.jsx":"8","/home/rails/Documents/backend/client/src/components/home.jsx":"9","/home/rails/Documents/backend/client/src/components/signup.jsx":"10","/home/rails/Documents/backend/client/src/components/addTasks.jsx":"11","/home/rails/Documents/backend/client/src/components/navbar.jsx":"12","/home/rails/Documents/backend/client/src/components/profile.jsx":"13","/home/rails/Documents/backend/client/src/components/addProject.jsx":"14","/home/rails/Documents/backend/client/src/components/project.jsx":"15","/home/rails/Documents/backend/client/src/components/login.jsx":"16","/home/rails/Documents/backend/client/src/reducers/taskReducer.js":"17","/home/rails/Documents/backend/client/src/reducers/projectReducer.js":"18","/home/rails/Documents/backend/client/src/reducers/userReducer.js":"19","/home/rails/Documents/backend/client/src/actions/projectAction.js":"20","/home/rails/Documents/backend/client/src/actions/taskAction.js":"21","/home/rails/Documents/backend/client/src/actions/userAction.js":"22","/home/rails/Documents/backend/client/src/components/tasks.jsx":"23","/home/rails/Documents/backend/client/src/components/updateTask.jsx":"24","/home/rails/Documents/backend/client/src/components/input.jsx":"25"},{"size":926,"mtime":1611729669829,"results":"26","hashOfConfig":"27"},{"size":540,"mtime":1611229149279,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1610357711063,"results":"29","hashOfConfig":"27"},{"size":1701,"mtime":1611914587180,"results":"30","hashOfConfig":"27"},{"size":286,"mtime":1611832505620,"results":"31","hashOfConfig":"27"},{"size":633,"mtime":1611814487717,"results":"32","hashOfConfig":"27"},{"size":188,"mtime":1610947286015,"results":"33","hashOfConfig":"27"},{"size":454,"mtime":1611814527519,"results":"34","hashOfConfig":"27"},{"size":551,"mtime":1612247636634,"results":"35","hashOfConfig":"27"},{"size":4026,"mtime":1612249985290,"results":"36","hashOfConfig":"27"},{"size":1577,"mtime":1612250139571,"results":"37","hashOfConfig":"27"},{"size":2892,"mtime":1612250250826,"results":"38","hashOfConfig":"27"},{"size":4763,"mtime":1611814541703,"results":"39","hashOfConfig":"27"},{"size":4148,"mtime":1612265254369,"results":"40","hashOfConfig":"27"},{"size":7406,"mtime":1612267300245,"results":"41","hashOfConfig":"27"},{"size":3193,"mtime":1612250041767,"results":"42","hashOfConfig":"27"},{"size":939,"mtime":1612156646015,"results":"43","hashOfConfig":"27"},{"size":572,"mtime":1611837483884,"results":"44","hashOfConfig":"27"},{"size":786,"mtime":1611819968485,"results":"45","hashOfConfig":"27"},{"size":1367,"mtime":1612272929439,"results":"46","hashOfConfig":"27"},{"size":1777,"mtime":1612272947646,"results":"47","hashOfConfig":"27"},{"size":1707,"mtime":1612272998721,"results":"48","hashOfConfig":"27"},{"size":3283,"mtime":1612250043375,"results":"49","hashOfConfig":"27"},{"size":4463,"mtime":1612268258332,"results":"50","hashOfConfig":"27"},{"size":606,"mtime":1612246395726,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1m20khj",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/home/rails/Documents/backend/client/src/index.js",[],["109","110"],"/home/rails/Documents/backend/client/src/store.js",[],"/home/rails/Documents/backend/client/src/reportWebVitals.js",[],"/home/rails/Documents/backend/client/src/App.js",[],"/home/rails/Documents/backend/client/src/reducers/index.js",[],"/home/rails/Documents/backend/client/src/components/deleteAccount.jsx",[],"/home/rails/Documents/backend/client/src/components/notFound.jsx",[],"/home/rails/Documents/backend/client/src/components/logout.jsx",[],"/home/rails/Documents/backend/client/src/components/home.jsx",["111"],"const Home = (props) => {\n    return ( \n        <div className=\"mt-5\">\n            <h1> Task Management Application </h1>\n            <h4> Single Destination To Manage Your Project and Tasks.</h4>\n            <div className=\"mt-3\">\n                <img src=\"https://image.freepik.com/free-vector/multitask-office-work-illustration-cartoon-busy-businessman-character-working-many-virtual-business-tasks-multitasking-concept-modern-effective-time-management-white_213110-457.jpg\"></img>\n            </div>\n        </div>\n     );\n}\n \nexport default Home;","/home/rails/Documents/backend/client/src/components/signup.jsx",[],"/home/rails/Documents/backend/client/src/components/addTasks.jsx",["112"],"import { Link, Redirect } from \"react-router-dom\";\nimport { connect, useDispatch } from \"react-redux\";\nimport React, { useEffect } from \"react\";\nimport {  getUserTasks } from \"../actions/taskAction\";\n\n\n\nconst token = localStorage.getItem(\"x-auth-token\");\nconst AddTasks = (props) => {\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const userId = props.users.user._id\n    dispatch(getUserTasks(userId));\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      {!token && (\n        <React.Fragment>\n          <Redirect to=\"/not-found\" />\n        </React.Fragment>\n      )}\n\n      {token && (\n        <React.Fragment>\n          <div className=\"m-5\">\n            <h1> Welcome {props.users.user.name}..! </h1>\n            <h5> Now You Can See Your All Tasks....  Here </h5>\n          </div>\n\n          <div className=\"container\">\n            <ul className=\"list-group\">\n              {props.tasks.map((task) => (\n                <Link to={`/tasks/${task._id}`}  style={{textDecoration: 'none'}} key={task._id}>\n                <div className=\"list-group-item col-sm-5 card text-white bg-secondary mb-3 m-2\">\n                <div className=\"card-header\">Task : {task.description}</div>\n                <h5 className=\"card-title\">Project : {task.project.title}</h5>\n                 </div>\n                </Link>\n              ))}\n            </ul>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  users: state.users,\n  tasks: state.tasks,\n});\n\nexport default connect(mapStateToProps)(AddTasks);","/home/rails/Documents/backend/client/src/components/navbar.jsx",[],"/home/rails/Documents/backend/client/src/components/profile.jsx",[],"/home/rails/Documents/backend/client/src/components/addProject.jsx",[],"/home/rails/Documents/backend/client/src/components/project.jsx",["113","114"],"import React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { findProject, updateProject } from \"../actions/projectAction\";\nimport { addTask, getTasks } from \"../actions/taskAction\";\nimport { getUser } from \"../actions/userAction\";\nimport { Link, withRouter, Redirect } from \"react-router-dom\";\nimport { Button, Modal } from \"react-bootstrap\";\n\nconst token = localStorage.getItem(\"x-auth-token\");\nconst Project = (props) => {\n  const dispatch = useDispatch();\n  const [projectValues, setProjectValues] = useState([{}]);\n  const [values, setValues] = useState({});\n  const [users, setUser] = useState([]);\n  const [tasks, setTask] = useState([]);\n\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const [show1, setShow1] = useState(false);\n  const handleClose1 = () => setShow1(false);\n  const handleShow1 = () => setShow1(true);\n\n  useEffect(() => {\n    const projectId = props.match.params.id;\n    dispatch(findProject(projectId)).then((res) => setProjectValues(res));\n    dispatch(getUser()).then((res) => setUser(res));\n    dispatch(getTasks(projectId)).then((res) => setTask(res));\n  }, [dispatch]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setProjectValues({\n      ...projectValues,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateProject(projectValues)).then((res) => {\n      setProjectValues((projectValues) => res);\n    });\n  };\n\n  const handleInputChangeTask = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleSubmitTask = (e) => {\n    e.preventDefault();\n    const projectId = props.match.params.id;\n    dispatch(addTask(values, projectId)).then((res) => {\n      setTask((tasks) => [res, ...tasks]);\n    });\n    window.location.reload();\n  };\n  console.log(props.users.isAdmin)\n\n  return (\n    <div>\n      {!props.users.isAdmin && (\n        <React.Fragment>\n          <Redirect to=\"/not-found\" />\n        </React.Fragment>\n      )}\n      {props.users.isAdmin && (\n        <React.Fragment>\n          <div\n            className=\"col-sm-10 card text-white bg-secondary mb-3 mt-4 \"\n            style={{ marginLeft: \"100px\" }}\n          >\n            <div className=\"card-header\">title : {projectValues.title}</div>\n            <h5 className=\"card-title\">\n              description : {projectValues.description}\n            </h5>\n            <div>\n              <Button\n                className=\"btn m-2\"\n                variant=\"primary\"\n                onClick={handleShow}\n              >\n                Update\n              </Button>\n              <Button variant=\"primary\" onClick={handleShow1}>\n                Add Task\n              </Button>\n            </div>\n          </div>\n          <div className=\"m-2\">\n            <Modal show={show} onHide={handleClose}>\n              <Modal.Header closeButton>\n                <Modal.Title>New Project</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <form onSubmit={handleSubmit}>\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"title\" className=\"form-label\">\n                      Title\n                    </label>\n                    <input\n                      value={projectValues.title}\n                      onChange={handleInputChange}\n                      name=\"title\"\n                      type=\"text\"\n                      placeholder=\"Title\"\n                      className=\"form-control\"\n                    />\n                  </div>\n\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"password\" className=\"form-label\">\n                      Description\n                    </label>\n                    <input\n                      value={projectValues.description}\n                      onChange={handleInputChange}\n                      name=\"description\"\n                      type=\"text\"\n                      placeholder=\"Description\"\n                      className=\"form-control\"\n                    />\n                  </div>\n                  <div className=\"mb-3\">\n                    <Button\n                      variant=\"primary\"\n                      type=\"submit\"\n                      onClick={handleClose}\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </form>\n              </Modal.Body>\n            </Modal>\n          </div>\n\n          <div className=\"m-2\">\n            <Modal show={show1} onHide={handleClose1}>\n              <Modal.Header closeButton>\n                <Modal.Title>Assign Task</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <form onSubmit={handleSubmitTask}>\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"task\" className=\"form-label\">\n                      Task\n                    </label>\n                    <input\n                      value={values.task}\n                      onChange={handleInputChangeTask}\n                      name=\"task\"\n                      type=\"text\"\n                      placeholder=\"Task\"\n                      className=\"form-control\"\n                    />\n                  </div>\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"user\" className=\"form-label\">\n                      User\n                    </label>\n                    <select\n                      name=\"user\"\n                      id=\"user\"\n                      label=\"User\"\n                      value={values.user}\n                      className=\"form-control\"\n                      onChange={handleInputChangeTask}\n                    >\n                      <option value=\"\" />\n                      {users.map((option) => (\n                        <option key={option._id} value={option._id}>\n                          {option.name}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                  <div className=\"mb-3\">\n                    <Button\n                      variant=\"primary\"\n                      type=\"submit\"\n                      onClick={handleClose1}\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </form>\n              </Modal.Body>\n            </Modal>\n          </div>\n          <div className=\"container\">\n            <div className=\"row social-icons\" style={{ marginLeft: \"100px\" }}>\n              {tasks.map((task) => (\n                <div\n                  className=\"col-sm-5 card text-white bg-dark mb-3 m-2\"\n                  key={task._id}\n                >\n                  <div className=\"card-header\">Task : {task.description}</div>\n                  <h5 className=\"card-title\">User : {task.owner.name}</h5>\n                  <Link\n                    to={`/updatetask/${task._id}`}\n                    className=\"stretched-link\"\n                  ></Link>\n                </div>\n              ))}\n            </div>\n          </div>\n          </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  users: state.users,\n});\n\nexport default withRouter(connect(mapStateToProps)(Project));\n","/home/rails/Documents/backend/client/src/components/login.jsx",["115"],"import { useDispatch } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport Joi from \"joi-browser\";\nimport { findUser } from \"../actions/userAction\";\nimport { toast } from \"react-toastify\";\nimport Input from \"../components/input\"\n\nconst initialValues = {\n  email: \"\",\n  password: \"\",\n};\n\nconst Login = (props) => {\n  const [errors , setErrors] = useState({});\n  const [values, setValues] = useState(initialValues);\n  const dispatch = useDispatch();\n\n  const validateProperty = (name, value) => {\n        if(name === \"email\"){\n            if(value.trim() === '') return 'Email Is Required'\n        }\n        if(name === \"password\"){\n            if(value.trim() === '') return 'Password Is Required'\n        }\n};\nconst validate = () => {\n   const errors= {}\n    if(values.email.trim() === \"\")\n      errors.email = \"Email is required\"\n    if(values.password.trim() === \"\")\n      errors.password = \" Password is required\"\n    return Object.keys(errors).length === 0 ? null : errors;\n \n};\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const er = validate();\n    setErrors(errors => er || {});\n    if (er) {return}\n    else {\n    dispatch(findUser(values))\n      .then((res) => {\n        toast.success(\"Login Success\");\n        localStorage.setItem(\"x-auth-token\", res.token);\n        window.location = \"/\";\n        // props.history.push('/tasks');\n      })\n      .catch((e) => {\n        toast.error(\"Email or Password Are Invalid !\");\n        console.log(e);\n      });\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const err = errors\n    const { name, value } = e.currentTarget;\n    const errorMessages = validateProperty(name, value);\n    if (errorMessages) err[name] = errorMessages;\n    else delete err[name];\n    \n    setValues({\n      ...values,\n      [name]: value,\n    });\n    setErrors(errors=> err || {})\n  };\n\n  return (\n    \n    <div className=\"container\">\n      <h1 className=\"m-4\"> Login Here..</h1>\n      <div className=\"d-flex justify-content-center\">\n        <form onSubmit={handleSubmit}>\n           <Input \n           value={values.email}\n           onChange={handleInputChange}\n           label=\"Email\"\n           name=\"email\"\n           type=\"email\"\n           placeholder=\"Enter Your Email\"\n           error={errors.email}\n           className=\"form-control\"\n           />\n            <small id=\"emailHelp\" className=\"form-text mark\">\n              We'll never share your email with anyone else.\n            </small>\n          \n          <div className=\"mb-3\">\n            <label htmlFor=\"Password\" className=\"form-label float-left mt-2\">\n              Password\n            </label>\n            <Input\n              value={values.password}\n              onChange={handleInputChange}\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Enter Your Password\"\n              className=\"form-control\"\n              error={errors.password}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <button type=\"submit\" className=\"btn btn-dark btn-lg btn-block\">\n              Login\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/home/rails/Documents/backend/client/src/reducers/taskReducer.js",[],"/home/rails/Documents/backend/client/src/reducers/projectReducer.js",[],"/home/rails/Documents/backend/client/src/reducers/userReducer.js",[],"/home/rails/Documents/backend/client/src/actions/projectAction.js",[],"/home/rails/Documents/backend/client/src/actions/taskAction.js",[],"/home/rails/Documents/backend/client/src/actions/userAction.js",[],"/home/rails/Documents/backend/client/src/components/tasks.jsx",["116"],"import { Redirect } from \"react-router-dom\";\nimport { connect, useDispatch } from \"react-redux\";\nimport React, { useEffect, useState } from \"react\";\nimport { getTaskById, toggleTask} from \"../actions/taskAction\";\n\nconst token = localStorage.getItem(\"x-auth-token\");\nconst Tasks = (props) => {\n  const options = [\n    { id: 1, name: \"Processing\", value: false },\n    { id: 2, name: \"Done\", value: true },\n  ];\n  const dispatch = useDispatch();\n  const [status, setStatus] = useState(\"\");\n\n  useEffect(() => {\n    const taskId = props.match.params.id;\n    dispatch(getTaskById(taskId));\n  }, [dispatch]);\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    const isTrueSet = value === \"true\";\n    setStatus(isTrueSet);\n  };\n  const handleUpdate = (task) => {\n    task.completed = status;\n    dispatch(toggleTask(task, token));\n  };\n\n  return (\n    <div className=\"container\">\n      {!token && (\n        <React.Fragment>\n          <Redirect to=\"/not-found\" />\n        </React.Fragment>\n      )}\n\n      {token && (\n        <React.Fragment>\n          <div className=\"m-5\">\n            <h1> Welcome {props.users.user.name}..! </h1>\n            <h5> Now You Can Add Your Tasks... Here </h5>\n          </div>\n\n          <div className=\"container\">\n            <ul className=\"list-group\">\n              {props.tasks.map((task) => (\n                <li className=\"list-group-item\" key={task._id}>\n                  <div className=\"row\">\n                    <div className=\"col-1\">\n                      {task.completed ? (\n                        <i className=\"fa fa-check fa-3x\" aria-hidden=\"true\"></i>\n                      ) : (\n                          <i className=\"fa fa-times fa-3x\" aria-hidden=\"true\"></i>\n                        )}\n                    </div>\n                    <div className=\"col-4\">{task.description}</div>\n                    <div className=\"col-3\">\n                      \n                        <label htmlFor=\"status\" className=\"form-label\">\n                          Status\n                        </label>\n                        <select\n                          name=\"status\"\n                          id=\"status\"\n                          label=\"Status\"\n                          className=\"form-control\"\n                          onChange={handleChange}\n                        >\n                          <option value=\"\" />\n                          {options.map((option) => (\n                            <option key={option.id} value={option.value}>\n                              {option.name}\n                            </option>\n                          ))}\n                        </select>\n                   \n                    </div>\n                    <div className=\"col-4\">\n                      <button\n                        className=\"btn btn-warning\"\n                        onClick={() => handleUpdate(task)}\n                      >\n                        Update\n                      </button>\n                      </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  users: state.users,\n  tasks: state.tasks,\n});\n\nexport default connect(mapStateToProps)(Tasks);\n","/home/rails/Documents/backend/client/src/components/updateTask.jsx",["117","118"],"import React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { getTaskById, updateTask, removeTask } from \"../actions/taskAction\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { getUser } from \"../actions/userAction\";\nimport { Redirect } from \"react-router-dom\";\n\nconst token = localStorage.getItem(\"x-auth-token\");\nconst UpdateTask = (props) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const taskId = props.match.params.id;\n    dispatch(getUser()).then((res) => setUser(res));\n    dispatch(getTaskById(taskId)).then((res) => setTask(res));\n  }, [dispatch]);\n\n  const [show, setShow] = useState(false);\n  const [values, setValues] = useState({});\n  const [users, setUser] = useState([]);\n  const [tasks, setTask] = useState();\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateTask(values, props.match.params.id));\n    // .then((res) => {\n    //   setTask((tasks) => [res, ...tasks]);\n    // })\n    window.location.reload();\n  };\n  const handleRemove =  (task) => {\n    dispatch(removeTask(task._id, token));\n  };\n\n  return (\n    <div>\n      {!token && !props.users.isAdmin && (\n        <React.Fragment>\n          <Redirect to=\"/not-found\" />\n        </React.Fragment>\n      )}\n      {token && props.users.isAdmin && (\n        <React.Fragment>\n          <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Update Task</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <form onSubmit={handleSubmit}>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"task\" className=\"form-label\">\n                    Task\n                  </label>\n                  <input\n                    value={values.task}\n                    onChange={handleInputChange}\n                    name=\"task\"\n                    type=\"text\"\n                    placeholder=\"Task\"\n                    className=\"form-control\"\n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"user\" className=\"form-label\">\n                    User\n                  </label>\n                  <select\n                    name=\"user\"\n                    id=\"user\"\n                    label=\"User\"\n                    value={values.user}\n                    className=\"form-control\"\n                    onChange={handleInputChange}\n                  >\n                    <option value=\"\" />\n                    {users.map((option) => (\n                      <option key={option._id} value={option._id}>\n                        {option.name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div className=\"mb-3\">\n                  <Button variant=\"primary\" type=\"submit\" onClick={handleClose}>\n                    Submit\n                  </Button>\n                </div>\n              </form>\n            </Modal.Body>\n          </Modal>\n          <div className=\"container-fluid mt-5\">\n            <ul className=\"list-group\">\n              {props.tasks.map((task) => (\n                <li className=\"list-group-item\">\n                  <div className=\"row\">\n                    <h5 className=\"col-3\">Task : {task.description}</h5>\n                    <h5 className=\"col-2\">User : {task.owner.name}</h5>\n                    <h5 className=\"col-2\">{task.completed ? 'Done' : 'Processing'}</h5>\n                    <div className=\"col-4 btn\">\n                    <Button className=\"btn\" variant=\"primary\" onClick={handleShow}>Update</Button>\n                    </div>\n                    <div className=\"text-right\">\n                        <i className=\"fa fa-trash\" aria-hidden=\"true\" \n                        onClick={() => handleRemove(task)} \n                        style={{ cursor: \"pointer\"}}></i>\n                        </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  tasks: state.tasks,\n  users : state.users\n});\nexport default connect(mapStateToProps)(UpdateTask);\n","/home/rails/Documents/backend/client/src/components/input.jsx",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":7,"column":17,"nodeType":"125","endLine":7,"endColumn":247},{"ruleId":"126","severity":1,"message":"127","line":16,"column":6,"nodeType":"128","endLine":16,"endColumn":16,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":9,"column":7,"nodeType":"132","messageId":"133","endLine":9,"endColumn":12},{"ruleId":"126","severity":1,"message":"134","line":30,"column":6,"nodeType":"128","endLine":30,"endColumn":16,"suggestions":"135"},{"ruleId":"130","severity":1,"message":"136","line":3,"column":8,"nodeType":"132","messageId":"133","endLine":3,"endColumn":11},{"ruleId":"126","severity":1,"message":"134","line":18,"column":6,"nodeType":"128","endLine":18,"endColumn":16,"suggestions":"137"},{"ruleId":"126","severity":1,"message":"134","line":15,"column":6,"nodeType":"128","endLine":15,"endColumn":16,"suggestions":"138"},{"ruleId":"130","severity":1,"message":"139","line":20,"column":10,"nodeType":"132","messageId":"133","endLine":20,"endColumn":15},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.users.user._id'. Either include it or remove the dependency array.","ArrayExpression",["142"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["143"],"'Joi' is defined but never used.",["144"],["145"],"'tasks' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"148","fix":"150"},{"desc":"148","fix":"151"},"Update the dependencies array to be: [dispatch, props.users.user._id]",{"range":"152","text":"153"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"154","text":"155"},{"range":"156","text":"155"},{"range":"157","text":"155"},[422,432],"[dispatch, props.users.user._id]",[1225,1235],"[dispatch, props.match.params.id]",[590,600],[626,636]]