[{"/home/rails/Documents/backend/client/src/index.js":"1","/home/rails/Documents/backend/client/src/store.js":"2","/home/rails/Documents/backend/client/src/reportWebVitals.js":"3","/home/rails/Documents/backend/client/src/App.js":"4","/home/rails/Documents/backend/client/src/reducers/index.js":"5","/home/rails/Documents/backend/client/src/components/deleteAccount.jsx":"6","/home/rails/Documents/backend/client/src/components/notFound.jsx":"7","/home/rails/Documents/backend/client/src/components/logout.jsx":"8","/home/rails/Documents/backend/client/src/components/home.jsx":"9","/home/rails/Documents/backend/client/src/components/signup.jsx":"10","/home/rails/Documents/backend/client/src/components/addTasks.jsx":"11","/home/rails/Documents/backend/client/src/components/navbar.jsx":"12","/home/rails/Documents/backend/client/src/components/profile.jsx":"13","/home/rails/Documents/backend/client/src/components/addProject.jsx":"14","/home/rails/Documents/backend/client/src/components/project.jsx":"15","/home/rails/Documents/backend/client/src/components/login.jsx":"16","/home/rails/Documents/backend/client/src/reducers/taskReducer.js":"17","/home/rails/Documents/backend/client/src/reducers/projectReducer.js":"18","/home/rails/Documents/backend/client/src/reducers/userReducer.js":"19","/home/rails/Documents/backend/client/src/actions/projectAction.js":"20","/home/rails/Documents/backend/client/src/actions/taskAction.js":"21","/home/rails/Documents/backend/client/src/actions/userAction.js":"22","/home/rails/Documents/backend/client/src/components/tasks.jsx":"23","/home/rails/Documents/backend/client/src/components/updateTask.jsx":"24","/home/rails/Documents/backend/client/src/components/input.jsx":"25"},{"size":926,"mtime":1611729669829,"results":"26","hashOfConfig":"27"},{"size":540,"mtime":1611229149279,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1610357711063,"results":"29","hashOfConfig":"27"},{"size":1701,"mtime":1611914587180,"results":"30","hashOfConfig":"27"},{"size":286,"mtime":1611832505620,"results":"31","hashOfConfig":"27"},{"size":633,"mtime":1611814487717,"results":"32","hashOfConfig":"27"},{"size":188,"mtime":1610947286015,"results":"33","hashOfConfig":"27"},{"size":454,"mtime":1611814527519,"results":"34","hashOfConfig":"27"},{"size":551,"mtime":1612247636634,"results":"35","hashOfConfig":"27"},{"size":4026,"mtime":1612249985290,"results":"36","hashOfConfig":"27"},{"size":1577,"mtime":1612250139571,"results":"37","hashOfConfig":"27"},{"size":2892,"mtime":1612250250826,"results":"38","hashOfConfig":"27"},{"size":4763,"mtime":1611814541703,"results":"39","hashOfConfig":"27"},{"size":4102,"mtime":1612167525338,"results":"40","hashOfConfig":"27"},{"size":6359,"mtime":1612172174098,"results":"41","hashOfConfig":"27"},{"size":3193,"mtime":1612250041767,"results":"42","hashOfConfig":"27"},{"size":939,"mtime":1612156646015,"results":"43","hashOfConfig":"27"},{"size":572,"mtime":1611837483884,"results":"44","hashOfConfig":"27"},{"size":786,"mtime":1611819968485,"results":"45","hashOfConfig":"27"},{"size":1367,"mtime":1612250356049,"results":"46","hashOfConfig":"27"},{"size":1730,"mtime":1612250385100,"results":"47","hashOfConfig":"27"},{"size":1707,"mtime":1612250444394,"results":"48","hashOfConfig":"27"},{"size":3283,"mtime":1612250043375,"results":"49","hashOfConfig":"27"},{"size":3492,"mtime":1612157212743,"results":"50","hashOfConfig":"27"},{"size":606,"mtime":1612246395726,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1m20khj",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rails/Documents/backend/client/src/index.js",[],["105","106"],"/home/rails/Documents/backend/client/src/store.js",[],"/home/rails/Documents/backend/client/src/reportWebVitals.js",[],"/home/rails/Documents/backend/client/src/App.js",[],"/home/rails/Documents/backend/client/src/reducers/index.js",[],"/home/rails/Documents/backend/client/src/components/deleteAccount.jsx",[],"/home/rails/Documents/backend/client/src/components/notFound.jsx",[],"/home/rails/Documents/backend/client/src/components/logout.jsx",[],"/home/rails/Documents/backend/client/src/components/home.jsx",["107"],"/home/rails/Documents/backend/client/src/components/signup.jsx",[],"/home/rails/Documents/backend/client/src/components/addTasks.jsx",["108"],"/home/rails/Documents/backend/client/src/components/navbar.jsx",[],"/home/rails/Documents/backend/client/src/components/profile.jsx",[],"/home/rails/Documents/backend/client/src/components/addProject.jsx",[],"/home/rails/Documents/backend/client/src/components/project.jsx",["109","110"],"import React, { useEffect, useState } from 'react';\nimport { connect, useDispatch } from \"react-redux\";\nimport { findProject, updateProject} from '../actions/projectAction'\nimport { addTask, getTasks } from '../actions/taskAction'\nimport { getUser} from '../actions/userAction'\nimport {Link, withRouter} from 'react-router-dom';\nimport { Button, Modal }  from \"react-bootstrap\"\n\n\nconst token = localStorage.getItem(\"x-auth-token\");\nconst Project = (props) => {\n\n    const dispatch = useDispatch();\n    const [projectValues, setProjectValues] = useState([{}]);\n    const [values, setValues] = useState({});\n    const [users, setUser] = useState([]);\n    const [tasks, setTask] = useState([]);\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [show1, setShow1] = useState(false);\n    const handleClose1 = () => setShow1(false);\n    const handleShow1 = () => setShow1(true);\n    \n    useEffect(()=>{\n        const projectId = props.match.params.id;\n        dispatch(findProject(projectId))\n        .then(res  => setProjectValues(res));\n        dispatch(getUser())\n        .then(res  => setUser(res));\n        dispatch(getTasks(projectId))\n        .then(res  => setTask(res));\n    },[dispatch])\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setProjectValues({ \n          ...projectValues,\n          [name]: value,\n        });\n      };\n    \n      const handleSubmit =  (e) => {\n        e.preventDefault();\n        dispatch(updateProject(projectValues))\n        .then((res) => {\n          setProjectValues((projectValues) => res);\n        })\n      };\n\n      const handleInputChangeTask = (e) => {\n        const { name, value } = e.target;\n        setValues({\n          ...values,\n          [name]: value,\n        });\n      };\n\n      const handleSubmitTask =  (e) => {\n        e.preventDefault();\n        const projectId = props.match.params.id;\n        dispatch(addTask(values, projectId))\n        .then((res) => {\n          setTask((tasks) => [res, ...tasks]);\n        })\n        window.location.reload();\n      };\n      \n    return ( \n        <div>\n           <div className=\"col-sm-10 card text-white bg-secondary mb-3 mt-4 \"\n           style={{marginLeft:\"100px\"}}\n           >\n               <div className=\"card-header\">title : {projectValues.title}</div>\n               <h5 className=\"card-title\">description : {projectValues.description}</h5>\n               <div>\n              <Button className=\"btn m-2\" variant=\"primary\" onClick={handleShow}>Update</Button>\n              <Button variant=\"primary\" onClick={handleShow1}>\n              Add Task\n            </Button>\n               </div>\n              </div>\n            {/* <h2>title : {projectValues.title}</h2>\n            <h2> description : {projectValues.description}</h2> */}\n            <div className=\"m-2\">\n          <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>New Project</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <form onSubmit={handleSubmit}>\n              <div className=\"mb-3\">\n                <label htmlFor=\"title\" className=\"form-label\">Title</label>\n                <input\n                  value={projectValues.title}\n                  onChange={handleInputChange}\n                  name=\"title\"\n                  type=\"text\"\n                  placeholder=\"Title\"\n                  className=\"form-control\"\n                />\n             </div>\n\n             <div className=\"mb-3\">\n                <label htmlFor=\"password\" className=\"form-label\">Description</label>\n                <input\n                  value={projectValues.description}\n                  onChange={handleInputChange}\n                  name=\"description\"\n                  type=\"text\"\n                  placeholder=\"Description\"\n                  className=\"form-control\"/>\n             </div>\n          <div className=\"mb-3\">\n              <Button variant=\"primary\" type=\"submit\" onClick={handleClose}>Submit</Button>\n          </div>\n        </form>\n            </Modal.Body>\n          </Modal>\n          </div>\n\n\n          <div className=\"m-2\">\n\n          <Modal show={show1} onHide={handleClose1}>\n            <Modal.Header closeButton>\n              <Modal.Title>Assign Task</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <form onSubmit={handleSubmitTask}>\n             <div className=\"mb-3\">\n                <label htmlFor=\"task\" className=\"form-label\">Task</label>\n                <input\n                  value={values.task}\n                  onChange={handleInputChangeTask}\n                  name=\"task\"\n                  type=\"text\"\n                  placeholder=\"Task\"\n                  className=\"form-control\"/>\n              </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"user\" className=\"form-label\">User</label>\n            <select name=\"user\" id=\"user\" label=\"User\" \n            value={values.user}\n            className=\"form-control\"\n            onChange={handleInputChangeTask}\n            >\n              <option value=\"\" />\n              {users.map((option) => (\n              <option key={option._id} value={option._id}>\n                {option.name}\n              </option>\n            ))}\n      </select>\n          </div>\n          <div className=\"mb-3\">\n              <Button variant=\"primary\" type=\"submit\" onClick={handleClose1}>\n                Submit\n              </Button>\n          </div>\n        </form>\n            </Modal.Body>\n          </Modal>\n          </div>\n          <div className=\"container\">\n          <div className=\"row\"\n          style={{marginLeft:\"100px\"}}>\n            {tasks.map(task => (      \n              <div className=\"col-sm-5 card text-white bg-dark mb-3 m-2\" key={task._id}\n              >\n               <div className=\"card-header\">Task : {task.description}</div>\n               <h5 className=\"card-title\">User : {task.owner.name}</h5>\n               <Link to={`/updatetask/${task._id}`} className=\"stretched-link\"></Link>\n              </div>\n            ))}\n          </div>\n          </div>\n        </div>\n\n     );\n}\n\nconst mapStateToProps = (state) => ({\n    users: state.users,\n  });\n \nexport default withRouter(connect(mapStateToProps)(Project));\n","/home/rails/Documents/backend/client/src/components/login.jsx",["111"],"/home/rails/Documents/backend/client/src/reducers/taskReducer.js",[],"/home/rails/Documents/backend/client/src/reducers/projectReducer.js",[],"/home/rails/Documents/backend/client/src/reducers/userReducer.js",[],"/home/rails/Documents/backend/client/src/actions/projectAction.js",[],"/home/rails/Documents/backend/client/src/actions/taskAction.js",[],"/home/rails/Documents/backend/client/src/actions/userAction.js",[],"/home/rails/Documents/backend/client/src/components/tasks.jsx",["112"],"/home/rails/Documents/backend/client/src/components/updateTask.jsx",["113","114","115"],"import React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { getTaskById, updateTask } from '../actions/taskAction';\nimport { Button, Modal }  from \"react-bootstrap\";\nimport { getUser} from '../actions/userAction'\n\nconst token = localStorage.getItem(\"x-auth-token\");\nconst UpdateTask = (props) => {\n    \n    const dispatch = useDispatch();\n    useEffect(() => {\n        const taskId = props.match.params.id;\n        dispatch(getUser())\n        .then(res  => setUser(res))\n        dispatch(getTaskById(taskId))\n        .then(res  => setTask(res));\n    }, [dispatch]);\n    \n    const [show, setShow] = useState(false);\n    const [values, setValues] = useState({});\n    const [users, setUser] = useState([]);\n    const [tasks, setTask] = useState();\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    \n\n      const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setValues({\n          ...values,\n          [name]: value,\n        });\n      };\n\n      const handleSubmit =  (e) => {\n        e.preventDefault();\n        dispatch(updateTask(values, props.match.params.id))\n        // .then((res) => {\n        //   setTask((tasks) => [res, ...tasks]);\n        // })\n        window.location.reload();\n      };\n\n    return ( \n            <div>\n                <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Update Task</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <form onSubmit={handleSubmit}>\n             <div className=\"mb-3\">\n                <label htmlFor=\"task\" className=\"form-label\">Task</label>\n                <input\n                  value={values.task}\n                  onChange={handleInputChange}\n                  name=\"task\"\n                  type=\"text\"\n                  placeholder=\"Task\"\n                  className=\"form-control\"/>\n              </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"user\" className=\"form-label\">User</label>\n            <select name=\"user\" id=\"user\" label=\"User\" \n            value={values.user}\n            className=\"form-control\"\n            onChange={handleInputChange}\n            >\n              <option value=\"\" />\n              {users.map((option) => (\n              <option key={option._id} value={option._id}>\n                {option.name}\n              </option>\n            ))}\n      </select>\n          </div>\n          <div className=\"mb-3\">\n              <Button variant=\"primary\" type=\"submit\" onClick={handleClose}>\n                Submit\n              </Button>\n          </div>\n        </form>\n            </Modal.Body>\n          </Modal>\n            <div className=\"container mt-5\">\n                <ul className=\"list-group\">\n                    {props.tasks.map((task) => ( \n                    <li className=\"list-group-item\">\n                        <div className=\"row\">\n                        <div className=\"col-4\">Task : {task.description}</div>\n                        <h5 className=\"col-4\">User : {task.owner.name}</h5>\n                        <Button variant=\"primary\" onClick={handleShow}>Update</Button>\n                        </div>\n                    </li>\n                    ))}\n                </ul>\n          </div>\n          </div>\n       \n    );\n}\nconst mapStateToProps = (state) => ({\n    tasks: state.tasks,\n  });\nexport default connect(mapStateToProps)(UpdateTask);","/home/rails/Documents/backend/client/src/components/input.jsx",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":7,"column":17,"nodeType":"122","endLine":7,"endColumn":247},{"ruleId":"123","severity":1,"message":"124","line":16,"column":6,"nodeType":"125","endLine":16,"endColumn":16,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":10,"column":7,"nodeType":"129","messageId":"130","endLine":10,"endColumn":12},{"ruleId":"123","severity":1,"message":"131","line":35,"column":7,"nodeType":"125","endLine":35,"endColumn":17,"suggestions":"132"},{"ruleId":"127","severity":1,"message":"133","line":3,"column":8,"nodeType":"129","messageId":"130","endLine":3,"endColumn":11},{"ruleId":"123","severity":1,"message":"131","line":18,"column":6,"nodeType":"125","endLine":18,"endColumn":16,"suggestions":"134"},{"ruleId":"127","severity":1,"message":"128","line":7,"column":7,"nodeType":"129","messageId":"130","endLine":7,"endColumn":12},{"ruleId":"123","severity":1,"message":"131","line":17,"column":8,"nodeType":"125","endLine":17,"endColumn":18,"suggestions":"135"},{"ruleId":"127","severity":1,"message":"136","line":22,"column":12,"nodeType":"129","messageId":"130","endLine":22,"endColumn":17},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.users.user._id'. Either include it or remove the dependency array.","ArrayExpression",["139"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["140"],"'Joi' is defined but never used.",["141"],["142"],"'tasks' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"145","fix":"147"},{"desc":"145","fix":"148"},"Update the dependencies array to be: [dispatch, props.users.user._id]",{"range":"149","text":"150"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"151","text":"152"},{"range":"153","text":"152"},{"range":"154","text":"152"},[422,432],"[dispatch, props.users.user._id]",[1277,1287],"[dispatch, props.match.params.id]",[590,600],[606,616]]