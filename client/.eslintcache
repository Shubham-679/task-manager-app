[{"/home/rails/Documents/backend/client/src/index.js":"1","/home/rails/Documents/backend/client/src/store.js":"2","/home/rails/Documents/backend/client/src/reportWebVitals.js":"3","/home/rails/Documents/backend/client/src/App.js":"4","/home/rails/Documents/backend/client/src/reducers/index.js":"5","/home/rails/Documents/backend/client/src/components/deleteAccount.jsx":"6","/home/rails/Documents/backend/client/src/components/notFound.jsx":"7","/home/rails/Documents/backend/client/src/components/logout.jsx":"8","/home/rails/Documents/backend/client/src/components/home.jsx":"9","/home/rails/Documents/backend/client/src/components/signup.jsx":"10","/home/rails/Documents/backend/client/src/components/addTasks.jsx":"11","/home/rails/Documents/backend/client/src/components/navbar.jsx":"12","/home/rails/Documents/backend/client/src/components/profile.jsx":"13","/home/rails/Documents/backend/client/src/components/addProject.jsx":"14","/home/rails/Documents/backend/client/src/components/project.jsx":"15","/home/rails/Documents/backend/client/src/components/login.jsx":"16","/home/rails/Documents/backend/client/src/reducers/taskReducer.js":"17","/home/rails/Documents/backend/client/src/reducers/projectReducer.js":"18","/home/rails/Documents/backend/client/src/reducers/userReducer.js":"19","/home/rails/Documents/backend/client/src/actions/projectAction.js":"20","/home/rails/Documents/backend/client/src/actions/taskAction.js":"21","/home/rails/Documents/backend/client/src/actions/userAction.js":"22","/home/rails/Documents/backend/client/src/components/tasks.jsx":"23","/home/rails/Documents/backend/client/src/components/updateTask.jsx":"24","/home/rails/Documents/backend/client/src/components/input.jsx":"25"},{"size":926,"mtime":1611729669829,"results":"26","hashOfConfig":"27"},{"size":540,"mtime":1611229149279,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1610357711063,"results":"29","hashOfConfig":"27"},{"size":1701,"mtime":1611914587180,"results":"30","hashOfConfig":"27"},{"size":286,"mtime":1611832505620,"results":"31","hashOfConfig":"27"},{"size":633,"mtime":1611814487717,"results":"32","hashOfConfig":"27"},{"size":188,"mtime":1610947286015,"results":"33","hashOfConfig":"27"},{"size":454,"mtime":1611814527519,"results":"34","hashOfConfig":"27"},{"size":243,"mtime":1611725591575,"results":"35","hashOfConfig":"27"},{"size":3057,"mtime":1612175705260,"results":"36","hashOfConfig":"27"},{"size":1571,"mtime":1611908229470,"results":"37","hashOfConfig":"27"},{"size":2720,"mtime":1611839975540,"results":"38","hashOfConfig":"27"},{"size":4763,"mtime":1611814541703,"results":"39","hashOfConfig":"27"},{"size":4102,"mtime":1612167525338,"results":"40","hashOfConfig":"27"},{"size":6359,"mtime":1612172174098,"results":"41","hashOfConfig":"27"},{"size":3975,"mtime":1612188924689,"results":"42","hashOfConfig":"27"},{"size":939,"mtime":1612156646015,"results":"43","hashOfConfig":"27"},{"size":572,"mtime":1611837483884,"results":"44","hashOfConfig":"27"},{"size":786,"mtime":1611819968485,"results":"45","hashOfConfig":"27"},{"size":1472,"mtime":1611837065118,"results":"46","hashOfConfig":"27"},{"size":1877,"mtime":1612161123496,"results":"47","hashOfConfig":"27"},{"size":1854,"mtime":1611837181049,"results":"48","hashOfConfig":"27"},{"size":3275,"mtime":1611912343139,"results":"49","hashOfConfig":"27"},{"size":3492,"mtime":1612157212743,"results":"50","hashOfConfig":"27"},{"size":616,"mtime":1612184253997,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1m20khj",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/home/rails/Documents/backend/client/src/index.js",[],["108","109"],"/home/rails/Documents/backend/client/src/store.js",[],"/home/rails/Documents/backend/client/src/reportWebVitals.js",[],"/home/rails/Documents/backend/client/src/App.js",[],"/home/rails/Documents/backend/client/src/reducers/index.js",[],"/home/rails/Documents/backend/client/src/components/deleteAccount.jsx",[],"/home/rails/Documents/backend/client/src/components/notFound.jsx",[],"/home/rails/Documents/backend/client/src/components/logout.jsx",[],"/home/rails/Documents/backend/client/src/components/home.jsx",[],"/home/rails/Documents/backend/client/src/components/signup.jsx",["110"],"import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Joi from \"joi-browser\";\nimport { addUser } from \"../actions/userAction\";\nimport { toast } from \"react-toastify\";\n\nconst initialValues = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  age: \"\",\n};\n\nconst Signup = (props) => {\n  const [values, setValues] = useState(initialValues);\n  const dispatch = useDispatch();\n\n  const schema = {\n  \n    name: Joi.string()\n      .required()\n      .label(\"Name\"),\n    email: Joi.string()\n      .required()\n      .label(\"Email\"),\n    password: Joi.string()\n\n      .required()\n      .min(7)\n      .max(15)\n      .label(\"Password\"),\n    age: Joi.number()\n      .required()\n      .min(2)\n      .max(2)\n      .label(\"Age\")\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addUser(values))\n    .then(()=>{\n      toast.success(\"You Registered Succesfully, Now You Can Login\");\n      props.history.replace('/login')\n    })\n    .catch(()=> {\n      toast.error(\"Unexpected error\");\n      props.history.replace('/signup')\n    })\n\n  } \n\n  return (\n    <div style={{backgroundColor : '#ffcccc' , }}>\n      <h1 className=\"m-4\"> New Registration</h1>\n      <div className=\"d-flex justify-content-center\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-2\">\n            <label className=\"form-label float-left\" htmlFor=\"Name\">Name</label>\n            <input\n              value={values.name}\n              onChange={handleInputChange}\n              name=\"name\"\n              placeholder=\"Enter Your Name\"\n              className=\"form-control\"\n            />\n          </div>\n          <div className=\"mb-2\">\n            <label className=\"form-label float-left\" htmlFor=\"Email\"> E-mail</label>\n            <input\n              value={values.email}\n              onChange={handleInputChange}\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Your Email\"\n              className=\"form-control\"\n            />\n          </div>\n          <div className=\"mb-2\">\n            <label className=\"form-label float-left\" htmlFor=\"Password\">Password</label>\n            <input\n              value={values.password}\n              onChange={handleInputChange}\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Enter Your Password\"\n              className=\"form-control\"\n            />\n          </div>\n          <div className=\"mb-2\">\n            <label className=\"form-label float-left\" htmlFor=\"Age\">Age</label>\n            <input\n              value={values.age}\n              onChange={handleInputChange}\n              name=\"age\"\n              placeholder=\"Enter Your Age\"\n              className=\"form-control\"\n            />\n          </div>\n          <button className=\"btn btn-primary m-2\" type=\"submit\">Submit</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","/home/rails/Documents/backend/client/src/components/addTasks.jsx",["111"],"import { Link, Redirect } from \"react-router-dom\";\nimport { connect, useDispatch } from \"react-redux\";\nimport React, { useEffect } from \"react\";\nimport {  getUserTasks } from \"../actions/taskAction\";\n\n\n\nconst token = localStorage.getItem(\"x-auth-token\");\nconst AddTasks = (props) => {\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const userId = props.users.user._id\n    dispatch(getUserTasks(userId));\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      {!token && (\n        <React.Fragment>\n          <Redirect to=\"/not-found\" />\n        </React.Fragment>\n      )}\n\n      {token && (\n        <React.Fragment>\n          <div className=\"m-5\">\n            <h1> Welcome {props.users.user.name}..! </h1>\n            <h5> Now You Can Add Your Tasks... Here </h5>\n          </div>\n\n          <div className=\"container\">\n            <ul className=\"list-group\">\n              {props.tasks.map((task) => (\n                <Link to={`/tasks/${task._id}`}  style={{textDecoration: 'none'}}>\n                <div className=\"list-group-item col-sm-5 card text-white bg-secondary mb-3 m-2\" key={task._id}>\n                <div className=\"card-header\">Task : {task.description}</div>\n                <h5 className=\"card-title\">Project : {task.project.title}</h5>\n                 </div>\n                </Link>\n              ))}\n            </ul>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  users: state.users,\n  tasks: state.tasks,\n});\n\nexport default connect(mapStateToProps)(AddTasks);","/home/rails/Documents/backend/client/src/components/navbar.jsx",[],"/home/rails/Documents/backend/client/src/components/profile.jsx",[],"/home/rails/Documents/backend/client/src/components/addProject.jsx",[],"/home/rails/Documents/backend/client/src/components/project.jsx",["112","113"],"import React, { useEffect, useState } from 'react';\nimport { connect, useDispatch } from \"react-redux\";\nimport { findProject, updateProject} from '../actions/projectAction'\nimport { addTask, getTasks } from '../actions/taskAction'\nimport { getUser} from '../actions/userAction'\nimport {Link, withRouter} from 'react-router-dom';\nimport { Button, Modal }  from \"react-bootstrap\"\n\n\nconst token = localStorage.getItem(\"x-auth-token\");\nconst Project = (props) => {\n\n    const dispatch = useDispatch();\n    const [projectValues, setProjectValues] = useState([{}]);\n    const [values, setValues] = useState({});\n    const [users, setUser] = useState([]);\n    const [tasks, setTask] = useState([]);\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [show1, setShow1] = useState(false);\n    const handleClose1 = () => setShow1(false);\n    const handleShow1 = () => setShow1(true);\n    \n    useEffect(()=>{\n        const projectId = props.match.params.id;\n        dispatch(findProject(projectId))\n        .then(res  => setProjectValues(res));\n        dispatch(getUser())\n        .then(res  => setUser(res));\n        dispatch(getTasks(projectId))\n        .then(res  => setTask(res));\n    },[dispatch])\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setProjectValues({ \n          ...projectValues,\n          [name]: value,\n        });\n      };\n    \n      const handleSubmit =  (e) => {\n        e.preventDefault();\n        dispatch(updateProject(projectValues))\n        .then((res) => {\n          setProjectValues((projectValues) => res);\n        })\n      };\n\n      const handleInputChangeTask = (e) => {\n        const { name, value } = e.target;\n        setValues({\n          ...values,\n          [name]: value,\n        });\n      };\n\n      const handleSubmitTask =  (e) => {\n        e.preventDefault();\n        const projectId = props.match.params.id;\n        dispatch(addTask(values, projectId))\n        .then((res) => {\n          setTask((tasks) => [res, ...tasks]);\n        })\n        window.location.reload();\n      };\n      \n    return ( \n        <div>\n           <div className=\"col-sm-10 card text-white bg-secondary mb-3 mt-4 \"\n           style={{marginLeft:\"100px\"}}\n           >\n               <div className=\"card-header\">title : {projectValues.title}</div>\n               <h5 className=\"card-title\">description : {projectValues.description}</h5>\n               <div>\n              <Button className=\"btn m-2\" variant=\"primary\" onClick={handleShow}>Update</Button>\n              <Button variant=\"primary\" onClick={handleShow1}>\n              Add Task\n            </Button>\n               </div>\n              </div>\n            {/* <h2>title : {projectValues.title}</h2>\n            <h2> description : {projectValues.description}</h2> */}\n            <div className=\"m-2\">\n          <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>New Project</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <form onSubmit={handleSubmit}>\n              <div className=\"mb-3\">\n                <label htmlFor=\"title\" className=\"form-label\">Title</label>\n                <input\n                  value={projectValues.title}\n                  onChange={handleInputChange}\n                  name=\"title\"\n                  type=\"text\"\n                  placeholder=\"Title\"\n                  className=\"form-control\"\n                />\n             </div>\n\n             <div className=\"mb-3\">\n                <label htmlFor=\"password\" className=\"form-label\">Description</label>\n                <input\n                  value={projectValues.description}\n                  onChange={handleInputChange}\n                  name=\"description\"\n                  type=\"text\"\n                  placeholder=\"Description\"\n                  className=\"form-control\"/>\n             </div>\n          <div className=\"mb-3\">\n              <Button variant=\"primary\" type=\"submit\" onClick={handleClose}>Submit</Button>\n          </div>\n        </form>\n            </Modal.Body>\n          </Modal>\n          </div>\n\n\n          <div className=\"m-2\">\n\n          <Modal show={show1} onHide={handleClose1}>\n            <Modal.Header closeButton>\n              <Modal.Title>Assign Task</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <form onSubmit={handleSubmitTask}>\n             <div className=\"mb-3\">\n                <label htmlFor=\"task\" className=\"form-label\">Task</label>\n                <input\n                  value={values.task}\n                  onChange={handleInputChangeTask}\n                  name=\"task\"\n                  type=\"text\"\n                  placeholder=\"Task\"\n                  className=\"form-control\"/>\n              </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"user\" className=\"form-label\">User</label>\n            <select name=\"user\" id=\"user\" label=\"User\" \n            value={values.user}\n            className=\"form-control\"\n            onChange={handleInputChangeTask}\n            >\n              <option value=\"\" />\n              {users.map((option) => (\n              <option key={option._id} value={option._id}>\n                {option.name}\n              </option>\n            ))}\n      </select>\n          </div>\n          <div className=\"mb-3\">\n              <Button variant=\"primary\" type=\"submit\" onClick={handleClose1}>\n                Submit\n              </Button>\n          </div>\n        </form>\n            </Modal.Body>\n          </Modal>\n          </div>\n          <div className=\"container\">\n          <div className=\"row\"\n          style={{marginLeft:\"100px\"}}>\n            {tasks.map(task => (      \n              <div className=\"col-sm-5 card text-white bg-dark mb-3 m-2\" key={task._id}\n              >\n               <div className=\"card-header\">Task : {task.description}</div>\n               <h5 className=\"card-title\">User : {task.owner.name}</h5>\n               <Link to={`/updatetask/${task._id}`} className=\"stretched-link\"></Link>\n              </div>\n            ))}\n          </div>\n          </div>\n        </div>\n\n     );\n}\n\nconst mapStateToProps = (state) => ({\n    users: state.users,\n  });\n \nexport default withRouter(connect(mapStateToProps)(Project));\n","/home/rails/Documents/backend/client/src/components/login.jsx",["114"],"/home/rails/Documents/backend/client/src/reducers/taskReducer.js",[],"/home/rails/Documents/backend/client/src/reducers/projectReducer.js",[],"/home/rails/Documents/backend/client/src/reducers/userReducer.js",[],"/home/rails/Documents/backend/client/src/actions/projectAction.js",[],"/home/rails/Documents/backend/client/src/actions/taskAction.js",[],"/home/rails/Documents/backend/client/src/actions/userAction.js",[],"/home/rails/Documents/backend/client/src/components/tasks.jsx",["115"],"import { Redirect } from \"react-router-dom\";\nimport { connect, useDispatch } from \"react-redux\";\nimport React, { useEffect, useState } from \"react\";\nimport { getTaskById, toggleTask} from \"../actions/taskAction\";\n\nconst token = localStorage.getItem(\"x-auth-token\");\nconst Tasks = (props) => {\n  const options = [\n    { id: 1, name: \"Processing\", value: false },\n    { id: 2, name: \"Done\", value: true },\n  ];\n  const dispatch = useDispatch();\n  const [status, setStatus] = useState(\"\");\n\n  useEffect(() => {\n    const taskId = props.match.params.id;\n    dispatch(getTaskById(taskId));\n  }, [dispatch]);\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    const isTrueSet = value === \"true\";\n    setStatus(isTrueSet);\n  };\n  const handleUpdate = (task) => {\n    task.completed = status;\n    dispatch(toggleTask(task, token));\n  };\n\n  return (\n    <div className=\"container\">\n      {!token && (\n        <React.Fragment>\n          <Redirect to=\"/not-found\" />\n        </React.Fragment>\n      )}\n\n      {token && (\n        <React.Fragment>\n          <div className=\"m-5\">\n            <h1> Welcome {props.users.user.name}..! </h1>\n            <h5> Now You Can Add Your Tasks... Here </h5>\n          </div>\n\n          <div className=\"container\">\n            <ul className=\"list-group\">\n              {props.tasks.map((task) => (\n                <li className=\"list-group-item\" key={task._id}>\n                  <div className=\"row\">\n                    <div className=\"col-1\">\n                      {task.completed ? (\n                        <i class=\"fa fa-check fa-3x\" aria-hidden=\"true\"></i>\n                      ) : (\n                          <i class=\"fa fa-times fa-3x\" aria-hidden=\"true\"></i>\n                        )}\n                    </div>\n                    <div className=\"col-4\">{task.description}</div>\n                    <div className=\"col-3\">\n                      \n                        <label htmlFor=\"status\" className=\"form-label\">\n                          Status\n                        </label>\n                        <select\n                          name=\"status\"\n                          id=\"status\"\n                          label=\"Status\"\n                          className=\"form-control\"\n                          onChange={handleChange}\n                        >\n                          <option value=\"\" />\n                          {options.map((option) => (\n                            <option key={option.id} value={option.value}>\n                              {option.name}\n                            </option>\n                          ))}\n                        </select>\n                   \n                    </div>\n                    <div className=\"col-4\">\n                      <button\n                        className=\"btn btn-warning\"\n                        onClick={() => handleUpdate(task)}\n                      >\n                        Update\n                      </button>\n                      </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  users: state.users,\n  tasks: state.tasks,\n});\n\nexport default connect(mapStateToProps)(Tasks);\n","/home/rails/Documents/backend/client/src/components/updateTask.jsx",["116","117","118"],"import React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { getTaskById, updateTask } from '../actions/taskAction';\nimport { Button, Modal }  from \"react-bootstrap\";\nimport { getUser} from '../actions/userAction'\n\nconst token = localStorage.getItem(\"x-auth-token\");\nconst UpdateTask = (props) => {\n    \n    const dispatch = useDispatch();\n    useEffect(() => {\n        const taskId = props.match.params.id;\n        dispatch(getUser())\n        .then(res  => setUser(res))\n        dispatch(getTaskById(taskId))\n        .then(res  => setTask(res));\n    }, [dispatch]);\n    \n    const [show, setShow] = useState(false);\n    const [values, setValues] = useState({});\n    const [users, setUser] = useState([]);\n    const [tasks, setTask] = useState();\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    \n\n      const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setValues({\n          ...values,\n          [name]: value,\n        });\n      };\n\n      const handleSubmit =  (e) => {\n        e.preventDefault();\n        dispatch(updateTask(values, props.match.params.id))\n        // .then((res) => {\n        //   setTask((tasks) => [res, ...tasks]);\n        // })\n        window.location.reload();\n      };\n\n    return ( \n            <div>\n                <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Update Task</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <form onSubmit={handleSubmit}>\n             <div className=\"mb-3\">\n                <label htmlFor=\"task\" className=\"form-label\">Task</label>\n                <input\n                  value={values.task}\n                  onChange={handleInputChange}\n                  name=\"task\"\n                  type=\"text\"\n                  placeholder=\"Task\"\n                  className=\"form-control\"/>\n              </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"user\" className=\"form-label\">User</label>\n            <select name=\"user\" id=\"user\" label=\"User\" \n            value={values.user}\n            className=\"form-control\"\n            onChange={handleInputChange}\n            >\n              <option value=\"\" />\n              {users.map((option) => (\n              <option key={option._id} value={option._id}>\n                {option.name}\n              </option>\n            ))}\n      </select>\n          </div>\n          <div className=\"mb-3\">\n              <Button variant=\"primary\" type=\"submit\" onClick={handleClose}>\n                Submit\n              </Button>\n          </div>\n        </form>\n            </Modal.Body>\n          </Modal>\n            <div className=\"container mt-5\">\n                <ul className=\"list-group\">\n                    {props.tasks.map((task) => ( \n                    <li className=\"list-group-item\">\n                        <div className=\"row\">\n                        <div className=\"col-4\">Task : {task.description}</div>\n                        <h5 className=\"col-4\">User : {task.owner.name}</h5>\n                        <Button variant=\"primary\" onClick={handleShow}>Update</Button>\n                        </div>\n                    </li>\n                    ))}\n                </ul>\n          </div>\n          </div>\n       \n    );\n}\nconst mapStateToProps = (state) => ({\n    tasks: state.tasks,\n  });\nexport default connect(mapStateToProps)(UpdateTask);","/home/rails/Documents/backend/client/src/components/input.jsx",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":18,"column":9,"nodeType":"125","messageId":"126","endLine":18,"endColumn":15},{"ruleId":"127","severity":1,"message":"128","line":16,"column":6,"nodeType":"129","endLine":16,"endColumn":16,"suggestions":"130"},{"ruleId":"123","severity":1,"message":"131","line":10,"column":7,"nodeType":"125","messageId":"126","endLine":10,"endColumn":12},{"ruleId":"127","severity":1,"message":"132","line":35,"column":7,"nodeType":"129","endLine":35,"endColumn":17,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":68,"column":25,"nodeType":"125","messageId":"136","endLine":68,"endColumn":31},{"ruleId":"127","severity":1,"message":"132","line":18,"column":6,"nodeType":"129","endLine":18,"endColumn":16,"suggestions":"137"},{"ruleId":"123","severity":1,"message":"131","line":7,"column":7,"nodeType":"125","messageId":"126","endLine":7,"endColumn":12},{"ruleId":"127","severity":1,"message":"132","line":17,"column":8,"nodeType":"129","endLine":17,"endColumn":18,"suggestions":"138"},{"ruleId":"123","severity":1,"message":"139","line":22,"column":12,"nodeType":"125","messageId":"126","endLine":22,"endColumn":17},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'schema' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.users.user._id'. Either include it or remove the dependency array.","ArrayExpression",["142"],"'token' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["143"],"no-use-before-define","'errors' was used before it was defined.","usedBeforeDefined",["144"],["145"],"'tasks' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"148","fix":"150"},{"desc":"148","fix":"151"},"Update the dependencies array to be: [dispatch, props.users.user._id]",{"range":"152","text":"153"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"154","text":"155"},{"range":"156","text":"155"},{"range":"157","text":"155"},[422,432],"[dispatch, props.users.user._id]",[1277,1287],"[dispatch, props.match.params.id]",[590,600],[606,616]]