[{"/home/rails/Documents/backend/client/src/index.js":"1","/home/rails/Documents/backend/client/src/reportWebVitals.js":"2","/home/rails/Documents/backend/client/src/store.js":"3","/home/rails/Documents/backend/client/src/App.js":"4","/home/rails/Documents/backend/client/src/reducers/index.js":"5","/home/rails/Documents/backend/client/src/components/addTasks.jsx":"6","/home/rails/Documents/backend/client/src/components/home.jsx":"7","/home/rails/Documents/backend/client/src/components/notFound.jsx":"8","/home/rails/Documents/backend/client/src/components/logout.jsx":"9","/home/rails/Documents/backend/client/src/components/deleteAccount.jsx":"10","/home/rails/Documents/backend/client/src/components/signup.jsx":"11","/home/rails/Documents/backend/client/src/components/navbar.jsx":"12","/home/rails/Documents/backend/client/src/components/login.jsx":"13","/home/rails/Documents/backend/client/src/components/profile.jsx":"14","/home/rails/Documents/backend/client/src/components/addProject.jsx":"15","/home/rails/Documents/backend/client/src/components/project.jsx":"16","/home/rails/Documents/backend/client/src/reducers/userReducer.js":"17","/home/rails/Documents/backend/client/src/reducers/projectReducer.js":"18","/home/rails/Documents/backend/client/src/reducers/taskReducer.js":"19","/home/rails/Documents/backend/client/src/actions/index.js":"20"},{"size":926,"mtime":1611729669829,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1610357711063,"results":"23","hashOfConfig":"22"},{"size":540,"mtime":1611229149279,"results":"24","hashOfConfig":"22"},{"size":1791,"mtime":1611755046895,"results":"25","hashOfConfig":"22"},{"size":284,"mtime":1611558567590,"results":"26","hashOfConfig":"22"},{"size":3228,"mtime":1611725505889,"results":"27","hashOfConfig":"22"},{"size":243,"mtime":1611725591575,"results":"28","hashOfConfig":"22"},{"size":188,"mtime":1610947286015,"results":"29","hashOfConfig":"22"},{"size":443,"mtime":1611126436799,"results":"30","hashOfConfig":"22"},{"size":622,"mtime":1611051842262,"results":"31","hashOfConfig":"22"},{"size":2605,"mtime":1611741530928,"results":"32","hashOfConfig":"22"},{"size":2779,"mtime":1611757264011,"results":"33","hashOfConfig":"22"},{"size":2245,"mtime":1611755377082,"results":"34","hashOfConfig":"22"},{"size":4752,"mtime":1611044317870,"results":"35","hashOfConfig":"22"},{"size":3920,"mtime":1611729425043,"results":"36","hashOfConfig":"22"},{"size":5645,"mtime":1611750764348,"results":"37","hashOfConfig":"22"},{"size":737,"mtime":1611756597176,"results":"38","hashOfConfig":"22"},{"size":627,"mtime":1611727299711,"results":"39","hashOfConfig":"22"},{"size":779,"mtime":1611749971249,"results":"40","hashOfConfig":"22"},{"size":4506,"mtime":1611750857116,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1m20khj",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/rails/Documents/backend/client/src/index.js",[],["87","88"],"/home/rails/Documents/backend/client/src/reportWebVitals.js",[],"/home/rails/Documents/backend/client/src/store.js",[],"/home/rails/Documents/backend/client/src/App.js",["89","90","91"],"import { Route, Switch,Redirect } from 'react-router-dom';\nimport { ToastContainer} from 'react-toastify';\nimport Navbar from \"./components/navbar\";\nimport Home from './components/home';\nimport Login from './components/login';\nimport Signup from './components/signup';\nimport Tasks from './components/addTasks';\nimport NotFound from './components/notFound'\nimport Logout from './components/logout';\nimport Profile from './components/profile';\nimport Deleteaccount from './components/deleteAccount';\nimport addProject from './components/addProject';\nimport Project from './components/project'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'react-toastify/dist/ReactToastify.css';\nimport React, { useEffect, useState } from 'react';\nimport jwtDecode from \"jwt-decode\";\n\nfunction App() {\n\n  // const [ admin, setAdmin] = useState({})\n  //   useEffect(()=>{\n  //       const token = localStorage.getItem(\"x-auth-token\");\n  //       const admin = jwtDecode(token)\n  //       setAdmin({admin})\n  //   },[])\n\n  return (\n    <div className=\"App\">\n      <ToastContainer/>\n      <Navbar/>\n      \n      <Switch>\n      <Route path=\"/home\" component={Home} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/signup\" component={Signup} />\n      <Route path=\"/tasks\" component={Tasks} />\n      <Route path=\"/addproject\" component={addProject} />\n      <Route path=\"/project/:id\" component={Project} />\n      <Route path=\"/logout\" component={Logout} />\n      <Route path=\"/profile\" component={Profile} />\n      <Route path=\"/delete-account\" component={Deleteaccount} />\n      <Route path=\"/not-found\" component={NotFound}/>\n      <Redirect from=\"/\"  exact to=\"/home\" />\n      <Redirect to=\"/not-found\"/>\n      </Switch>\n    \n    </div>\n  );\n}\n\nexport default App;\n","/home/rails/Documents/backend/client/src/reducers/index.js",[],"/home/rails/Documents/backend/client/src/components/addTasks.jsx",[],"/home/rails/Documents/backend/client/src/components/home.jsx",[],"/home/rails/Documents/backend/client/src/components/notFound.jsx",[],"/home/rails/Documents/backend/client/src/components/logout.jsx",[],"/home/rails/Documents/backend/client/src/components/deleteAccount.jsx",[],"/home/rails/Documents/backend/client/src/components/signup.jsx",[],"/home/rails/Documents/backend/client/src/components/navbar.jsx",["92","93","94"],"import React, { useEffect, useState } from 'react';\nimport { NavLink, Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\n\nconst Navbar = ({users}) => {\n   const [ user, setUser] = useState()\n   \n        return (\n            <div className=\"container-fluid\"  style={{backgroundColor : '#2d4059'}}>\n                <nav className=\"navbar sticky-top navbar-expand-sm navbar-dark\" >\n                    <div className=\"container-fluid\">\n                        \n                        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                            <ul className=\"navbar-nav\">\n\n\n                               { !users.token&& (\n                                   <React.Fragment>\n                                <Link className=\"navbar-brand\" to=\"/home\">Home</Link>\n                                <NavLink className=\"nav-link \" to=\"/login\">Login</NavLink>\n                                <NavLink className=\"nav-link \" to=\"/signup\">SignUp</NavLink>\n                                </React.Fragment>)\n                                }\n\n                                 { users.token && (\n                                   <React.Fragment>\n                                <NavLink className=\"nav-link\" to=\"/tasks\">Dashboard</NavLink>\n                                <NavLink className=\"nav-link\" to=\"/logout\">Logout</NavLink>\n                                <NavLink className=\"nav-link\" to=\"/profile\">Profile</NavLink>\n                                {/* <NavLink className=\"nav-link\" to=\"/delete-account\">Delete Account</NavLink> */}\n                                </React.Fragment>)\n                                }\n                                {/* { users.user.isAdmin === true && (\n                                <React.Fragment>\n                                <NavLink className=\"nav-link\" to=\"/addproject\">Project</NavLink>\n                                <NavLink className=\"nav-link\" to=\"/profile\">Profile</NavLink>\n                                <NavLink className=\"nav-link\" to=\"/logout\">Logout</NavLink>\n                                </React.Fragment>\n                                )} */}\n                                \n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n    const mapStateToProps = (state) => ({\n        users : state.users\n      })\n\nexport default connect(mapStateToProps)(Navbar);","/home/rails/Documents/backend/client/src/components/login.jsx",[],"/home/rails/Documents/backend/client/src/components/profile.jsx",[],"/home/rails/Documents/backend/client/src/components/addProject.jsx",[],"/home/rails/Documents/backend/client/src/components/project.jsx",["95","96"],"import React, { useEffect, useState } from 'react';\nimport { connect, useDispatch } from \"react-redux\";\nimport { findProject, getUser, updateProject, addTask, getTasks } from '../actions/index'\nimport {withRouter} from 'react-router-dom';\nimport { Button, Modal }  from \"react-bootstrap\"\n\n\nconst token = localStorage.getItem(\"x-auth-token\");\nconst Project = (props) => {\n\n    const dispatch = useDispatch();\n    const [projectValues, setProjectValues] = useState({});\n    const [values, setValues] = useState({});\n    const [users, setUser] = useState([]);\n    const [tasks, setTask] = useState([]);\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [show1, setShow1] = useState(false);\n    const handleClose1 = () => setShow1(false);\n    const handleShow1 = () => setShow1(true);\n    \n    useEffect(()=>{\n        const projectId = props.match.params.id;\n        dispatch(findProject(projectId))\n        .then(res  => setProjectValues(res));\n        dispatch(getUser())\n        .then(res  => setUser(res));\n        dispatch(getTasks())\n        .then(res  => setTask(res));\n    },[dispatch])\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setProjectValues({ \n          ...projectValues,\n          [name]: value,\n        });\n      };\n    \n      const handleSubmit =  (e) => {\n        e.preventDefault();\n        dispatch(updateProject(projectValues))\n        .then((res) => {\n          setProjectValues((projectValues) => res);\n        })\n      };\n\n      const handleInputChangeTask = (e) => {\n        const { name, value } = e.target;\n        setValues({\n          ...values,\n          [name]: value,\n        });\n      };\n\n      const handleSubmitTask =  (e) => {\n        e.preventDefault();\n        dispatch(addTask(values))\n        .then((res) => {\n          setTask((tasks) => [res, ...tasks]);\n        })\n        // window.location.reload();\n      };\n      \n    return ( \n        <div>\n            <h2>title : {projectValues.title}</h2>\n            <h2> description : {projectValues.description}</h2>\n            <div className=\"m-2\">\n            <Button variant=\"primary\" onClick={handleShow}>Update</Button>\n          <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>New Project</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <form onSubmit={handleSubmit}>\n              <div className=\"mb-3\">\n                <label htmlFor=\"title\" className=\"form-label\">Title</label>\n                <input\n                  value={projectValues.title}\n                  onChange={handleInputChange}\n                  name=\"title\"\n                  type=\"text\"\n                  placeholder=\"Title\"\n                  className=\"form-control\"\n                />\n             </div>\n\n             <div className=\"mb-3\">\n                <label htmlFor=\"password\" className=\"form-label\">Description</label>\n                <input\n                  value={projectValues.description}\n                  onChange={handleInputChange}\n                  name=\"description\"\n                  type=\"text\"\n                  placeholder=\"Description\"\n                  className=\"form-control\"/>\n             </div>\n          <div className=\"mb-3\">\n              <Button variant=\"primary\" type=\"submit\" onClick={handleClose}>Submit</Button>\n          </div>\n        </form>\n            </Modal.Body>\n          </Modal>\n          </div>\n\n\n          <div className=\"m-2\">\n          <Button variant=\"primary\" onClick={handleShow1}>\n              Add Task\n            </Button>\n\n          <Modal show={show1} onHide={handleClose1}>\n            <Modal.Header closeButton>\n              <Modal.Title>Assign Task</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <form onSubmit={handleSubmitTask}>\n             <div className=\"mb-3\">\n                <label htmlFor=\"task\" className=\"form-label\">Task</label>\n                <input\n                  value={values.task}\n                  onChange={handleInputChangeTask}\n                  name=\"task\"\n                  type=\"text\"\n                  placeholder=\"Task\"\n                  className=\"form-control\"/>\n              </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"user\" className=\"form-label\">User</label>\n            <select name=\"user\" id=\"user\" label=\"User\" \n            value={values.user}\n            className=\"form-control\"\n            onChange={handleInputChangeTask}\n            >\n              <option value=\"\" />\n              {users.map((option) => (\n              <option key={option._id} value={option._id}>\n                {option.name}\n              </option>\n            ))}\n      </select>\n          </div>\n          <div className=\"mb-3\">\n              <Button variant=\"primary\" type=\"submit\" onClick={handleClose1}>\n                Submit\n              </Button>\n          </div>\n        </form>\n            </Modal.Body>\n          </Modal>\n          </div>\n          <div className=\"container\">\n          <div className=\"row\">\n            {tasks.map(task => (\n              <div className=\"col-sm-5 card text-white bg-dark mb-3 m-2\">\n               <div className=\"card-header\">Task : {task.description}</div>\n               <h5 className=\"card-title\">User : {task.owner.name}</h5>\n                </div>\n              ))}\n          </div>\n          </div>\n        </div>\n\n     );\n}\n\nconst mapStateToProps = (state) => ({\n    users: state.users,\n  });\n \nexport default withRouter(connect(mapStateToProps)(Project));\n","/home/rails/Documents/backend/client/src/reducers/userReducer.js",[],"/home/rails/Documents/backend/client/src/reducers/projectReducer.js",["97"],"import project from \"../components/project\";\n\n\nconst projectReducer = (state = [], action) => {\n    switch (action.type) {\n      \n      case \"ADD_PROJECT\":\n        return [...state, action.payload];\n      \n      case \"GET_PROJECT\":\n        return state = action.payload;\n      \n      case \"REMOVE_PROJECT\":\n        return state.filter((a) => a._id !== action.payload._id)\n      \n      case \"SINGLE_PROJECT\":\n        return { project : action.payload}\n\n      case \"UPDATE_PROJECT\":\n        return {\n          project : action.payload\n        }\n          default:\n        return state;\n    }\n  };\n  export default projectReducer;","/home/rails/Documents/backend/client/src/reducers/taskReducer.js",[],"/home/rails/Documents/backend/client/src/actions/index.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":17,"column":17,"nodeType":"104","messageId":"105","endLine":17,"endColumn":26},{"ruleId":"102","severity":1,"message":"106","line":17,"column":28,"nodeType":"104","messageId":"105","endLine":17,"endColumn":36},{"ruleId":"102","severity":1,"message":"107","line":18,"column":8,"nodeType":"104","messageId":"105","endLine":18,"endColumn":17},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"108","line":6,"column":12,"nodeType":"104","messageId":"105","endLine":6,"endColumn":16},{"ruleId":"102","severity":1,"message":"109","line":6,"column":18,"nodeType":"104","messageId":"105","endLine":6,"endColumn":25},{"ruleId":"102","severity":1,"message":"110","line":8,"column":7,"nodeType":"104","messageId":"105","endLine":8,"endColumn":12},{"ruleId":"111","severity":1,"message":"112","line":33,"column":7,"nodeType":"113","endLine":33,"endColumn":17,"suggestions":"114"},{"ruleId":"102","severity":1,"message":"115","line":1,"column":8,"nodeType":"104","messageId":"105","endLine":1,"endColumn":15},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'jwtDecode' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'token' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["118"],"'project' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"121","text":"122"},[1176,1186],"[dispatch, props.match.params.id]"]