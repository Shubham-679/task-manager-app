{"version":3,"sources":["reducers/taskReducer.js","reducers/userReducer.js","reducers/projectReducer.js","reducers/index.js","store.js","components/navbar.jsx","components/home.jsx","actions/userAction.js","components/input.jsx","components/login.jsx","components/signup.jsx","actions/taskAction.js","components/addTasks.jsx","components/tasks.jsx","components/notFound.jsx","components/logout.jsx","components/profile.jsx","components/deleteAccount.jsx","actions/projectAction.js","components/addProject.jsx","components/tableHeader.jsx","components/userTable.jsx","components/searchBox.jsx","components/project.jsx","components/updateTask.jsx","components/dnd.jsx","App.js","reportWebVitals.js","index.js"],"names":["taskReducer","state","action","type","payload","filter","a","_id","map","task","completed","userReducer","token","user","isAdmin","projectReducer","combineReducers","users","tasks","projects","persistConfig","key","storage","whitelist","pReducer","persistReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","connect","className","style","backgroundColor","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","Fragment","to","Home","props","src","alt","updateUser","values","dispatch","axios","patch","headers","data","getUser","get","Input","value","onChange","name","error","label","placeholder","maxlength","htmlFor","maxLength","width","initialValues","email","password","Login","useState","errors","setErrors","setValues","useDispatch","schema","Joi","string","required","number","handleInputChange","e","err","currentTarget","errorMessages","obj","nschema","validate","details","message","validateProperty","onSubmit","preventDefault","er","abortEarly","item","path","post","findUser","then","res","toast","success","localStorage","setItem","window","location","catch","console","log","age","Signup","integer","newUser","addUser","history","replace","getTaskById","taskId","getUserTasks","userId","toggleTask","getItem","useEffect","textDecoration","maxWidth","description","project","title","options","status","setStatus","match","params","handleChange","target","aria-hidden","option","onClick","handleUpdate","NotFound","Component","logoutUser","clear","image","img","method","event","files","FormData","append","put","newPhoto","addProfileImg","delete","removeUser","removeProject","projectId","show","setShow","handleClose","trim","handleRemove","Button","variant","Modal","onHide","Header","closeButton","Title","Body","Object","keys","length","newProject","addProject","cursor","TableHeader","onSort","sortColumn","columns","renderSortIcon","column","sortCoulmn","order","sortColumns","raiseSort","UserTable","index","owner","createdAt","deadline","SearchBox","withRouter","projectValues","setProjectValues","setUser","setTask","setSortColumn","searchQuery","setSearchQuery","moment","toDate","date","setDate","show1","setShow1","handleClose1","useLayoutEffect","findProject","getTasks","filtered","m","toLowerCase","startsWith","handleInputChangeTask","validatePropertyTask","marginLeft","updateProject","selected","minDate","Date","filterDate","day","getDay","validateTask","formattedDate","format","valuesWithDate","obj1","newTask","addTask","sorted","_","orderBy","handleShow","setColumns","uuid","items","display","justifyContent","height","onDragEnd","result","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","splice","removed","copiedItems","entries","columnId","flexDirection","alignItems","margin","provided","snapshot","droppableProps","ref","innerRef","background","isDraggingOver","padding","minHeight","draggableId","draggableProps","dragHandleProps","userSelect","isDragging","color","App","component","AddTasks","Tasks","Project","UpdateTask","Logout","Profile","Deleteaccount","Dnd","from","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","subscribe","getState","ReactDOM","render","loading","document","getElementById"],"mappings":"iQAiCiBA,EAhCG,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACxC,OAAQA,EAAOC,MACb,IAAK,WACH,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOE,UAE3B,IAAK,YACH,OAAeF,EAAOE,QAKxB,IAAK,eACH,MAAO,CAACF,EAAOE,SAEjB,IAAK,cACH,OAAOH,EAAMI,QAAO,SAACC,GAAD,OAAOA,EAAEC,MAAQL,EAAOE,QAAQG,OAEtD,IAAK,cACH,OAAON,EAAMO,KAAI,SAAAC,GAAI,OAChBA,EAAKF,MAAQL,EAAOK,IAArB,YAAC,eACME,GADP,IACaC,UAAYD,EAAKC,YAAaD,KAEjD,IAAK,iBAGL,IAAK,gBACH,OAAeP,EAAOE,QAExB,QACE,OAAOH,ICOAU,EArCK,WAAyB,IAAxBV,EAAuB,uDAAf,GAAIC,EAAW,uCAC1C,OAAQA,EAAOC,MACb,IAAK,WACH,OAAgBD,EAAOE,QAEzB,IAAK,YACH,MAAO,CACLQ,MAAQV,EAAOE,QAAQQ,MACvBC,KAAOX,EAAOE,QAAQS,KACtBC,QAAUZ,EAAOE,QAAQS,KAAKC,SAGlC,IAAK,cACH,MAAgB,GAElB,IAAK,cAMH,IAAK,YACH,OAAO,2BACFb,GADL,IAEEY,KAAOX,EAAOE,UAElB,IAAK,cACH,MAAe,GAKnB,QACE,OAAOH,ICVIc,EAtBM,WAAyB,IAAxBd,EAAuB,uDAAf,GAAIC,EAAW,uCAC3C,OAAQA,EAAOC,MAEb,IAAK,cACH,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOE,UAE3B,IAAK,cACH,OAAeF,EAAOE,QAExB,IAAK,iBACH,OAAOH,EAAMI,QAAO,SAACC,GAAD,OAAOA,EAAEC,MAAQL,EAAOE,QAAQG,OAEtD,IAAK,iBAGL,IAAK,iBACH,MAAO,CAACL,EAAOE,SAEb,QACF,OAAOH,ICfAe,cAAgB,CAC3BC,MAAQN,EACRO,MAAQlB,EACRmB,SAAWJ,ICATK,EAAgB,CACpBC,IAAK,QACLC,QAASA,IACTC,UAAW,CAAC,UAGRC,EAAWC,YAAeL,EAAeJ,GAGzCU,EAAQC,YAAaH,EAASI,YAAgBC,MAG9CC,EAAYC,YAAaL,G,0DCqChBM,eAJa,SAAC/B,GAAD,MAAY,CAChCgB,MAAQhB,EAAMgB,SAGPe,EArDA,SAAC,GAAa,IAAZf,EAAW,EAAXA,MAET,OACI,qBAAKgB,UAAU,kBAAmBC,MAAO,CAACC,gBAAkB,WAA5D,SACI,qBAAKF,UAAU,iDAAf,SACI,sBAAKA,UAAU,kBAAf,UAEI,wBAAQA,UAAU,iBAAiB9B,KAAK,SAASiC,iBAAe,WAAWC,iBAAe,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,oBAAlK,SACI,sBAAMP,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BQ,GAAG,YAA7C,SACI,qBAAIR,UAAU,aAAd,WAGMhB,EAAML,OACR,eAAC,IAAM8B,SAAP,WACA,cAAC,IAAD,CAAMT,UAAU,eAAeU,GAAG,QAAlC,kBACA,cAAC,IAAD,CAASV,UAAU,YAAYU,GAAG,SAAlC,mBACA,cAAC,IAAD,CAASV,UAAU,YAAYU,GAAG,UAAlC,uBAIC1B,EAAML,OAASK,EAAMH,SACtB,eAAC,IAAM4B,SAAP,WACA,cAAC,IAAD,CAAMT,UAAU,eAAeU,GAAG,QAAlC,kBACA,cAAC,IAAD,CAASV,UAAU,WAAWU,GAAG,cAAjC,sBAGA,cAAC,IAAD,CAASV,UAAU,WAAWU,GAAG,UAAjC,uBAIC1B,EAAML,QAAWK,EAAMH,SACxB,eAAC,IAAM4B,SAAP,WACA,cAAC,IAAD,CAAMT,UAAU,eAAeU,GAAG,QAAlC,kBAEA,cAAC,IAAD,CAASV,UAAU,WAAWU,GAAG,OAAjC,mBACA,cAAC,IAAD,CAASV,UAAU,WAAWU,GAAG,WAAjC,qBACA,cAAC,IAAD,CAASV,UAAU,WAAWU,GAAG,UAAjC,sCC9BjBC,EAZF,SAACC,GACV,OACI,sBAAKZ,UAAU,OAAf,UACI,+DACA,uFACA,qBAAKA,UAAU,OAAf,SACI,qBAAKa,IAAI,6NAA6NC,IAAI,W,gECuB7OC,EAAa,SAACC,EAAQrC,GAAT,8CAAmB,WAAOsC,GAAP,iBAAA5C,EAAA,sEACd6C,IAAMC,MAAM,iCAAiCH,EACxE,CAACI,QAAS,CAAC,eAAgBzC,KAFc,gBAC7BC,EAD6B,EACnCyC,KAGRJ,EAAS,CACP/C,KAAM,cACNC,QAASS,IANgC,2CAAnB,uDAUb0C,EAAU,SAAC3C,GAAD,8CAAW,WAAOsC,GAAP,iBAAA5C,EAAA,sEACF6C,IAAMK,IAAI,8BAA8B,CACpEH,QAAS,CAAC,eAAgBzC,KAFI,uBAClBK,EADkB,EACxBqC,KAGRJ,EAAS,CACP/C,KAAM,WACNC,QAASa,IANqB,kBAQzBA,GARyB,2CAAX,uD,iBCZRwC,EAxBD,SAAC,GAAyE,IAAxEC,EAAuE,EAAvEA,MAAOC,EAAgE,EAAhEA,SAAUC,EAAsD,EAAtDA,KAAMzD,EAAgD,EAAhDA,KAAM0D,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,UAEtE,OAAS,gCACH,sBAAK/B,UAAU,aAAf,UACI,uBAAOgC,QAASL,EAAM3B,UAAU,wBAAhC,SAA0D6B,IAC1D,uBACEJ,MAAOA,EACPC,SAAUA,EACVC,KAAMA,EACNzD,KAAMA,EACN4D,YAAaA,EACb9B,UAAU,+BACViC,UAAWF,EAEX9B,MAAO,CAACiC,MAAM,YAGhB,8BACCN,GAAS,uBAAO5B,UAAU,cAAjB,SAAgC4B,UCdhDO,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAgIGC,EA7HD,SAAC1B,GAAW,IAAD,EACM2B,mBAAS,IADf,mBAChBC,EADgB,KACPC,EADO,OAEKF,mBAASJ,GAFd,mBAEhBnB,EAFgB,KAER0B,EAFQ,KAGjBzB,EAAW0B,cAEXC,EAAS,CACbR,MAAOS,IAAIC,SACRC,WACAX,QACAP,MAAM,SACTQ,SAAUQ,IAAIG,SACXD,WACAlB,MAAM,aAoDLoB,EAAoB,SAACC,GACzB,IAAMC,EAAMX,EADmB,EAEPU,EAAEE,cAAlBzB,EAFuB,EAEvBA,KAAMF,EAFiB,EAEjBA,MACR4B,EApDiB,SAAC1B,EAAMF,GAC9B,IAAM6B,EAAG,eAAM3B,EAAOF,GAChB8B,EAAO,eAAM5B,EAAOiB,EAAOjB,IACzBC,EAAUiB,IAAIW,SAASF,EAAKC,GAA5B3B,MACR,OAAOA,EAAQA,EAAM6B,QAAQ,GAAGC,QAAU,KAgDpBC,CAAiBhC,EAAMF,GACzC4B,EAAeF,EAAIxB,GAAQ0B,SACnBF,EAAIxB,GAEhBe,EAAU,2BACL1B,GADI,kBAENW,EAAOF,KAEVgB,GAAU,SAAAD,GAAM,OAAGW,GAAO,OAG5B,OAEE,sBAAKnD,UAAU,YAAf,UACE,oBAAIA,UAAU,MAAd,2BACA,qBAAKA,UAAU,gCAAf,SACE,uBAAM4D,SAvCS,SAACV,GACpBA,EAAEW,iBACF,IAAMC,EAlBO,WACf,IACQlC,EAAUiB,IAAIW,SAASxC,EAAQ4B,EADvB,CAAEmB,YAAY,IACtBnC,MACR,IAAKA,EAAO,OAAO,KACnB,IAJqB,EAIfY,EAAS,GAJM,cAKJZ,EAAM6B,SALF,IAKrB,gCAASO,EAAT,QAAgCxB,EAAOwB,EAAKC,KAAK,IAAMD,EAAKN,SALvC,8BAMrB,OAAOlB,EAYMgB,GACXf,GAAU,SAAAD,GAAM,OAAIsB,GAAM,MACtBA,GAEJ7C,EFpDoB,SAACD,GAAD,8CAAY,WAAOC,GAAP,iBAAA5C,EAAA,sEACL6C,IAAMgD,KAAK,oCAAoClD,GAD1C,uBACpBpC,EADoB,EAC1ByC,KACRJ,EAAS,CACP/C,KAAM,YACNC,QAASS,IAJuB,kBAM3BA,GAN2B,2CAAZ,sDEoDXuF,CAASnD,IACfoD,MAAK,SAACC,GACLC,IAAMC,QAAQ,iBACdC,aAAaC,QAAQ,eAAgBJ,EAAI1F,OACzC+F,OAAOC,SAAW,OAGnBC,OAAM,SAAC1B,GACNoB,IAAM1C,MAAM,mCACZiD,QAAQC,IAAI5B,OAwBZ,UACG,cAAC,EAAD,CACAzB,MAAOT,EAAOoB,MACdV,SAAUuB,EACVpB,MAAM,QACNF,KAAK,QACLzD,KAAK,QACL4D,YAAY,mBACZF,MAAOY,EAAOJ,MACdpC,UAAU,eACV+B,UAAU,OAET,uBAAOvB,GAAG,YAAYR,UAAU,iBAAhC,4DAIF,sBAAKA,UAAU,OAAf,UACE,uBAAOgC,QAAQ,WAAWhC,UAAU,6BAApC,sBAGA,cAAC,EAAD,CACEyB,MAAOT,EAAOqB,SACdX,SAAUuB,EACVtB,KAAK,WACLzD,KAAK,WACL4D,YAAY,sBACZ9B,UAAU,eACV4B,MAAOY,EAAOH,SACdN,UAAU,UAGd,qBAAK/B,UAAU,OAAf,SACE,wBAAQ9B,KAAK,SAAS8B,UAAU,gCAAhC,8BCxHNmC,EAAgB,CACpBR,KAAM,GACNS,MAAO,GACPC,SAAU,GACV0C,IAAK,IAoKQC,EAjKA,SAACpE,GAAW,IAAD,EACK2B,mBAAS,IADd,mBACjBC,EADiB,KACRC,EADQ,OAEIF,mBAASJ,GAFb,mBAEjBnB,EAFiB,KAET0B,EAFS,KAGlBzB,EAAW0B,cAEXC,EAAS,CACbjB,KAAOkB,IAAIC,SACRC,WACAlB,MAAM,QACTO,MAAOS,IAAIC,SACRC,WACAX,QACAP,MAAM,SACTQ,SAAUQ,IAAIG,SACXD,WACAlB,MAAM,YACTkD,IAAKlC,IAAIG,SACND,WACAkC,UACApD,MAAM,QA+CLoB,EAAoB,SAACC,GACzB,IAAMC,EAAMX,EADmB,EAEPU,EAAEE,cAAlBzB,EAFuB,EAEvBA,KAAMF,EAFiB,EAEjBA,MACR4B,EA9CiB,SAAC1B,EAAMF,GAC9B,IAAM6B,EAAG,eAAM3B,EAAOF,GAChB8B,EAAO,eAAM5B,EAAOiB,EAAOjB,IACzBC,EAAUiB,IAAIW,SAASF,EAAKC,GAA5B3B,MACR,OAAOA,EAAQA,EAAM6B,QAAQ,GAAGC,QAAU,KA0CpBC,CAAiBhC,EAAMF,GACzC4B,EAAeF,EAAIxB,GAAQ0B,SACnBF,EAAIxB,GAChBkD,QAAQC,IAAI9D,GAEZ0B,EAAU,2BACL1B,GADI,kBAENW,EAAOF,KAEVgB,GAAU,SAAAD,GAAM,OAAGW,GAAO,OAqB5B,OACE,sBAAKlD,MAAO,CAACC,gBAAkB,IAA/B,UACE,oBAAIF,UAAU,MAAd,+BACA,qBAAKA,UAAU,gCAAf,SACE,uBAAM4D,SAtBS,SAACV,GACpBA,EAAEW,iBACF,IAAMC,EAxCS,WACf,IACQlC,EAAUiB,IAAIW,SAASxC,EAAQ4B,EADvB,CAAEmB,YAAY,IACtBnC,MACR,IAAKA,EAAO,OAAO,KACnB,IAJqB,EAIfY,EAAS,GAJM,cAKJZ,EAAM6B,SALF,IAKrB,gCAASO,EAAT,QAAgCxB,EAAOwB,EAAKC,KAAK,IAAMD,EAAKN,SALvC,8BAMrB,OAAOlB,EAkCIgB,GACXf,GAAU,SAAAD,GAAM,OAAIsB,GAAM,MAC1Be,QAAQC,IAAIhB,GACRA,GACJ7C,EHnGmB,SAACD,GAAD,8CAAY,WAAOC,GAAP,iBAAA5C,EAAA,sEACD6C,IAAMgD,KAAK,8BAA8BlD,GADxC,gBACnBkE,EADmB,EACzB7D,KACRJ,EAAS,CACP/C,KAAM,WACNC,QAAS+G,IAJsB,2CAAZ,sDGmGVC,CAAQnE,IAChBoD,MAAK,WACJE,IAAMC,QAAQ,iDACd3D,EAAMwE,QAAQC,QAAQ,aAEvBT,OAAM,WACLN,IAAM1C,MAAM,oBACZhB,EAAMwE,QAAQC,QAAQ,eASpB,UACE,sBAAKrF,UAAU,kBAAf,UACE,uBAAOA,UAAU,wBAAwBgC,QAAQ,OAAjD,kBACA,cAAC,EAAD,CACEP,MAAOT,EAAOW,KACdD,SAAUuB,EACVtB,KAAK,OACLG,YAAY,kBACZF,MAAOY,EAAOb,KACd3B,UAAU,eACV+B,UAAU,UAGd,sBAAK/B,UAAU,kBAAf,UACE,uBAAOA,UAAU,wBAAwBgC,QAAQ,QAAjD,qBACA,cAAC,EAAD,CACEP,MAAOT,EAAOoB,MACdV,SAAUuB,EACVtB,KAAK,QACLzD,KAAK,QACL4D,YAAY,mBACZ9B,UAAU,eACV4B,MAAOY,EAAOJ,MACdL,UAAU,UAGd,sBAAK/B,UAAU,kBAAf,UACE,uBAAOA,UAAU,wBAAwBgC,QAAQ,WAAjD,sBACA,cAAC,EAAD,CACEP,MAAOT,EAAOqB,SACdX,SAAUuB,EACVtB,KAAK,WACLzD,KAAK,WACL4D,YAAY,sBACZ9B,UAAU,eACV4B,MAAOY,EAAOH,SACdN,UAAU,UAGd,sBAAK/B,UAAU,kBAAf,UACE,uBAAOA,UAAU,wBAAwBgC,QAAQ,MAAjD,iBACA,cAAC,EAAD,CACEP,MAAOT,EAAO+D,IACdrD,SAAUuB,EACVtB,KAAK,MACLG,YAAY,iBACZ9B,UAAU,eACV4B,MAAOY,EAAOuC,IACdhD,UAAU,SAGd,wBAAQ/B,UAAU,qCAAqC9B,KAAK,SAA5D,6BC9IKoH,EAAc,SAACC,EAAQ5G,GAAT,8CAAmB,WAAOsC,GAAP,iBAAA5C,EAAA,sEACjB6C,IAAMK,IAAI,oCAAqCgE,EAAO,CAC/EnE,QAAS,CAAC,eAAgBzC,KAFgB,uBAC/BH,EAD+B,EACrC6C,KAGPJ,EAAS,CACP/C,KAAM,gBACNC,QAASK,IANiC,kBAQrCA,GARqC,2CAAnB,uDAWdgH,EAAe,SAACC,EAAQ9G,GAAT,8CAAmB,WAAOsC,GAAP,iBAAA5C,EAAA,sEACjB6C,IAAMK,IAAI,qCAAsCkE,EAAQ,CAClFrE,QAAS,CAAC,eAAgBzC,KAFiB,uBAChCM,EADgC,EACtCoC,KAGPJ,EAAS,CACP/C,KAAM,iBACNC,QAASc,IANkC,kBAQtCA,GARsC,2CAAnB,uDAsBfyG,EAAa,SAAClH,EAAMG,GAAP,8CAAiB,WAAOsC,GAAP,SAAA5C,EAAA,sEACnC6C,IAAMC,MAAM,+BAAiC3C,EAAKF,IAAKE,EAAM,CACjE4C,QAAS,CAAC,eAAgBzC,KAFa,cAIzCsC,EAAS,CACP/C,KAAM,cACNC,QAASK,IAN8B,kBAQlCA,GARkC,2CAAjB,uDCpDtBG,EAAQ6F,aAAamB,QAAQ,gBAoDpB5F,eALS,SAAC/B,GAAD,MAAY,CAClCgB,MAAOhB,EAAMgB,MACbC,MAAOjB,EAAMiB,SAGAc,EAnDE,SAACa,GAEhB,IAAMK,EAAW0B,cAOjB,OALAiD,qBAAU,WACR,IAAMH,EAAS7E,EAAM5B,MAAMJ,KAAKN,IAChC2C,EAASuE,EAAaC,EAAQ9G,MAC7B,CAACsC,EAAUL,EAAM5B,MAAMJ,KAAKN,MAG7B,sBAAK0B,UAAU,YAAf,WACIrB,GACA,cAAC,IAAM8B,SAAP,UACE,cAAC,IAAD,CAAUC,GAAG,iBAIhB/B,GACC,eAAC,IAAM8B,SAAP,WACE,sBAAKT,UAAU,MAAf,UACE,2CAAcY,EAAM5B,MAAMJ,KAAK+C,KAA/B,UACA,+EAGF,qBAAK3B,UAAU,YAAf,SACE,oBAAIA,UAAU,aAAd,SACE,qBAAKA,UAAU,MAAf,SACCY,EAAM3B,MAAMV,KAAI,SAACC,GAAD,OACf,qBAAKwB,UAAU,qBAAf,SACA,cAAC,IAAD,CAAMU,GAAE,iBAAYlC,EAAKF,KAAQ2B,MAAO,CAAC4F,eAAgB,QAAzD,SACA,sBAAK7F,UAAU,uDACfC,MAAO,CAAC6F,SAAU,SADlB,UAEA,sBAAK9F,UAAU,cAAf,oBAAqCxB,EAAKuH,eAC1C,qBAAI/F,UAAU,aAAd,uBAAsCxB,EAAKwH,QAAQC,eALVzH,EAAKF,uBC/BxDK,EAAQ6F,aAAamB,QAAQ,gBAgGpB5F,eALS,SAAC/B,GAAD,MAAY,CAClCgB,MAAOhB,EAAMgB,MACbC,MAAOjB,EAAMiB,SAGAc,EA/FD,SAACa,GACb,IAAMsF,EAAU,CACd,CAAE1F,GAAI,EAAGmB,KAAM,aAAcF,OAAO,GACpC,CAAEjB,GAAI,EAAGmB,KAAM,OAAQF,OAAO,IAE1BR,EAAW0B,cALM,EAMKJ,mBAAS,IANd,mBAMhB4D,EANgB,KAMRC,EANQ,KAQvBR,qBAAU,WACR,IAAML,EAAS3E,EAAMyF,MAAMC,OAAO9F,GAClCS,EAASqE,EAAYC,MACpB,CAACtE,EAAUL,EAAMyF,MAAMC,OAAO9F,KAEjC,IAAM+F,EAAe,SAACrD,GAAO,IACnBzB,EAAUyB,EAAEsD,OAAZ/E,MAER2E,EAD4B,SAAV3E,IAQpB,OACE,sBAAKzB,UAAU,YAAf,WACIrB,GACA,cAAC,IAAM8B,SAAP,UACE,cAAC,IAAD,CAAUC,GAAG,iBAIhB/B,GACC,eAAC,IAAM8B,SAAP,WACE,sBAAKT,UAAU,MAAf,UACE,2CAAcY,EAAM5B,MAAMJ,KAAK+C,KAA/B,UACA,yEAGF,qBAAK3B,UAAU,YAAf,SACE,oBAAIA,UAAU,aAAd,SACGY,EAAM3B,MAAMV,KAAI,SAACC,GAAD,OACf,oBAAIwB,UAAU,kBAAd,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACGxB,EAAKC,UACJ,mBAAGuB,UAAU,oBAAoByG,cAAY,SAE3C,mBAAGzG,UAAU,oBAAoByG,cAAY,WAGnD,qBAAKzG,UAAU,QAAf,SAAwBxB,EAAKuH,cAC7B,sBAAK/F,UAAU,QAAf,UAEI,uBAAOgC,QAAQ,SAAShC,UAAU,aAAlC,oBAGA,yBACE2B,KAAK,SACLnB,GAAG,SACHqB,MAAM,SACN7B,UAAU,eACV0B,SAAU6E,EALZ,UAOE,wBAAQ9E,MAAM,KACbyE,EAAQ3H,KAAI,SAACmI,GAAD,OACX,wBAAwBjF,MAAOiF,EAAOjF,MAAtC,SACGiF,EAAO/E,MADG+E,EAAOlG,aAO5B,qBAAKR,UAAU,QAAf,SACE,wBACEA,UAAU,kBACV2G,QAAS,kBAzDV,SAACnI,GACpBA,EAAKC,UAAY0H,EACjBlF,EAASyE,EAAWlH,EAAMG,IAuDSiI,CAAapI,IAF9B,0BAhC+BA,EAAKF,qB,wCCtC3CuI,G,+MANX7I,MAAQ,G,wDAEJ,OAAQ,mD,GAHO8I,aCcR/G,gBAHS,SAAC/B,GAAD,MAAY,CAClCW,MAAOX,EAAMgB,MAAML,SAENoB,EAZA,SAAC,GAAe,IAAbpB,EAAY,EAAZA,MACVsC,EAAW0B,cAMjB,OALAiD,qBAAU,WACR3E,ERYsB,SAACtC,GAAD,8CAAW,WAAOsC,GAAP,iBAAA5C,EAAA,sEACN6C,IAAMK,IAAI,qCAAsC,CAC3EH,QAAS,CAAC,eAAgBzC,KAFO,gBACrBC,EADqB,EAC3ByC,KAGRJ,EAAS,CACP/C,KAAM,cACNC,QAASS,IANwB,2CAAX,sDQZbmI,CAAWpI,IACpB6F,aAAawC,QACbtC,OAAOC,SAAW,OAEb,QCwJM5E,gBAJS,SAAC/B,GAAD,MAAY,CAClCgB,MAAOhB,EAAMgB,SAGyB,CAAE+B,cAA3BhB,EA7JC,SAACa,GACf,IA4BIqG,EA5BE9E,EAAgB,CACpBR,KAAMf,EAAM5B,MAAMJ,KAAK+C,KACvBS,MAAOxB,EAAM5B,MAAMJ,KAAKwD,MACxBC,SAAU,GACV0C,IAAKnE,EAAM5B,MAAMJ,KAAKmG,KALC,EAOGxC,mBAASJ,GAPZ,mBAOlBnB,EAPkB,KAOV0B,EAPU,KAQnBzB,EAAW0B,cAEXM,EAAoB,SAACC,GAAO,IAAD,EACPA,EAAEsD,OAAlB7E,EADuB,EACvBA,KAAMF,EADiB,EACjBA,MACdiB,EAAU,2BACL1B,GADI,kBAENW,EAAOF,MAyBZ,OACE,sBAAKzB,UAAU,iBAAf,UACE,+BACEY,EAAM5B,MAAML,OACZ,cAAC,IAAM8B,SAAP,UACE,cAAC,IAAD,CAAUC,GAAG,mBAKhBE,EAAM5B,MAAML,OACX,eAAC,IAAM8B,SAAP,WAEA,sBAAKT,UAAU,MAAf,UAEI,qBAAKA,UAAU,QAAf,SACM,qBACEA,UAAU,gBACVa,IAAKD,EAAM5B,MAAMJ,KAAKsI,IACtBpG,IAAI,OAIZ,sBAAKd,UAAU,SAAf,UACM,0CAAaY,EAAM5B,MAAMJ,KAAK+C,KAA9B,OACA,2CAAcf,EAAM5B,MAAMJ,KAAKwD,MAA/B,OACA,yCAAYxB,EAAM5B,MAAMJ,KAAKmG,IAA7B,aAQR,sBAAK/E,UAAU,MAAf,UAEI,qBAAKA,UAAU,QAAf,SACI,uBAAMmH,OAAO,OAAOlJ,OAAO,IAAIuC,GAAG,IAAlC,UACE,sDACA,uBACEtC,KAAK,OACLyD,KAAK,OACL3B,UAAU,eACV0B,SApDI,SAAC0F,GACvBH,EAAQG,EAAMZ,OAAOa,MAAM,MAqDX,wBACEnJ,KAAK,SACL8B,UAAU,6BACV2G,QAtDG,SAACS,GACtB,IAAM/F,EAAO,IAAIiG,SACjBjG,EAAKkG,OAAO,MAAON,GACnBhG,ETSyB,SAACI,EAAO1C,GAAR,8CAAkB,WAAOsC,GAAP,iBAAA5C,EAAA,sEACX6C,IAAMsG,IAAI,4CAA6CnG,EAAO,CAC5FD,QAAS,CACP,eAAgBzC,EAChB,eAAgB,yBAJuB,uBAC7B8I,EAD6B,EACpCpG,KAMPJ,EAAS,CACP/C,KAAM,YACNC,QAAUsJ,IAT+B,kBAWpCA,GAXoC,2CAAlB,sDSThBC,CAAcrG,EAAMT,EAAM5B,MAAML,SAgDzB,yBAYV,qBAAKqB,UAAU,QAAf,SACE,uBAAM4D,SA/EK,SAACV,GACpBA,EAAEW,iBACF5C,EAASF,EAAWC,EAAQJ,EAAM5B,MAAML,QACrCyF,MAAK,WACJE,IAAMC,QAAQ,sBAEfK,OAAM,WACLN,IAAM1C,MAAM,wBAwER,UACE,sBAAK5B,UAAU,OAAf,UACE,uBAAOA,UAAU,wBAAjB,kBACA,uBACEyB,MAAOT,EAAOW,KACdD,SAAUuB,EACVtB,KAAK,OACLG,YAAY,kBACZ9B,UAAU,oBAGd,sBAAKA,UAAU,OAAf,UACE,uBAAOA,UAAU,wBAAjB,oBACA,uBACEyB,MAAOT,EAAOoB,MACdV,SAAUuB,EACVtB,KAAK,QACLzD,KAAK,QACL4D,YAAY,mBACZ9B,UAAU,oBAGd,sBAAKA,UAAU,OAAf,UACE,uBAAOA,UAAU,wBAAjB,sBACA,uBACEyB,MAAOT,EAAOqB,SACdX,SAAUuB,EACVtB,KAAK,WACLzD,KAAK,WACL4D,YAAY,sBACZ9B,UAAU,oBAGd,sBAAKA,UAAU,OAAf,UACE,uBAAOA,UAAU,wBAAjB,iBACA,uBACEyB,MAAOT,EAAO+D,IACdrD,SAAUuB,EACVtB,KAAK,MACLG,YAAY,iBACZ9B,UAAU,oBAGd,wBAAQA,UAAU,sBAAsB9B,KAAK,SAA7C,qCCzHC6B,gBAJS,SAAC/B,GAAD,MAAY,CACnCW,MAAQX,EAAMgB,MAAML,SAGNoB,EApBO,SAAC,GAAa,IAAZpB,EAAW,EAAXA,MAClBsC,EAAY0B,cAUd,OARAiD,qBAAU,WACV3E,EVwDwB,SAACtC,GAAD,8CAAW,WAAOsC,GAAP,eAAA5C,EAAA,sEAChB6C,IAAMyG,OAAO,iCAAkC,CAChEvG,QAAS,CACP,eAAgBzC,KAHe,cAC7BC,EAD6B,OAMnCqC,EAAS,CACP/C,KAAM,cACNC,QAASS,IARwB,kBAU5BA,GAV4B,2CAAX,sDUxDfgJ,CAAWjJ,IACnByF,MAAK,WACFE,IAAMC,QAAQ,wCACdG,OAAOC,SAAW,SAEvB,CAAC1D,EAAUtC,IAGN,Q,oBCoBOkJ,GAAgB,SAACC,EAAWnJ,GAAZ,8CAAsB,WAAOsC,GAAP,iBAAA5C,EAAA,sEAClB6C,IAAMyG,OAAO,kCAAoCG,EAAW,CACzF1G,QAAS,CAAC,eAAgBzC,KAFqB,gBACpCO,EADoC,EAC1CmC,KAGPJ,EAAS,CACP/C,KAAM,iBACNC,QAASe,IANsC,2CAAtB,uDCzBzBiD,GAAgB,CACpB8D,MAAO,GACPF,YAAa,IAGTpH,GAAQ6F,aAAamB,QAAQ,gBAgLpB5F,gBALS,SAAC/B,GAAD,MAAY,CAClCgB,MAAOhB,EAAMgB,MACbE,SAAUlB,EAAMkB,YAGHa,EA9KI,SAACa,GAAW,IAAD,EACJ2B,oBAAS,GADL,mBACrBwF,EADqB,KACfC,EADe,OAEAzF,mBAASJ,IAFT,mBAErBnB,EAFqB,KAEb0B,EAFa,OAGAH,mBAAS,IAHT,mBAGrBC,EAHqB,KAGbC,EAHa,KAKtBxB,EAAW0B,cACjBiD,qBAAU,WDXiB,IAACjH,ECY1BsC,GDZ0BtC,ECYLA,GDZI,uCAAW,WAAOsC,GAAP,iBAAA5C,EAAA,sEACN6C,IAAMK,IAAI,iCAAkC,CACxEH,QAAS,CAAC,eAAgBzC,KAFQ,gBACvBqH,EADuB,EAC7B3E,KAGPJ,EAAS,CACP/C,KAAM,cACNC,QAAU6H,IANwB,2CAAX,0DCaxB,CAAC/E,IAEJ,IAAMgH,EAAc,kBAAMD,GAAQ,IAG5B/E,EAAoB,SAACC,GACzB,IAAMC,EAAMX,EADmB,EAEPU,EAAEE,cAAlBzB,EAFuB,EAEvBA,KAAMF,EAFiB,EAEjBA,MACR4B,EAAgBM,EAAiBhC,EAAMF,GACzC4B,EAAeF,EAAIxB,GAAQ0B,SACnBF,EAAIxB,GAChBc,GAAU,SAACD,GAAD,OAAYW,GAAO,MAC7BT,EAAU,2BACL1B,GADI,kBAENW,EAAOF,MAINkC,EAAmB,SAAChC,EAAMF,GAC9B,MAAa,UAATE,GACmB,KAAjBF,EAAMyG,OAAsB,oBAErB,gBAATvG,GACmB,KAAjBF,EAAMyG,OAAsB,+BADlC,GA0BIC,EAAY,uCAAG,WAAOnC,GAAP,SAAA3H,EAAA,sDACnB4C,EAAS4G,GAAc7B,EAAQ1H,IAAKK,KADjB,2CAAH,sDAIlB,OACE,eAAC,IAAM8B,SAAP,YACI9B,KAAUiC,EAAM5B,MAAMH,SACtB,cAAC,IAAM4B,SAAP,UACE,cAAC,IAAD,CAAUC,GAAG,iBAIhB/B,IAASiC,EAAM5B,MAAMH,SACpB,eAAC,IAAM4B,SAAP,WACE,sBAAKT,UAAU,iBAAf,UACE,2CACA,qFACA,cAACoI,GAAA,EAAD,CACEpI,UAAU,mBACVqI,QAAQ,UACR1B,QAjEO,kBAAMqB,GAAQ,IA8DvB,4BASF,eAACM,GAAA,EAAD,CAAOP,KAAMA,EAAMQ,OAAQN,EAA3B,UACE,cAACK,GAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACH,GAAA,EAAMI,MAAP,4BAEF,cAACJ,GAAA,EAAMK,KAAP,UACE,iCACE,sBAAK3I,UAAU,OAAf,UACE,uBAAOgC,QAAQ,QAAQhC,UAAU,aAAjC,mBAGA,cAAC,EAAD,CACEyB,MAAOT,EAAOiF,MACdvE,SAAUuB,EACVtB,KAAK,QACLzD,KAAK,OACL4D,YAAY,QACZ9B,UAAU,eACV4B,MAAOY,EAAOyD,WAGlB,sBAAKjG,UAAU,OAAf,UACE,uBAAOgC,QAAQ,WAAWhC,UAAU,aAApC,yBAGA,0BACEyB,MAAOT,EAAO+E,YACdrE,SAAUuB,EACVtB,KAAK,cACLzD,KAAK,OACL4D,YAAY,cACZ9B,UAAU,oBAGd,8BACGwC,EAAOuD,aACN,uBAAO/F,UAAU,cAAjB,SAAgCwC,EAAOuD,gBAG3C,qBAAK/F,UAAU,MAAf,SAEI,cAACoI,GAAA,EAAD,CACEC,QAAQ,UACRnK,KAAK,SACLyI,QAlFC,SAACzD,GACpBA,EAAEW,iBACF,IAAMC,EAVS,WACf,IAAMtB,EAAS,GAIf,MAH4B,KAAxBxB,EAAOiF,MAAMiC,SAAe1F,EAAOyD,MAAQ,qBACb,KAA9BjF,EAAO+E,YAAYmC,SACrB1F,EAAOuD,YAAc,2BACe,IAA/B6C,OAAOC,KAAKrG,GAAQsG,OAAe,KAAOtG,EAKtCgB,GACXf,GAAU,SAACD,GAAD,OAAYsB,GAAM,MACxBA,IACJ7C,ED/DsB,SAACD,EAAQrC,GAAT,8CAAmB,WAAOsC,GAAP,iBAAA5C,EAAA,sEACR6C,IAAMgD,KAAK,iCAAiClD,EAAQ,CACjFI,QAAS,CAAC,eAAgBzC,KAFW,gBAC5BoK,EAD4B,EAClC1H,KAGPJ,EAAS,CACP/C,KAAM,cACNC,QAAS4K,IAN8B,2CAAnB,sDC+DbC,CAAWhI,EAAOrC,KAC3B+D,EAAU,CACRuD,MAAO,GACPF,YAAa,KAEfkC,MAqEgB,8BAYV,qBAAKjI,UAAU,OAAf,SACE,oBAAIA,UAAU,YAAd,SACGY,EAAM1B,SAASX,KAAI,SAACyH,GAAD,OAClB,qBAAIhG,UAAU,kBAAd,UACG,IACD,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,+BAAKgG,EAAQC,MAAb,SAEF,qBAAKjG,UAAU,kBAAf,SACE,+CAAkBgG,EAAQD,YAA1B,SAEF,qBAAK/F,UAAU,gBAAf,SACE,cAAC,IAAD,CAAMU,GAAE,mBAAcsF,EAAQ1H,KAA9B,SACE,mBAAG0B,UAAU,kBAGjB,qBAAKA,UAAU,QAAf,SACE,mBACEA,UAAU,cACVyG,cAAY,OACZE,QAAS,kBAAMwB,EAAanC,IAC5B/F,MAAO,CAAEgJ,OAAQ,oBAnBYjD,EAAQ1H,qB,6DC1H9C4K,GAhCK,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,QAW/BC,EAAiB,SAACC,GACtB,IAAMC,EAAU,eAAOJ,GACvB,OAAGG,EAAOtF,OAASuF,EAAWvF,KAAc,KACnB,QAArBuF,EAAWC,MAAwB,mBAAGzJ,UAAU,mBAC7C,mBAAGA,UAAU,qBAExB,OACI,gCACA,6BACGqJ,EAAQ9K,KAAI,SAACgL,GAAD,OACX,qBAEA5C,QAAS,kBAtBC,SAAC1C,GACf,IAAMyF,EAAW,eAAQN,GACrBM,EAAYzF,OAASA,EACvByF,EAAYD,MAA8B,QAAtBC,EAAYD,MAAkB,OAAS,OAE3DC,EAAYzF,KAAOA,EACnByF,EAAYD,MAAQ,OAEtBN,EAAOO,GAcYC,CAAUJ,EAAOtF,OAFhC,UAEwCsF,EAAO1H,MAC9CyH,EAAeC,KAFXA,EAAOtF,cCgBT2F,GApCG,SAAC,GAAkC,IAAhC3K,EAA+B,EAA/BA,MAAOkK,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,WAWhC,OACI,8BACA,wBAAOpJ,UAAU,uBAAjB,UACE,cAAC,GAAD,CACAqJ,QAbQ,CACd,CAAEpF,KAAK,cAAepC,MAAQ,eAC9B,CAAEoC,KAAK,SAAUpC,MAAQ,UACzB,CAAEoC,KAAK,aAAcpC,MAAQ,QAC7B,CAAEoC,KAAK,YAAcpC,MAAQ,iBAC7B,CAAEoC,KAAK,WAAYpC,MAAQ,aASrBsH,OAAUA,EACVC,WAAcA,IAEd,gCACGnK,EAAMV,KAAI,SAACC,EAAMqL,GAAP,OACT,+BACE,6BAAKrL,EAAKuH,cACV,6BAAKvH,EAAK2H,SACV,6BAAK3H,EAAKsL,MAAMnI,OAChB,6BAAKnD,EAAKuL,YACV,6BAAKvL,EAAKwL,WACV,6BAAK,cAAC,IAAD,CAAMtJ,GAAE,sBAAiBlC,EAAKF,KAA9B,SAAqC,mBAAG0B,UAAU,gCANhDxB,EAAKF,gBCVb2L,GAbG,SAAC,GAAwB,IAAtBxI,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACxB,OACI,uBACAxD,KAAK,OACLyD,KAAK,SACL3B,UAAU,mBACV8B,YAAY,iBACZL,MAAOA,EACPC,SAAU,SAAAwB,GAAC,OAAGxB,EAASwB,OCIzBvE,GAAQ6F,aAAamB,QAAQ,gBAkUpBuE,eAAWnK,aALF,SAAC/B,GAAD,MAAY,CAClCgB,MAAOhB,EAAMgB,MACbC,MAAOjB,EAAMiB,SAGWc,EAjUV,SAACa,GAEf,IAAMK,EAAW0B,cAFQ,EAGiBJ,mBAAS,CAAC,KAH3B,mBAGlB4H,EAHkB,KAGHC,EAHG,OAIG7H,mBAAS,CAAE/D,KAAM,GAAII,KAAM,KAJ9B,mBAIlBoC,EAJkB,KAIV0B,EAJU,OAKAH,mBAAS,IALT,mBAKlBvD,EALkB,KAKXqL,EALW,OAMA9H,mBAAS,IANT,mBAMlBtD,EANkB,KAMXqL,EANW,OAOG/H,mBAAS,IAPZ,mBAOlBC,EAPkB,KAOVC,EAPU,OAQWF,mBAAS,CAAE0B,KAAM,GAAIwF,MAAO,KARvC,mBAQlBL,EARkB,KAQNmB,EARM,OASahI,mBAAS,IATtB,mBASlBiI,EATkB,KASLC,EATK,OAUDlI,mBAASmI,OAASC,UAVjB,mBAUlBC,EAVkB,KAUZC,EAVY,OAWDtI,oBAAS,GAXR,mBAWlBwF,EAXkB,KAWZC,EAXY,OAYCzF,oBAAS,GAZV,mBAYlBuI,GAZkB,KAYXC,GAZW,KAcnB9C,GAAc,kBAAMD,GAAQ,IAG5BgD,GAAe,kBAAMD,IAAS,IAGpCE,2BAAgB,WACd,IAAMnD,EAAYlH,EAAMyF,MAAMC,OAAO9F,GACrCS,ELUyB,SAAC6G,EAAWnJ,GAAZ,8CAAsB,WAAOsC,GAAP,iBAAA5C,EAAA,sEACjB6C,IAAMK,IAAI,kCAAoCuG,EAAW,CACrF1G,QAAS,CAAC,eAAgBzC,KAFmB,uBAClCqH,EADkC,EACxC3E,KAGPJ,EAAS,CACP/C,KAAM,iBACNC,QAAS6H,IANoC,kBAQxCA,GARwC,2CAAtB,sDKVhBkF,CAAYpD,EAAWnJ,KAAQyF,MAAK,SAACC,GAAD,OAAS+F,EAAiB/F,MACvEpD,EAASK,EAAQ3C,KAAQyF,MAAK,SAACC,GAAD,OAASgG,EAAQhG,MAC/CpD,EZxBsB,SAAC6G,EAAWnJ,GAAZ,8CAAsB,WAAOsC,GAAP,iBAAA5C,EAAA,sEAChB6C,IAAMK,IAAI,+BAAgCuG,EAAW,CAC/E1G,QAAS,CAAC,eAAgBzC,KAFgB,uBAC/BM,EAD+B,EACrCoC,KAGPJ,EAAS,CACP/C,KAAM,YACNC,QAASc,IANiC,kBAQrCA,GARqC,2CAAtB,sDYwBbkM,CAASrD,EAAWnJ,KAAQyF,MAAK,SAACC,GAAD,OAASiG,EAAQjG,QAC1D,CAACpD,EAAUL,EAAMyF,MAAMC,OAAO9F,KAEjCoF,qBAAU,WACR,GAAoB,KAAhB4E,EAAoB,CACtB,IAAIY,EAAWxK,EAAM3B,MAAMb,QAAO,SAACiN,GAAD,OAChCA,EAAEtF,YAAYuF,cAAcC,WAAWf,EAAYc,kBACrDhB,EAAQc,GAEU,KAAhBZ,GAAoBF,EAAQ1J,EAAM3B,SACrC,CAACuL,IAEJ,IA8BMvH,GAAoB,SAACC,GACzB,IAAMC,EAAMX,EADmB,EAEPU,EAAEE,cAAlBzB,EAFuB,EAEvBA,KAAMF,EAFiB,EAEjBA,MACR4B,EAjCiB,SAAC1B,EAAMF,GAC9B,MAAa,UAATE,GACmB,KAAjBF,EAAMyG,OAAsB,oBAErB,gBAATvG,GACmB,KAAjBF,EAAMyG,OAAsB,+BADlC,EA6BsBvE,CAAiBhC,EAAMF,GACzC4B,EAAeF,EAAIxB,GAAQ0B,SACnBF,EAAIxB,GAChBc,GAAU,SAACD,GAAD,OAAYW,GAAO,MAC7BiH,EAAiB,2BACZD,GADW,kBAEbxI,EAAOF,MAeN+J,GAAwB,SAACtI,GAC7B,IAAMC,EAAMX,EADuB,EAEXU,EAAEE,cAAlBzB,EAF2B,EAE3BA,KAAMF,EAFqB,EAErBA,MACR4B,EAjDqB,SAAC1B,EAAMF,GAClC,MAAa,SAATE,GACmB,KAAjBF,EAAMyG,OAAsB,mBAErB,SAATvG,GACmB,KAAjBF,EAAMyG,OAAsB,wBADlC,EA6CsBuD,CAAqB9J,EAAMF,GAC7C4B,EAAeF,EAAIxB,GAAQ0B,SACnBF,EAAIxB,GAChBc,GAAU,SAACD,GAAD,OAAYW,GAAO,MAC7BT,EAAU,2BACL1B,GADI,kBAENW,EAAOF,MAsCZ,OACE,iCACIb,EAAM5B,MAAMH,SACZ,cAAC,IAAM4B,SAAP,UACE,cAAC,IAAD,CAAUC,GAAG,iBAGhBE,EAAM5B,MAAMH,SACX,eAAC,IAAM4B,SAAP,WACE,sBACET,UAAU,+CACVC,MAAO,CAAEyL,WAAY,SAFvB,UAIE,qBAAI1L,UAAU,cAAd,qBAAqCmK,EAAclE,SACnD,qBAAIjG,UAAU,kBAAd,2BACiBmK,EAAcpE,eAE/B,gCACE,cAACqC,GAAA,EAAD,CACEpI,UAAU,UACVqI,QAAQ,UACR1B,QA/IK,kBAAMqB,GAAQ,IA4IrB,oBAOA,cAACI,GAAA,EAAD,CAAQC,QAAQ,UAAU1B,QAhJlB,kBAAMoE,IAAS,IAgJvB,4BAKJ,qBAAK/K,UAAU,MAAf,SACE,eAACsI,GAAA,EAAD,CAAOP,KAAMA,EAAMQ,OAAQN,GAA3B,UACE,cAACK,GAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACH,GAAA,EAAMI,MAAP,+BAEF,cAACJ,GAAA,EAAMK,KAAP,UACE,iCACE,sBAAK3I,UAAU,OAAf,UACE,uBAAOgC,QAAQ,QAAQhC,UAAU,aAAjC,mBAGA,cAAC,EAAD,CACEyB,MAAO0I,EAAclE,MACrBvE,SAAUuB,GACVtB,KAAK,QACLzD,KAAK,OACL4D,YAAY,QACZ9B,UAAU,eACV4B,MAAOY,EAAOyD,WAIlB,sBAAKjG,UAAU,OAAf,UACE,uBAAOgC,QAAQ,cAAchC,UAAU,aAAvC,yBAGA,0BACEyB,MAAO0I,EAAcpE,YACrBrE,SAAUuB,GACVtB,KAAK,cACLzD,KAAK,OACL4D,YAAY,cACZ9B,UAAU,iBAEZ,8BACGwC,EAAOuD,aACN,uBAAO/F,UAAU,cAAjB,SAAgCwC,EAAOuD,mBAI7C,qBAAK/F,UAAU,OAAf,SACE,cAACoI,GAAA,EAAD,CACEC,QAAQ,UACRnK,KAAK,SACLyI,QApIC,SAACzD,GACpBA,EAAEW,iBACF,IAAMC,EA5BS,WACf,IAAMtB,EAAS,GAGf,MAFmC,KAA/B2H,EAAclE,MAAMiC,SAAe1F,EAAOyD,MAAQ,qBACb,KAArCkE,EAAcpE,YAAYmC,SAAe1F,EAAOuD,YAAc,2BAC5B,IAA/B6C,OAAOC,KAAKrG,GAAQsG,OAAe,KAAOtG,EAwBtCgB,GACXf,GAAU,SAACD,GAAD,OAAYsB,GAAM,MACxBA,IACJ7C,EL1E2B,SAACD,EAAQrC,GAAT,8CAAmB,WAAOsC,GAAP,iBAAA5C,EAAA,sEACd6C,IAAMsG,IAAI,iCAAmCxG,EAAQ,CACnFI,QAAS,CAAC,eAAgBzC,KAFkB,uBAC/BqH,EAD+B,EACtC3E,KAGRJ,EAAS,CACP/C,KAAM,iBACNC,QAAU6H,IANkC,kBAQvCA,GARuC,2CAAnB,sDK0ElB2F,CAAcxB,EAAexL,KAAQyF,MAAK,SAACC,GAClD+F,GAAiB,SAACD,GAAD,OAAmB9F,QAEtC4D,OAyHgB,gCAaV,qBAAKjI,UAAU,MAAf,SACE,eAACsI,GAAA,EAAD,CAAOP,KAAM+C,GAAOvC,OAAQyC,GAA5B,UACE,cAAC1C,GAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACH,GAAA,EAAMI,MAAP,4BAEF,cAACJ,GAAA,EAAMK,KAAP,UACE,iCACE,sBAAK3I,UAAU,OAAf,UACE,uBAAOgC,QAAQ,OAAOhC,UAAU,aAAhC,kBAGA,0BACEyB,MAAOT,EAAOxC,KACdkD,SAAU8J,GACV7J,KAAK,OACLzD,KAAK,OACL4D,YAAY,OACZ9B,UAAU,iBAEXwC,EAAOhE,MACN,uBAAOwB,UAAU,cAAjB,SAAgCwC,EAAOhE,UAG3C,sBAAKwB,UAAU,OAAf,UACE,uBAAOgC,QAAQ,OAAOhC,UAAU,aAAhC,kBAGA,yBACE2B,KAAK,OACLnB,GAAG,OACHqB,MAAM,OACNJ,MAAOT,EAAOpC,KACdoB,UAAU,eACV0B,SAAU8J,GANZ,UAQE,wBAAQ/J,MAAM,KACbzC,EAAMT,KAAI,SAACmI,GAAD,OACT,wBAAyBjF,MAAOiF,EAAOpI,IAAvC,SACGoI,EAAO/E,MADG+E,EAAOpI,WAKxB,8BACGkE,EAAO5D,MACN,uBAAOoB,UAAU,cAAjB,SAAgCwC,EAAO5D,YAI7C,sBAAKoB,UAAU,OAAf,UACE,uBAAOgC,QAAQ,OAAf,2BACA,uBACA,cAAC,KAAD,CACE4J,SAAUhB,EACVlJ,SAvKI,SAACkJ,GACnBA,GACJC,EAAQD,IAsKUjJ,KAAK,OACLnB,GAAG,OACHqB,MAAM,OACNgK,QAAS,IAAIC,KACbC,WAhLF,SAAAnB,GAChB,IAAMoB,EAAMpB,EAAKqB,SACjB,OAAe,IAARD,GAAqB,IAARA,QAiLN,8BACKxJ,EAAOoI,MACN,uBAAO5K,UAAU,cAAjB,SAAgCwC,EAAOoI,SAG7C,qBAAK5K,UAAU,OAAf,SACE,cAACoI,GAAA,EAAD,CACEC,QAAQ,UACRnK,KAAK,SACLyI,QAnLK,SAACzD,GACxBA,EAAEW,iBACF,IAAMC,EAvDa,WACnB,IAAMtB,EAAS,GAGf,MAF2B,KAAvBxB,EAAOxC,KAAK0J,SAAe1F,EAAOhE,KAAO,oBAClB,KAAvBwC,EAAOpC,KAAKsJ,SAAe1F,EAAO5D,KAAO,oBACP,IAA/BgK,OAAOC,KAAKrG,GAAQsG,OAAe,KAAOtG,EAmDtC0J,GAEX,GADAzJ,GAAU,SAACD,GAAD,OAAYsB,GAAM,OACxBA,EAAJ,CACA,IAAMgE,EAAYlH,EAAMyF,MAAMC,OAAO9F,GAC/B2L,EAAgBzB,KAAOE,GAAMwB,OAAO,MACpCC,EAAc,2BAAQrL,GAAR,IAAgBmL,kBACpClL,EZpImB,SAACqC,EAAKwE,EAAWnJ,GAAjB,8CAA2B,WAAOsC,GAAP,mBAAA5C,EAAA,6DAC3CiO,EAD2C,2BACjChJ,GADiC,IAC5BwE,cAD4B,SAEhB5G,IAAMgD,KAAK,8BAA8BoI,EAAM,CAC3ElL,QAAS,CAAC,eAAgBzC,KAHkB,uBAEjC4N,EAFiC,EAEvClL,KAGPJ,EAAS,CACP/C,KAAM,WACNC,QAASoO,IAPmC,kBASvCA,GATuC,2CAA3B,sDYoIVC,CAAQH,EAAgBvE,EAAWnJ,KAAQyF,MAAK,SAACC,GACxDiG,GAAQ,SAACrL,GAAD,OAAYoF,GAAZ,mBAAoBpF,UAE9ByD,EAAU,CAAElE,KAAM,GAAII,KAAM,KAC5BoM,OAoKgB,gCAYV,sBAAKhL,UAAU,YAAf,UACE,cAAC,GAAD,CAAWyB,MAAO+I,EAAa9I,SAxKpB,SAACwB,GACpBuH,EAAevH,EAAEE,cAAc3B,UAwKvB,cAAC,GAAD,CACExC,MAAOA,EACPkK,OAjLO,SAACC,GAClBmB,EAAcnB,GACd,IAAMqD,EAASC,KAAEC,QAAQ1N,EAAO,CAACmK,EAAWnF,MAAO,CAACmF,EAAWK,QAC/Da,EAAQmC,IA+KErD,WAAYA,IAEd,qBAAKpJ,UAAU,mBAAmBC,MAAO,CAAEyL,WAAY,wBCxT7D/M,GAAQ6F,aAAamB,QAAQ,gBAsLpB5F,gBAJS,SAAC/B,GAAD,MAAY,CAClCiB,MAAOjB,EAAMiB,MACbD,MAAQhB,EAAMgB,SAEDe,EArLI,SAACa,GAClB,IAAMK,EAAW0B,cACjBiD,qBAAU,WACR,IAAML,EAAS3E,EAAMyF,MAAMC,OAAO9F,GAClCS,EAASK,EAAQ3C,KAAQyF,MAAK,SAACC,GAAD,OAASgG,EAAQhG,MAC/CpD,EAASqE,EAAYC,EAAQ5G,OAC5B,CAACsC,EAAUL,EAAMyF,MAAMC,OAAO9F,KANL,MAQJ+B,oBAAS,GARL,mBAQrBwF,EARqB,KAQfC,EARe,OASAzF,mBAAS,CAAC/D,KAAK,GAAGI,KAAK,KATvB,mBASrBoC,EATqB,KASb0B,EATa,OAUHH,mBAAS,IAVN,mBAUrBvD,EAVqB,KAUdqL,EAVc,OAWA9H,mBAAS,IAXT,mBAWrBC,EAXqB,KAWbC,EAXa,OAYJF,mBAASmI,OAASC,UAZd,mBAYrBC,EAZqB,KAYfC,EAZe,KActB5C,EAAc,kBAAMD,GAAQ,IAC5B4E,EAAa,kBAAM5E,GAAQ,IAiB3B/E,EAAoB,SAACC,GACzB,IAAMC,EAAMX,EADmB,EAEPU,EAAEE,cAAlBzB,EAFuB,EAEvBA,KAAMF,EAFiB,EAEjBA,MACR4B,EAlBiB,SAAC1B,EAAMF,GAC9B,MAAa,SAATE,GACmB,KAAjBF,EAAMyG,OAAsB,mBAErB,SAATvG,GACmB,KAAjBF,EAAMyG,OAAsB,wBADlC,EAcsBvE,CAAiBhC,EAAMF,GACzC4B,EAAeF,EAAIxB,GAAQ0B,SACnBF,EAAIxB,GAChBc,GAAU,SAACD,GAAD,OAAYW,GAAO,MAC7BT,EAAU,2BACL1B,GADI,kBAENW,EAAOF,MAyBN0G,EAAgB,SAAC3J,GbNG,IAAC+G,EAAQ5G,EaOjCsC,GbPyBsE,EaOL/G,EAAKF,IbPQK,EaOHA,GbPN,uCAAmB,WAAOsC,GAAP,iBAAA5C,EAAA,sEACf6C,IAAMyG,OAAO,+BAAiCpC,EAAQ,CAChFnE,QAAS,CAAC,eAAgBzC,KAFe,gBAC9BM,EAD8B,EACpCoC,KAGPwD,QAAQC,IAAI7F,GACZgC,EAAS,CACP/C,KAAM,cACNC,QAASc,IAPgC,2CAAnB,wDaQxB2B,EAAMwE,QAAQC,QAAQ,gBAGxB,OACE,iCACI1G,KAAUiC,EAAM5B,MAAMH,SACtB,cAAC,IAAM4B,SAAP,UACE,cAAC,IAAD,CAAUC,GAAG,iBAGhB/B,IAASiC,EAAM5B,MAAMH,SACpB,eAAC,IAAM4B,SAAP,WACE,eAAC6H,GAAA,EAAD,CAAOP,KAAMA,EAAMQ,OAAQN,EAA3B,UACE,cAACK,GAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACH,GAAA,EAAMI,MAAP,4BAEF,cAACJ,GAAA,EAAMK,KAAP,UACE,iCACE,sBAAK3I,UAAU,OAAf,UACE,uBAAOgC,QAAQ,OAAOhC,UAAU,aAAhC,kBAGA,0BACEyB,MAAOT,EAAOxC,KACdkD,SAAUuB,EACVtB,KAAK,OACLzD,KAAK,OACL4D,YAAY,OACZ9B,UAAU,iBAEXwC,EAAOhE,MACN,uBAAOwB,UAAU,cAAjB,SAAgCwC,EAAOhE,UAG3C,sBAAKwB,UAAU,OAAf,UACE,uBAAOgC,QAAQ,OAAOhC,UAAU,aAAhC,kBAGA,yBACE2B,KAAK,OACLnB,GAAG,OACHqB,MAAM,OACNJ,MAAOT,EAAOpC,KACdoB,UAAU,eACV0B,SAAUuB,EANZ,UAQE,wBAAQxB,MAAM,KACbzC,EAAMT,KAAI,SAACmI,GAAD,OACT,wBAAyBjF,MAAOiF,EAAOpI,IAAvC,SACGoI,EAAO/E,MADG+E,EAAOpI,WAKxB,8BACCkE,EAAO5D,MACN,uBAAOoB,UAAU,cAAjB,SAAgCwC,EAAO5D,YAI3C,sBAAKoB,UAAU,OAAf,UACI,uBAAOgC,QAAQ,OAAf,2BACA,uBACA,cAAC,KAAD,CACE4J,SAAUhB,EACVlJ,SAnFI,SAACkJ,GACnBA,GACJC,EAAQD,IAkFUjJ,KAAK,OACLnB,GAAG,OACHqB,MAAM,OACNgK,QAAS,IAAIC,KACbC,WA5FF,SAAAnB,GAChB,IAAMoB,EAAMpB,EAAKqB,SACjB,OAAe,IAARD,GAAqB,IAARA,QA6FR,qBAAKhM,UAAU,OAAf,SACE,cAACoI,GAAA,EAAD,CAAQC,QAAQ,UAAUnK,KAAK,SAASyI,QAvFnC,SAACzD,GACpBA,EAAEW,iBACF,IAAMC,EA/BS,WACf,IAAMtB,EAAS,GAGf,MAF2B,KAAvBxB,EAAOxC,KAAK0J,SAAe1F,EAAOhE,KAAO,oBAClB,KAAvBwC,EAAOpC,KAAKsJ,SAAe1F,EAAO5D,KAAO,oBACP,IAA/BgK,OAAOC,KAAKrG,GAAQsG,OAAe,KAAOtG,EA2BtCgB,GAEX,GADAf,GAAU,SAACD,GAAD,OAAYsB,GAAM,OACxBA,EAAJ,CACA,IbtByBtF,EAAKG,EAAO6B,EasB/B2L,EAAgBzB,KAAOE,GAAMwB,OAAO,MACpCC,EAAc,2BAAQrL,GAAR,IAAgBmL,kBACpCtH,QAAQC,IAAIuH,GACZpL,GbzByBzC,EayBL6N,EbzBU1N,EayBKA,GbzBE6B,EayBKI,EAAMyF,MAAMC,OAAO9F,GbzBrC,uCAAoB,WAAOS,GAAP,iBAAA5C,EAAA,sEACf6C,IAAMsG,IAAI,oCAAsChH,EAAIhC,EAAM,CACrF4C,QAAS,CAAC,eAAgBzC,KAFgB,uBAC9BM,EAD8B,EACrCoC,KAGPJ,EAAS,CACP/C,KAAM,eACNC,QAASc,IANiC,kBAQrCA,GARqC,2CAApB,wDa0BxByD,EAAU,CAAClE,KAAK,GAAII,KAAK,KACzBqJ,MA6Ec,8BAOR,qBAAKjI,UAAU,uBAAf,SACE,oBAAIA,UAAU,aAAd,SACGY,EAAM3B,MAAMV,KAAI,SAACC,GAAD,OACf,oBAAIwB,UAAU,kBAAd,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCxB,EAAKuH,cACtC,oBAAG/F,UAAU,QAAb,oBAA6BxB,EAAKsL,MAAMnI,QACxC,oBAAG3B,UAAU,QAAb,sBAA+BxB,EAAK2H,UACpC,oBAAGnG,UAAU,QAAb,wBAAiCxB,EAAKwL,YACtC,qBAAKhK,UAAU,mBAAf,SACE,mBAAGA,UAAU,wBAAwByG,cAAY,OAChDE,QAASiG,EACV3M,MAAO,CAAEgJ,OAAQ,eAEnB,qBAAKjJ,UAAU,oBAAf,SACI,mBAAGA,UAAU,cAAcyG,cAAY,OACvCE,QAAS,kBAAMwB,EAAa3J,IAC5ByB,MAAO,CAAEgJ,OAAQ,mBAdYzK,EAAKF,qB,mBC3JpDK,GAAQ6F,aAAamB,QAAQ,gBAyLpB5F,gBAHS,SAAC/B,GAAD,MAAY,CAClCgB,MAAOhB,EAAMgB,SAEAe,EAvLH,SAACa,GACX,IAAMK,EAAW0B,cADI,EAGSJ,mBAAS,IAHlB,mBAGd8G,EAHc,KAGLwD,EAHK,KAKrBjH,qBAAU,WACR,IAAMH,EAAS7E,EAAM5B,MAAMJ,KAAKN,IAChC2C,EAASuE,EAAaC,EAAQ9G,KAAQyF,MAAK,SAACC,GAAS,IAAD,EAClDwI,GAAU,mBACPC,eAAS,CACRnL,KAAM,OACNoL,MAAO1I,EAAIjG,QAAO,SAACC,GAAD,MAAoB,SAAbA,EAAE8H,YAHrB,cAKP2G,eAAS,CACRnL,KAAM,cACNoL,MAAO1I,EAAIjG,QAAO,SAACC,GAAD,MAAoB,YAAbA,EAAE8H,YAPrB,cASP2G,eAAS,CACRnL,KAAM,OACNoL,MAAO1I,EAAIjG,QAAO,SAACC,GAAD,MAAoB,SAAbA,EAAE8H,YAXrB,SAeX,IAsEH,OAFAtB,QAAQC,IAAIuE,GAGV,sBAAKpJ,MAAO,CAAE+M,QAAS,OAAQC,eAAgB,SAAUC,OAAQ,QAAjE,WACIvO,IACA,cAAC,IAAM8B,SAAP,UACE,cAAC,IAAD,CAAUC,GAAG,iBAGhB/B,IACC,cAAC,IAAM8B,SAAP,UACE,cAAC,KAAD,CACE0M,UAAW,SAACC,GAAD,OA9EH,SAACA,EAAQ/D,EAASwD,GAClC,GAAKO,EAAOC,YAAZ,CADiD,IAEzCC,EAAwBF,EAAxBE,OAAQD,EAAgBD,EAAhBC,YAChB,GAAIC,EAAOC,cAAgBF,EAAYE,YAAa,CAAC,IAAD,EAC5CC,EAAenE,EAAQiE,EAAOC,aAC9BE,EAAapE,EAAQgE,EAAYE,aACjCG,EAAW,YAAOF,EAAaT,OAC/BY,EAAS,YAAOF,EAAWV,OAJiB,EAKhCW,EAAYE,OAAON,EAAOzD,MAAO,GAA5CgE,EAL2C,oBAM3B,YAAnBA,EAAQ1H,SACc,SAApBsH,EAAW9L,OACbkM,EAAQ1H,OAAS,OACjBlF,EAASyE,EAAWmI,EAASlP,MAEP,SAApB8O,EAAW9L,OACbkM,EAAQ1H,OAAS,OACjBlF,EAASyE,EAAWmI,EAASlP,OAIV,SAAnBkP,EAAQ1H,SACc,gBAApBsH,EAAW9L,OACbkM,EAAQ1H,OAAS,UACjBlF,EAASyE,EAAWmI,EAASlP,MAEP,SAApB8O,EAAW9L,OACbkM,EAAQ1H,OAAS,OACjBlF,EAASyE,EAAWmI,EAASlP,OAGV,SAAnBkP,EAAQ1H,SACc,gBAApBsH,EAAW9L,OACbkM,EAAQ1H,OAAS,UACjBlF,EAASyE,EAAWmI,EAASlP,MAEP,SAApB8O,EAAW9L,OACbkM,EAAQ1H,OAAS,OACjBlF,EAASyE,EAAWmI,EAASlP,OAGjCgP,EAAUC,OAAOP,EAAYxD,MAAO,EAAGgE,GACvChB,EAAW,2BACNxD,GADK,uBAEPiE,EAAOC,YAFA,YAAC,eAGJC,GAHG,IAINT,MAAOW,KAJD,cAMPL,EAAYE,YANL,YAAC,eAOJE,GAPG,IAQNV,MAAOY,KARD,SAWL,CACL,IAAMpE,EAASF,EAAQiE,EAAOC,aACxBO,EAAW,YAAOvE,EAAOwD,OAF1B,EAGae,EAAYF,OAAON,EAAOzD,MAAO,GAA5CgE,EAHF,oBAILC,EAAYF,OAAOP,EAAYxD,MAAO,EAAGgE,GACzChB,EAAW,2BACNxD,GADK,kBAEPiE,EAAOC,YAFA,YAAC,eAGJhE,GAHG,IAINwD,MAAOe,SAiBkBX,CAAUC,EAAQ/D,EAASwD,IADpD,SAGGjE,OAAOmF,QAAQ1E,GAAS9K,KAAI,WAAqBsL,GAAW,IAAD,mBAA7BmE,EAA6B,KAAnBzE,EAAmB,KAC1D,OACE,sBACEtJ,MAAO,CACL+M,QAAS,OACTiB,cAAe,SACfC,WAAY,UAJhB,UAQE,6BAAK3E,EAAO5H,OAEZ,qBAAK1B,MAAO,CAAEkO,OAAQ,GAAtB,SACE,cAAC,KAAD,CAAWZ,YAAaS,EAAxB,SACG,SAACI,EAAUC,GACV,OACE,gDACMD,EAASE,gBADf,IAEEC,IAAKH,EAASI,SACdvO,MAAO,CACLwO,WAAYJ,EAASK,eACjB,YACA,YACJC,QAAS,EACTzM,MAAO,IACP0M,UAAW,KATf,UAYGrF,EAAOwD,MAAMxO,KAAI,SAACyF,EAAM6F,GACvB,OACE,cAAC,KAAD,CAEEgF,YAAa7K,EAAK1F,IAClBuL,MAAOA,EAHT,SAKG,SAACuE,EAAUC,GACV,OACE,yDACEE,IAAKH,EAASI,UACVJ,EAASU,gBACTV,EAASW,iBAHf,IAIE9O,MAAK,aACH+O,WAAY,OACZL,QAAS,GACTR,OAAQ,YACRS,UAAW,OACX1O,gBAAiBmO,EAASY,WACtB,UACA,UACJC,MAAO,SACJd,EAASU,eAAe7O,OAb/B,SAgBG+D,EAAK+B,iBAtBP/B,EAAK1F,QA6Bf8P,EAAStM,kBA/CqBkM,OALpCA,gB,qBCzERmB,OA5Bf,WAEE,OACE,sBAAKnP,UAAU,MAAf,UACE,cAAC,IAAD,IACA,cAAC,EAAD,IACA,eAAC,IAAD,WACA,cAAC,IAAD,CAAOiE,KAAK,QAAQmL,UAAWzO,IAC/B,cAAC,IAAD,CAAOsD,KAAK,SAASmL,UAAW9M,IAChC,cAAC,IAAD,CAAO2B,KAAK,UAAUmL,UAAWpK,IACjC,cAAC,IAAD,CAAOf,KAAK,YAAYmL,UAAWC,IACnC,cAAC,IAAD,CAAOpL,KAAK,aAAamL,UAAWE,IACpC,cAAC,IAAD,CAAOrL,KAAK,cAAcmL,UAAWpG,KACrC,cAAC,IAAD,CAAO/E,KAAK,eAAemL,UAAWG,KACtC,cAAC,IAAD,CAAOtL,KAAK,kBAAkBmL,UAAWI,KACzC,cAAC,IAAD,CAAOvL,KAAK,UAAUmL,UAAWK,KACjC,cAAC,IAAD,CAAOxL,KAAK,WAAWmL,UAAWM,KAClC,cAAC,IAAD,CAAOzL,KAAK,kBAAkBmL,UAAWO,KACzC,cAAC,IAAD,CAAO1L,KAAK,OAAOmL,UAAWQ,KAC9B,cAAC,IAAD,CAAO3L,KAAK,aAAamL,UAAWvI,KACpC,cAAC,IAAD,CAAUgJ,KAAK,IAAKC,OAAK,EAACpP,GAAG,UAC7B,cAAC,IAAD,CAAUA,GAAG,sBC9BJqP,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7L,MAAK,YAAkD,IAA/C8L,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,qBCOdvQ,EAAM8Q,WAAU,kBAAM1L,QAAQC,IAAIrF,EAAM+Q,eAExCC,IAASC,OAEH,cAAC,IAAD,CAAUjR,MAAOA,EAAjB,SACA,cAAC,IAAD,CAAakR,QAAS,KAAM9Q,UAAWA,EAAvC,SACA,cAAC,IAAD,UACG,cAAC,GAAD,UAIP+Q,SAASC,eAAe,SAM1Bd,O","file":"static/js/main.8f2a81f6.chunk.js","sourcesContent":["\nconst taskReducer = (state = [], action) => {\n    switch (action.type) {\n      case \"ADD_TASK\":\n        return [...state, action.payload];\n\n      case \"GET_TASKS\":\n        return state = action.payload;\n\n      // case \"UPDATE_TASKS\":\n      //   return state.map(a =>(a._id === action.payload._id) ? { ...a, description : action.payload.description} : a)\n\n      case \"UPDATE_TASKS\":\n        return [action.payload]\n          \n      case \"REMOVE_TASK\":\n        return state.filter((a) => a._id !== action.payload._id)\n                \n      case \"TOGGLE_TASK\":\n        return state.map(task =>\n            (task._id === action._id) \n            ? { ...task, completed : task.completed} : task)\n      \n      case \"GET_USER_TASKS\":\n        return state = action.payload\n\n      case \"GET_TASK_BYID\":\n        return state = action.payload\n              \n      default:\n        return state;\n    }\n  };\n  export default taskReducer;","const userReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_USER\":\n      return (state = action.payload);\n\n    case \"FIND_USER\":\n      return {\n        token : action.payload.token,\n        user : action.payload.user,\n        isAdmin : action.payload.user.isAdmin\n      };\n\n    case \"LOGOUT_USER\":\n      return (state = {});\n\n    case \"UPDATE_USER\":\n      return {\n        // token : state.token,\n        ...state,\n        user :  action.payload\n      }\n      case \"ADD_PHOTO\":\n        return  {\n          ...state,\n          user : action.payload,      \n        }\n      case \"REMOVE_USER\":\n        return state = []\n      \n      // case \"GET_USER\":\n      //   return state = action.payload\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","\nconst projectReducer = (state = [], action) => {\n    switch (action.type) {\n      \n      case \"ADD_PROJECT\":\n        return [...state, action.payload];\n      \n      case \"GET_PROJECT\":\n        return state = action.payload;\n      \n      case \"REMOVE_PROJECT\":\n        return state.filter((a) => a._id !== action.payload._id)\n      \n      case \"SINGLE_PROJECT\":\n        return [ action.payload ]\n\n      case \"UPDATE_PROJECT\":\n        return [action.payload]\n        \n          default:\n        return state;\n    }\n  };\n  export default projectReducer;","import { combineReducers } from \"redux\";\nimport taskReducer from \"./taskReducer\";\nimport userReducer from './userReducer';\nimport projectReducer from \"./projectReducer\";\n\nexport default combineReducers({\n    users : userReducer,\n    tasks : taskReducer,\n    projects : projectReducer\n})","import { createStore , applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport combineReducers from '../src/reducers/index';\n\n\n\nconst persistConfig = {\n  key: 'users',\n  storage: storage,\n  whitelist: ['users'] \n};\n\nconst pReducer = persistReducer(persistConfig, combineReducers);\n\n\nconst store = createStore( pReducer,applyMiddleware(thunk))\n\n\nconst persistor = persistStore(store);\n\nexport { persistor, store };","import React from 'react';\nimport { NavLink, Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\n\nconst Navbar = ({users}) => {\n  \n        return (\n            <div className=\"container-fluid\"  style={{backgroundColor : '#2d4059'}}>\n                <nav className=\"navbar sticky-top navbar-expand-sm navbar-dark\" >\n                    <div className=\"container-fluid\">\n                        \n                        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                            <ul className=\"navbar-nav\">\n\n\n                                {!users.token && (\n                                <React.Fragment>\n                                <Link className=\"navbar-brand\" to=\"/home\">Home</Link>\n                                <NavLink className=\"nav-link \" to=\"/login\">Login</NavLink>\n                                <NavLink className=\"nav-link \" to=\"/signup\">SignUp</NavLink>\n                                </React.Fragment>\n                                )}\n\n                                {users.token && users.isAdmin && (\n                                <React.Fragment>\n                                <Link className=\"navbar-brand\" to=\"/home\">Home</Link>\n                                <NavLink className=\"nav-link\" to=\"/addproject\">Projects</NavLink>\n                                {/* <NavLink className=\"nav-link\" to=\"/profile\">Profile</NavLink> */}\n                                {/* <NavLink className=\"nav-link\" to=\"/delete-account\">Delete Account</NavLink> */}\n                                <NavLink className=\"nav-link\" to=\"/logout\">Logout</NavLink>\n                                </React.Fragment>\n                                )}\n\n                                {users.token  && !users.isAdmin &&  (\n                                <React.Fragment>\n                                <Link className=\"navbar-brand\" to=\"/home\">Home</Link>\n                                {/* <NavLink className=\"nav-link\" to=\"/addtasks\">Tasks</NavLink> */}\n                                <NavLink className=\"nav-link\" to=\"/dnd\">Tasks</NavLink>\n                                <NavLink className=\"nav-link\" to=\"/profile\">Profile</NavLink>\n                                <NavLink className=\"nav-link\" to=\"/logout\">Logout</NavLink>\n                                </React.Fragment>\n                                )}\n                                \n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n    const mapStateToProps = (state) => ({\n        users : state.users\n      })\n\nexport default connect(mapStateToProps)(Navbar);","const Home = (props) => {\n    return ( \n        <div className=\"mt-5\">\n            <h1> Task Management Application </h1>\n            <h4> Single Destination To Manage Your Project and Tasks.</h4>\n            <div className=\"mt-3\">\n                <img src=\"https://image.freepik.com/free-vector/multitask-office-work-illustration-cartoon-busy-businessman-character-working-many-virtual-business-tasks-multitasking-concept-modern-effective-time-management-white_213110-457.jpg\" alt=\"\" ></img>\n            </div>\n        </div>\n     );\n}\n \nexport default Home;","import axios from \"axios\";\n\nexport const addUser = (values) => async (dispatch) => {\n  const { data: newUser } = await axios.post(\"http://localhost:3000/users\",values);\n  dispatch({\n    type: \"ADD_USER\",\n    payload: newUser,\n  });\n};\n\nexport const findUser = (values) => async (dispatch) => {\n  const { data: user } = await axios.post(\"http://localhost:3000/users/login\",values);\n  dispatch({\n    type: \"FIND_USER\",\n    payload: user,\n  });\n  return user;\n};\n\nexport const logoutUser = (token) => async (dispatch) => {\n  const { data: user } = await axios.get(\"http://localhost:3000/users/logout\", {\n    headers: {\"x-auth-token\": token},\n  });\n  dispatch({\n    type: \"LOGOUT_USER\",\n    payload: user,\n  });\n};\n\nexport const updateUser = (values, token) => async (dispatch) => {\n  const { data: user } = await axios.patch(\"http://localhost:3000/users/me\",values,\n    {headers: {\"x-auth-token\": token},\n    });\n  dispatch({\n    type: \"UPDATE_USER\",\n    payload: user,\n  });\n};\n\nexport const getUser = (token) => async (dispatch) => {\n  const { data: users } = await axios.get(\"http://localhost:3000/users\",{\n    headers: {\"x-auth-token\": token},\n  });\n  dispatch({\n    type: \"GET_USER\",\n    payload: users,\n  });\n  return users;\n};\n\n\nexport const addProfileImg = (data , token) => async (dispatch) => {\n    const {data : newPhoto} = await axios.put(\"http://localhost:3000/users/me/profileImg\", data , {\n      headers: {\n        \"x-auth-token\": token,\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    dispatch({\n      type: 'ADD_PHOTO',\n      payload : newPhoto\n    });\n    return newPhoto\n  };\n  \n  export const removeUser = (token) => async (dispatch) => {\n    const user = await axios.delete(\"http://localhost:3000/users/me\", {\n      headers: {\n        \"x-auth-token\": token\n      },\n    });\n    dispatch({\n      type: \"REMOVE_USER\",\n      payload: user,\n    });\n    return user;\n  };","import React from 'react';\n\n\nconst Input = ({value, onChange, name, type, error, label, placeholder, maxlength}) => {\n  \n  return ( <div>\n        <div className=\"form-group\">\n            <label htmlFor={name} className=\"form-label float-left\" >{label}</label>\n            <input\n              value={value}\n              onChange={onChange}\n              name={name}\n              type={type}\n              placeholder={placeholder}\n              className=\"form-control form-control-lg\"\n              maxLength={maxlength}\n              \n              style={{width:\"150\"}}\n            />  \n          </div>\n            <div>\n            {error && <small className=\"text-danger\">{error}</small>} \n            </div>        \n          </div>\n     );\n}\n \nexport default Input\n","import { useDispatch } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport { findUser } from \"../actions/userAction\";\nimport Joi from \"joi-browser\";\nimport { toast } from \"react-toastify\";\nimport Input from \"../components/input\"\n\nconst initialValues = {\n  email: \"\",\n  password: \"\",\n};\n\nconst Login = (props) => {\n  const [errors , setErrors] = useState({});\n  const [values, setValues] = useState(initialValues);\n  const dispatch = useDispatch();\n\n  const schema = {\n    email: Joi.string()\n      .required()\n      .email()\n      .label(\"Email\"),\n    password: Joi.number()\n      .required()\n      .label(\"Password\"),\n  };\n\n  const validateProperty = (name, value) => {\n    const obj = { [name]: value };\n    const nschema = { [name]: schema[name] };\n    const { error } = Joi.validate(obj, nschema);\n    return error ? error.details[0].message : null;\n\n        // if(name === \"email\"){\n        //     if(value.trim() === '') return 'Email Is Required'\n        // }\n        // if(name === \"password\"){\n        //     if(value.trim() === '') return 'Password Is Required'\n        // }\n};\nconst validate = () => {\n  const options = { abortEarly: false };\n  const { error } = Joi.validate(values, schema, options);\n  if (!error) return null;\n  const errors = {};\n  for (let item of error.details) errors[item.path[0]] = item.message;\n  return errors;\n  //  const errors= {}\n  //   if(values.email.trim() === \"\")\n  //     errors.email = \"Email is required\"\n  //   if(values.password.trim() === \"\")\n  //     errors.password = \" Password is required\"\n  //   return Object.keys(errors).length === 0 ? null : errors;\n \n};\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const er = validate();\n    setErrors(errors => er || {});\n    if (er) {return}\n    else {\n    dispatch(findUser(values))\n      .then((res) => {\n        toast.success(\"Login Success\");\n        localStorage.setItem(\"x-auth-token\", res.token);\n        window.location = \"/\";\n        // props.history.push('/tasks');\n      })\n      .catch((e) => {\n        toast.error(\"Email or Password Are Invalid !\");\n        console.log(e);\n      });\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const err = errors\n    const { name, value } = e.currentTarget;\n    const errorMessages = validateProperty(name, value);\n    if (errorMessages) err[name] = errorMessages;\n    else delete err[name];\n    \n    setValues({\n      ...values,\n      [name]: value,\n    });\n    setErrors(errors=> err || {})\n  };\n\n  return (\n    \n    <div className=\"container\">\n      <h1 className=\"m-4\"> Login Here..</h1>\n      <div className=\"d-flex justify-content-center\">\n        <form onSubmit={handleSubmit}>\n           <Input \n           value={values.email}\n           onChange={handleInputChange}\n           label=\"Email\"\n           name=\"email\"\n           type=\"email\"\n           placeholder=\"Enter Your Email\"\n           error={errors.email}\n           className=\"form-control\"\n           maxlength=\"30\"\n           />\n            <small id=\"emailHelp\" className=\"form-text mark\">\n              We'll never share your email with anyone else.\n            </small>\n          \n          <div className=\"mb-3\">\n            <label htmlFor=\"Password\" className=\"form-label float-left mt-2\">\n              Password\n            </label>\n            <Input\n              value={values.password}\n              onChange={handleInputChange}\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Enter Your Password\"\n              className=\"form-control\"\n              error={errors.password}\n              maxlength=\"10\"\n            />\n          </div>\n          <div className=\"mb-3\">\n            <button type=\"submit\" className=\"btn btn-dark btn-lg btn-block\">\n              Login\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addUser } from \"../actions/userAction\";\nimport Joi from \"joi-browser\";\nimport { toast } from \"react-toastify\";\nimport Input from '../components/input';\n\nconst initialValues = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  age: \"\",\n};\n\nconst Signup = (props) => {\n  const [errors , setErrors] = useState({});\n  const [values, setValues] = useState(initialValues);\n  const dispatch = useDispatch();\n\n  const schema = {\n    name : Joi.string()\n      .required()\n      .label(\"Name\"),\n    email: Joi.string()\n      .required()\n      .email()\n      .label(\"Email\"),\n    password: Joi.number()\n      .required()\n      .label(\"Password\"),\n    age: Joi.number()\n      .required()\n      .integer()\n      .label(\"Age\")\n  };\n\n\n  const validateProperty = (name, value) => {\n    const obj = { [name]: value };\n    const nschema = { [name]: schema[name] };\n    const { error } = Joi.validate(obj, nschema);\n    return error ? error.details[0].message : null;\n\n  //   if(name === \"name\"){\n  //       if(value.trim() === '') return 'Name Is Required'\n  //   }\n  //   if(name === \"email\"){\n  //     if(value.trim() === '') return 'Email Is Required'\n  // }\n  //   if(name === \"password\"){\n  //       if(value.trim() === '') return 'Password Is Required'\n  //   }\n  //   if(name === \"age\"){\n  //     if(value.trim() === '') return 'Age Is Required'\n  // }\n  };\n\n  const validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(values, schema, options);\n    if (!error) return null;\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  // const errors= {}\n  // if(values.name.trim() === \"\")\n  //   errors.name = \"Name is required\"\n\n  // if(values.email.trim() === \"\")\n  //   errors.email = \" Email is required\"\n\n  // if(values.email.trim() === \"\")\n  //   errors.password = \"Password is required\"\n\n  // if(values.age.trim() === \"\")\n  //   errors.age = \" Age is required\"\n  // return Object.keys(errors).length === 0 ? null : errors;\n\n  };\n\n  const handleInputChange = (e) => {\n    const err = errors\n    const { name, value } = e.currentTarget;\n    const errorMessages = validateProperty(name, value);\n    if (errorMessages) err[name] = errorMessages;\n    else delete err[name];\n    console.log(values)\n    \n    setValues({\n      ...values,\n      [name]: value,\n    });\n    setErrors(errors=> err || {})\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const er = validate();\n    setErrors(errors => er || {});\n    console.log(er)\n    if (er) return;\n    dispatch(addUser(values))\n    .then(()=>{\n      toast.success(\"You Registered Succesfully, Now You Can Login\");\n      props.history.replace('/login')\n    })\n    .catch(()=> {\n      toast.error(\"Unexpected error\");\n      props.history.replace('/signup')\n    })\n\n  } \n\n  return (\n    <div style={{backgroundColor : '' , }}>\n      <h1 className=\"m-3\"> New Registration</h1>\n      <div className=\"d-flex justify-content-center\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-2 form-group\">\n            <label className=\"form-label float-left\" htmlFor=\"Name\">Name</label>\n            <Input\n              value={values.name}\n              onChange={handleInputChange}\n              name=\"name\"\n              placeholder=\"Enter Your Name\"\n              error={errors.name}\n              className=\"form-control\"\n              maxlength=\"25\"\n            />\n          </div>\n          <div className=\"mb-2 form-group\">\n            <label className=\"form-label float-left\" htmlFor=\"Email\"> E-mail</label>\n            <Input\n              value={values.email}\n              onChange={handleInputChange}\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Your Email\"\n              className=\"form-control\"\n              error={errors.email}\n              maxlength=\"30\"\n            />\n          </div>\n          <div className=\"mb-2 form-group\">\n            <label className=\"form-label float-left\" htmlFor=\"Password\">Password</label>\n            <Input\n              value={values.password}\n              onChange={handleInputChange}\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Enter Your Password\"\n              className=\"form-control\"\n              error={errors.password}\n              maxlength=\"10\"\n            />\n          </div>\n          <div className=\"mb-2 form-group\">\n            <label className=\"form-label float-left\" htmlFor=\"Age\">Age</label>\n            <Input\n              value={values.age}\n              onChange={handleInputChange}\n              name=\"age\"\n              placeholder=\"Enter Your Age\"\n              className=\"form-control\"\n              error={errors.age}\n              maxlength=\"2\"\n            />\n          </div>\n          <button className=\"btn btn-dark btn-lg btn-block mt-4\" type=\"submit\">Submit</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","import axios from \"axios\";\n\n\nexport const addTask = (obj, projectId, token) => async (dispatch) => {\n const obj1 ={...obj, projectId}\n    const {data: newTask} = await axios.post(\"http://localhost:3000/tasks\",obj1, {\n      headers: {\"x-auth-token\": token},\n    });\n    dispatch({\n      type: \"ADD_TASK\",\n      payload: newTask,\n    });\n    return newTask;\n  };\n  \n  export const getTasks = (projectId, token) => async (dispatch) => {\n    const {data: tasks} = await axios.get(\"http://localhost:3000/tasks/\"+ projectId, {\n      headers: {\"x-auth-token\": token},\n    });\n    dispatch({\n      type: \"GET_TASKS\",\n      payload: tasks,\n    });\n    return tasks;\n  };\n  \n  export const getTaskById = (taskId, token) => async (dispatch) => {\n    const {data: task} = await axios.get(\"http://localhost:3000/tasks/task/\"+ taskId,{\n      headers: {\"x-auth-token\": token},\n    });\n    dispatch({\n      type: \"GET_TASK_BYID\",\n      payload: task,\n    });\n    return task;\n  };\n\n  export const getUserTasks = (userId, token) => async (dispatch) => {\n    const {data: tasks} = await axios.get(\"http://localhost:3000/tasks/users/\"+ userId, {\n      headers: {\"x-auth-token\": token},\n    });\n    dispatch({\n      type: \"GET_USER_TASKS\",\n      payload: tasks,\n    });\n    return tasks;\n  };\n  \n  export const updateTask = (task,token, id) => async (dispatch) => {\n    const {data : tasks} = await axios.put(\"http://localhost:3000/tasks/task/\" + id, task, {\n      headers: {\"x-auth-token\": token},\n    });\n    dispatch({\n      type: \"UPDATE_TASKS\",\n      payload: tasks,\n    });\n    return tasks\n  };\n  \n  export const toggleTask = (task, token) => async (dispatch) => {\n    await axios.patch(\"http://localhost:3000/tasks/\" + task._id, task, {\n      headers: {\"x-auth-token\": token},\n    });\n    dispatch({\n      type: \"TOGGLE_TASK\",\n      payload: task,\n    });\n    return task\n  };\n\n\n  export const removeTask = (taskId, token) => async (dispatch) => {\n    const {data: tasks} = await axios.delete(\"http://localhost:3000/tasks/\" + taskId, {\n      headers: {\"x-auth-token\": token},\n    });\n    console.log(tasks)\n    dispatch({\n      type: \"REMOVE_TASK\",\n      payload: tasks,\n    });\n  };","import { Link, Redirect } from \"react-router-dom\";\nimport { connect, useDispatch } from \"react-redux\";\nimport React, { useEffect } from \"react\";\nimport {  getUserTasks } from \"../actions/taskAction\";\n\n\n\nconst token = localStorage.getItem(\"x-auth-token\");\nconst AddTasks = (props) => {\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const userId = props.users.user._id\n    dispatch(getUserTasks(userId, token));\n  }, [dispatch, props.users.user._id]);\n\n  return (\n    <div className=\"container\">\n      {!token && (\n        <React.Fragment>\n          <Redirect to=\"/not-found\" />\n        </React.Fragment>\n      )}\n\n      {token && (\n        <React.Fragment>\n          <div className=\"m-5\">\n            <h1> Welcome {props.users.user.name}..! </h1>\n            <h5> Now You Can See Your All Tasks....  Here </h5>\n          </div>\n\n          <div className=\"container\">\n            <ul className=\"list-group\">\n              <div className=\"row\">\n              {props.tasks.map((task) => (\n                <div className=\"col-6 social-icons\" key={task._id}>\n                <Link to={`/tasks/${task._id}`}  style={{textDecoration: 'none'}}>\n                <div className=\"list-group-item col-sm-5 card text-white bg-dark m-2\" \n                style={{maxWidth: '58rem'}}>\n                <div className=\"card-header\">Task : {task.description}</div>\n                <h5 className=\"card-title\">Project : {task.project.title}</h5>\n                 </div>\n                </Link>\n                </div>\n              ))}\n              </div>\n            </ul>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  users: state.users,\n  tasks: state.tasks,\n});\n\nexport default connect(mapStateToProps)(AddTasks);","import { Redirect } from \"react-router-dom\";\nimport { connect, useDispatch } from \"react-redux\";\nimport React, { useEffect, useState } from \"react\";\nimport { getTaskById, toggleTask} from \"../actions/taskAction\";\n\nconst token = localStorage.getItem(\"x-auth-token\");\nconst Tasks = (props) => {\n  const options = [\n    { id: 1, name: \"Processing\", value: false },\n    { id: 2, name: \"Done\", value: true },\n  ];\n  const dispatch = useDispatch();\n  const [status, setStatus] = useState(\"\");\n\n  useEffect(() => {\n    const taskId = props.match.params.id;\n    dispatch(getTaskById(taskId));\n  }, [dispatch, props.match.params.id]);\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    const isTrueSet = value === \"true\";\n    setStatus(isTrueSet);\n  };\n  const handleUpdate = (task) => {\n    task.completed = status;\n    dispatch(toggleTask(task, token));\n  };\n\n  return (\n    <div className=\"container\">\n      {!token && (\n        <React.Fragment>\n          <Redirect to=\"/not-found\" />\n        </React.Fragment>\n      )}\n\n      {token && (\n        <React.Fragment>\n          <div className=\"m-5\">\n            <h1> Welcome {props.users.user.name}..! </h1>\n            <h5> Now You Can Add Your Tasks... Here </h5>\n          </div>\n\n          <div className=\"container\">\n            <ul className=\"list-group\">\n              {props.tasks.map((task) => (\n                <li className=\"list-group-item\" key={task._id}>\n                  <div className=\"row\">\n                    <div className=\"col-1\">\n                      {task.completed ? (\n                        <i className=\"fa fa-check fa-3x\" aria-hidden=\"true\"></i>\n                      ) : (\n                          <i className=\"fa fa-times fa-3x\" aria-hidden=\"true\"></i>\n                        )}\n                    </div>\n                    <div className=\"col-4\">{task.description}</div>\n                    <div className=\"col-3\">\n                      \n                        <label htmlFor=\"status\" className=\"form-label\">\n                          Status\n                        </label>\n                        <select\n                          name=\"status\"\n                          id=\"status\"\n                          label=\"Status\"\n                          className=\"form-control\"\n                          onChange={handleChange}\n                        >\n                          <option value=\"\" />\n                          {options.map((option) => (\n                            <option key={option.id} value={option.value}>\n                              {option.name}\n                            </option>\n                          ))}\n                        </select>\n                   \n                    </div>\n                    <div className=\"col-4\">\n                      <button\n                        className=\"btn btn-warning\"\n                        onClick={() => handleUpdate(task)}\n                      >\n                        Update\n                      </button>\n                      </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  users: state.users,\n  tasks: state.tasks,\n});\n\nexport default connect(mapStateToProps)(Tasks);\n","\nimport React, { Component } from 'react';\nclass NotFound extends Component {\n    state = {  }\n    render() { \n        return (<h1>404 Not Found</h1>  );\n    }\n}\n \nexport default NotFound;","import { useEffect } from \"react\";\nimport { useDispatch, connect } from \"react-redux\";\nimport { logoutUser } from \"../actions/userAction\";\n\nconst Logout = ({ token }) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(logoutUser(token));\n    localStorage.clear();\n    window.location = \"/\";\n  });\n  return null;\n};\nconst mapStateToProps = (state) => ({\n  token: state.users.token\n});\nexport default connect(mapStateToProps)(Logout);\n","import React, { useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { updateUser, addProfileImg } from \"../actions/userAction\";\nimport { toast } from \"react-toastify\";\n\nconst Profile = (props) => {\n  const initialValues = {\n    name: props.users.user.name,\n    email: props.users.user.email,\n    password: \"\",\n    age: props.users.user.age,\n  };\n  const [values, setValues] = useState(initialValues);\n  const dispatch = useDispatch();\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateUser(values, props.users.token))\n      .then(() => {\n        toast.success(\"Profile Updated\");\n      })\n      .catch(() => {\n        toast.error(\"Unexpected error\");\n      });\n  };\n\n  let image;\n  const onChangeHandler = (event) => {\n    image = event.target.files[0];\n  };\n  const onClickHandler = (event) => {\n    const data = new FormData();\n    data.append(\"img\", image);\n    dispatch(addProfileImg(data, props.users.token));\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <div>\n      {!props.users.token && (\n        <React.Fragment>\n          <Redirect to=\"/not-found\" />\n        </React.Fragment>\n      )}\n      </div>\n\n      {props.users.token && (\n        <React.Fragment>\n          \n        <div className=\"row\">\n\n            <div className=\"col-2\">\n                  <img\n                    className=\"img-thumbnail\"\n                    src={props.users.user.img}\n                    alt=\"\"\n                  />\n            </div>\n              \n            <div className=\"col-10\">\n                  <h1> Name : {props.users.user.name} </h1>\n                  <h1> Email : {props.users.user.email} </h1>\n                  <h1> Age : {props.users.user.age} </h1>\n            </div>\n        \n          </div>\n\n          \n           \n           \n          <div className=\"row\">\n\n              <div className=\"col-6\">\n                  <form method=\"post\" action=\"#\" id=\"#\">\n                    <label>Upload Your File </label>\n                    <input\n                      type=\"file\"\n                      name=\"file\"\n                      className=\"form-control\"\n                      onChange={onChangeHandler}\n                    />\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-success btn-sm m-2\"\n                      onClick={onClickHandler}\n                    >\n                      Upload\n                    </button>\n                  </form>\n              </div>\n\n\n\n          <div className=\"col-6\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"mb-2\">\n                <label className=\"form-label float-left\">Name</label>\n                <input\n                  value={values.name}\n                  onChange={handleInputChange}\n                  name=\"name\"\n                  placeholder=\"Enter Your Name\"\n                  className=\"form-control\"\n                />\n              </div>\n              <div className=\"mb-2\">\n                <label className=\"form-label float-left\">E-mail</label>\n                <input\n                  value={values.email}\n                  onChange={handleInputChange}\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Enter Your Email\"\n                  className=\"form-control\"\n                />\n              </div>\n              <div className=\"mb-2\">\n                <label className=\"form-label float-left\">Password</label>\n                <input\n                  value={values.password}\n                  onChange={handleInputChange}\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Enter Your Password\"\n                  className=\"form-control\"\n                />\n              </div>\n              <div className=\"mb-2\">\n                <label className=\"form-label float-left\">Age</label>\n                <input\n                  value={values.age}\n                  onChange={handleInputChange}\n                  name=\"age\"\n                  placeholder=\"Enter Your Age\"\n                  className=\"form-control\"\n                />\n              </div>\n              <button className=\"btn btn-primary m-2\" type=\"submit\">\n                Update\n              </button>\n            </form>\n          </div>\n        </div>\n       \n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  users: state.users,\n});\n\nexport default connect(mapStateToProps, { updateUser })(Profile);\n","import  { useEffect } from 'react';\nimport { connect, useDispatch } from \"react-redux\"\nimport { removeUser } from '../actions/userAction';\nimport { toast } from \"react-toastify\";\n\nconst Deleteaccount = ({token}) => {\nconst dispatch =  useDispatch();\n\n    useEffect(()=>{\n    dispatch(removeUser(token))\n    .then(()=> {\n        toast.success(\"Your Account Is Deleted Successfully\")\n        window.location = \"/\";\n    })        \n}, [dispatch, token])\n\n    return ( \n        null\n     );\n}\n\nconst mapStateToProps = (state) => ({\n token:  state.users.token\n})\n \nexport default connect(mapStateToProps)(Deleteaccount);","import axios from \"axios\";\n\n// http://localhost:3000\n\nexport const addProject = (values, token) => async (dispatch) => {\n    const {data: newProject} = await axios.post(\"http://localhost:3000/projects\",values, {\n        headers: {\"x-auth-token\": token},\n      });\n    dispatch({\n      type: \"ADD_PROJECT\",\n      payload: newProject,\n    });\n  };\n  \n  export const getProjects = (token) => async (dispatch) => {\n    const {data: project} = await axios.get(\"http://localhost:3000/projects\", {\n      headers: {\"x-auth-token\": token},\n    });\n    dispatch({\n      type: \"GET_PROJECT\",\n      payload:  project,\n    });\n  };\n  \n  \n  export const updateProject = (values, token) => async (dispatch) => {\n    const { data : project} = await axios.put(\"http://localhost:3000/projects\" , values, {\n      headers: {\"x-auth-token\": token},\n    });\n    dispatch({\n      type: \"UPDATE_PROJECT\",\n      payload:  project,\n    });\n    return project;\n  };\n  \n  \n  export const removeProject = (projectId, token) => async (dispatch) => {\n    const {data: projects} = await axios.delete(\"http://localhost:3000/projects/\" + projectId, {\n      headers: {\"x-auth-token\": token},\n    });\n    dispatch({\n      type: \"REMOVE_PROJECT\",\n      payload: projects,\n    });\n  };\n  \n  export const findProject = (projectId, token) => async (dispatch) => {\n    const {data: project} = await axios.get(\"http://localhost:3000/projects/\" + projectId, {\n      headers: {\"x-auth-token\": token},\n    });\n    dispatch({\n      type: \"SINGLE_PROJECT\",\n      payload: project,\n    });\n    return project;\n  };","import { Redirect, Link } from \"react-router-dom\";\nimport { connect, useDispatch } from \"react-redux\";\nimport React, { useEffect, useState } from \"react\";\nimport Input from \"./input\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\nimport {\n  addProject,\n  getProjects,\n  removeProject,\n} from \"../actions/projectAction\";\n\nconst initialValues = {\n  title: \"\",\n  description: \"\",\n};\n\nconst token = localStorage.getItem(\"x-auth-token\");\n\nconst AddProject = (props) => {\n  const [show, setShow] = useState(false);\n  const [values, setValues] = useState(initialValues);\n  const [errors, setErrors] = useState({});\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getProjects(token));\n  }, [dispatch]);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleInputChange = (e) => {\n    const err = errors;\n    const { name, value } = e.currentTarget;\n    const errorMessages = validateProperty(name, value);\n    if (errorMessages) err[name] = errorMessages;\n    else delete err[name];\n    setErrors((errors) => err || {});\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const validateProperty = (name, value) => {\n    if (name === \"title\") {\n      if (value.trim() === \"\") return \"Title Is Required\";\n    }\n    if (name === \"description\") {\n      if (value.trim() === \"\") return \"Description Is Required\";\n    }\n  };\n\n  const validate = () => {\n    const errors = {};\n    if (values.title.trim() === \"\") errors.title = \"Title is required\";\n    if (values.description.trim() === \"\")\n      errors.description = \"Description is required\";\n    return Object.keys(errors).length === 0 ? null : errors;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const er = validate();\n    setErrors((errors) => er || {});\n    if (er) return;\n    dispatch(addProject(values,token));\n    setValues({\n      title: \"\",\n      description: \"\",\n    });\n    handleClose();\n  };\n\n  const handleRemove = async (project) => {\n    dispatch(removeProject(project._id, token));\n  };\n\n  return (\n    <React.Fragment>\n      {!token && !props.users.isAdmin && (\n        <React.Fragment>\n          <Redirect to=\"/not-found\" />\n        </React.Fragment>\n      )}\n\n      {token && props.users.isAdmin && (\n        <React.Fragment>\n          <div className=\"container mt-4\">\n            <h1> Welcome </h1>\n            <h5> Now You Can Manage Your Project and Tasks... Here </h5>\n            <Button\n              className=\" btn btn-lg mt-3\"\n              variant=\"primary\"\n              onClick={handleShow}\n            >\n              New Project\n            </Button>\n          </div>\n\n          <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>New Project</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <form>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"title\" className=\"form-label\">\n                    Title\n                  </label>\n                  <Input\n                    value={values.title}\n                    onChange={handleInputChange}\n                    name=\"title\"\n                    type=\"text\"\n                    placeholder=\"Title\"\n                    className=\"form-control\"\n                    error={errors.title}\n                  />\n                </div>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"password\" className=\"form-label\">\n                    Description\n                  </label>\n                  <textarea\n                    value={values.description}\n                    onChange={handleInputChange}\n                    name=\"description\"\n                    type=\"text\"\n                    placeholder=\"Description\"\n                    className=\"form-control\"\n                  />\n                </div>\n                <div>\n                  {errors.description && (\n                    <small className=\"text-danger\">{errors.description}</small>\n                  )}\n                </div>\n                <div className=\"m-3\">\n                   \n                    <Button\n                      variant=\"primary\"\n                      type=\"submit\"\n                      onClick={handleSubmit}\n                    >\n                      Submit\n                    </Button>\n                </div>\n              </form>\n            </Modal.Body>\n          </Modal>\n\n          <div className=\"mt-5\">\n            <ul className=\"container\">\n              {props.projects.map((project) => (\n                <li className=\"list-group-item\" key={project._id}>\n                  {\" \"}\n                  <div className=\"row\">\n                    <div className=\"col-2 text-left\">\n                      <h4>{project.title} </h4>\n                    </div>\n                    <div className=\"col-8 text-left\">\n                      <p>Description : {project.description} </p>\n                    </div>\n                    <div className=\"col-1 ml-auto\">\n                      <Link to={`/project/${project._id}`}>\n                        <i className=\"fa fa-eye\"></i>\n                      </Link>\n                    </div>\n                    <div className=\"col-1\">\n                      <i\n                        className=\"fa fa-trash\"\n                        aria-hidden=\"true\"\n                        onClick={() => handleRemove(project)}\n                        style={{ cursor: \"pointer\" }}\n                      ></i>\n                    </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\nconst mapStateToProps = (state) => ({\n  users: state.users,\n  projects: state.projects,\n});\n\nexport default connect(mapStateToProps)(AddProject);\n","import React from 'react';\n\nconst TableHeader = ({ onSort, sortColumn, columns}) => {\n    const raiseSort = (path) => {\n        const sortColumns = { ...sortColumn }\n        if (sortColumns.path === path) {\n          sortColumns.order = sortColumns.order === \"asc\" ? \"desc\" : \"asc\";\n        } else {\n          sortColumns.path = path;\n          sortColumns.order = \"asc\";\n        }\n        onSort(sortColumns)\n      }\n      const renderSortIcon = (column) => {\n        const sortCoulmn = {...sortColumn}\n        if(column.path !== sortCoulmn.path ) return null;\n        if (sortCoulmn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i> \n        return <i className=\"fa fa-sort-desc\"></i>\n      }\n    return ( \n        <thead>\n        <tr>\n          {columns.map((column) => (\n            <th\n            key={column.path} \n            onClick={() => raiseSort(column.path)}>{column.label}\n            {renderSortIcon(column)} \n            </th>\n          ))}\n        </tr>\n      </thead>\n     );\n}\n \nexport default TableHeader;","import React from 'react';\nimport TableHeader from \"./tableHeader\";\nimport { Link } from \"react-router-dom\";\n\nconst UserTable = ({ tasks, onSort, sortColumn}) => {\n\n  const columns = [\n    { path:\"description\" ,label : \"Description\"},\n    { path:\"status\" ,label : \"Status\"},\n    { path:\"owner.name\" ,label : \"User\"},\n    { path:\"createdAt\" , label : \"Assigned Date\"},\n    { path:\"deadline\" ,label : \"Deadline\"},\n    \n  ]\n  \n    return (  \n        <div>\n        <table className=\"table table-bordered\">\n          <TableHeader\n          columns = {columns}\n          onSort = {onSort}\n          sortColumn = {sortColumn}\n          />\n          <tbody>\n            {tasks.map((task, index) => (\n              <tr key={task._id}>\n                <td>{task.description}</td>\n                <td>{task.status}</td>\n                <td>{task.owner.name}</td>\n                <td>{task.createdAt}</td>\n                <td>{task.deadline}</td>\n                <td>{<Link to={`/updatetask/${task._id}`}><i className=\"fa fa-pencil-square-o\"></i></Link>}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n}\n \nexport default UserTable;","import React from 'react';\n\nconst SearchBox = ({ value, onChange}) => {\n    return ( \n        <input\n        type=\"text\"\n        name=\"search\"\n        className=\"form-control m-3\"\n        placeholder=\"Search Here...\"\n        value={value}\n        onChange={e=> onChange(e)}\n        />\n    );\n}\n\nexport default SearchBox;","import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Link, withRouter, Redirect } from \"react-router-dom\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport _ from 'lodash';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport { getUser } from \"../actions/userAction\";\nimport { findProject, updateProject } from \"../actions/projectAction\";\nimport { addTask, getTasks } from \"../actions/taskAction\";\nimport Input from \"./input\";\nimport UserTable from \"./userTable\";\nimport SearchBox from \"./searchBox\";\n\nconst token = localStorage.getItem(\"x-auth-token\");\nconst Project = (props) => {\n\n  const dispatch = useDispatch();\n  const [projectValues, setProjectValues] = useState([{}]);\n  const [values, setValues] = useState({ task: '', user: ''});\n  const [users, setUser] = useState([]);\n  const [tasks, setTask] = useState([]);\n  const [errors, setErrors] = useState({});\n  const [sortColumn, setSortColumn] = useState({ path: '', order: '' });\n  const [searchQuery, setSearchQuery] = useState('')\n  const [date, setDate] = useState(moment().toDate())  \n  const [show, setShow] = useState(false);\n  const [show1, setShow1] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleClose1 = () => setShow1(false);\n  const handleShow1 = () => setShow1(true);\n\n  useLayoutEffect(() => {\n    const projectId = props.match.params.id;\n    dispatch(findProject(projectId, token)).then((res) => setProjectValues(res));\n    dispatch(getUser(token)).then((res) => setUser(res));\n    dispatch(getTasks(projectId, token)).then((res) => setTask(res));\n  }, [dispatch, props.match.params.id])\n\n  useEffect(() => {\n    if (searchQuery !== \"\") {\n      let filtered = props.tasks.filter((m) =>\n        m.description.toLowerCase().startsWith(searchQuery.toLowerCase()));\n      setTask(filtered)\n    }\n    if (searchQuery === \"\") setTask(props.tasks)\n  }, [searchQuery]);\n\n  const validateProperty = (name, value) => {\n    if (name === \"title\") {\n      if (value.trim() === \"\") return \"Title Is Required\";\n    }\n    if (name === \"description\") {\n      if (value.trim() === \"\") return \"Description Is Required\";\n    }\n  };\n  const validatePropertyTask = (name, value) => {\n    if (name === \"task\") {\n      if (value.trim() === \"\") return \"Task Is Required\";\n    }\n    if (name === \"user\") {\n      if (value.trim() === \"\") return \"User Is Required\";\n    }\n  };\n\n  const validate = () => {\n    const errors = {};\n    if (projectValues.title.trim() === \"\") errors.title = \"Title is required\";\n    if (projectValues.description.trim() === \"\") errors.description = \"Description is required\";\n    return Object.keys(errors).length === 0 ? null : errors;\n  };\n  const validateTask = () => {\n    const errors = {};\n    if (values.task.trim() === \"\") errors.task = \"Task is required\";\n    if (values.user.trim() === \"\") errors.user = \"User is required\";\n    return Object.keys(errors).length === 0 ? null : errors;\n  };\n\n  const handleInputChange = (e) => {\n    const err = errors;\n    const { name, value } = e.currentTarget;\n    const errorMessages = validateProperty(name, value);\n    if (errorMessages) err[name] = errorMessages;\n    else delete err[name];\n    setErrors((errors) => err || {});\n    setProjectValues({\n      ...projectValues,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const er = validate();\n    setErrors((errors) => er || {});\n    if (er) return;\n    dispatch(updateProject(projectValues, token)).then((res) => {\n      setProjectValues((projectValues) => res);\n    });\n    handleClose()\n  };\n\n  const handleInputChangeTask = (e) => {\n    const err = errors;\n    const { name, value } = e.currentTarget;\n    const errorMessages = validatePropertyTask(name, value);\n    if (errorMessages) err[name] = errorMessages;\n    else delete err[name];\n    setErrors((errors) => err || {});\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n  \n  const isWeekday = date => {\n    const day = date.getDay();\n    return day !== 0 && day !== 6;\n  };\n  const handleDateInput = (date) => {\n    if(!date) return \n    setDate(date)\n  }\n\n  const handleSubmitTask = (e) => {\n    e.preventDefault();\n    const er = validateTask();\n    setErrors((errors) => er || {});\n    if (er) return;\n    const projectId = props.match.params.id;\n    const formattedDate = moment(date).format('ll')\n    const valuesWithDate = { ...values, formattedDate}\n    dispatch(addTask(valuesWithDate, projectId, token)).then((res) => {\n      setTask((tasks) => [res, ...tasks]);\n    });\n    setValues({ task: '', user: '' })\n    handleClose1()\n  };\n\n  const handleSort = (sortColumn) => {\n    setSortColumn(sortColumn)\n    const sorted = _.orderBy(tasks, [sortColumn.path], [sortColumn.order])\n    setTask(sorted);\n  }\n\n  const handleSearch = (e) => {\n    setSearchQuery(e.currentTarget.value)\n  };\n\n  return (\n    <div>\n      {!props.users.isAdmin && (\n        <React.Fragment>\n          <Redirect to=\"/not-found\" />\n        </React.Fragment>\n      )}\n      {props.users.isAdmin && (\n        <React.Fragment>\n          <div\n            className=\"col-sm-10 card text-white bg-dark mb-3 mt-4 \"\n            style={{ marginLeft: \"100px\" }}\n          >\n            <h1 className=\"card-header\">Title : {projectValues.title}</h1>\n            <h5 className=\"card-title mt-2\">\n              Description : {projectValues.description}\n            </h5>\n            <div>\n              <Button\n                className=\"btn m-2\"\n                variant=\"primary\"\n                onClick={handleShow}\n              >\n                Update\n              </Button>\n              <Button variant=\"primary\" onClick={handleShow1}>\n                Add Task\n              </Button>\n            </div>\n          </div>\n          <div className=\"m-2\">\n            <Modal show={show} onHide={handleClose}>\n              <Modal.Header closeButton>\n                <Modal.Title>Update Project</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <form>\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"Title\" className=\"form-label\">\n                      Title\n                    </label>\n                    <Input\n                      value={projectValues.title}\n                      onChange={handleInputChange}\n                      name=\"title\"\n                      type=\"text\"\n                      placeholder=\"Title\"\n                      className=\"form-control\"\n                      error={errors.title}\n                    />\n                  </div>\n\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"Description\" className=\"form-label\">\n                      Description\n                    </label>\n                    <textarea\n                      value={projectValues.description}\n                      onChange={handleInputChange}\n                      name=\"description\"\n                      type=\"text\"\n                      placeholder=\"Description\"\n                      className=\"form-control\"\n                    />\n                    <div>\n                      {errors.description && (\n                        <small className=\"text-danger\">{errors.description}</small>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"mb-3\">\n                    <Button\n                      variant=\"primary\"\n                      type=\"submit\"\n                      onClick={handleSubmit}\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </form>\n              </Modal.Body>\n            </Modal>\n          </div>\n\n          <div className=\"m-2\">\n            <Modal show={show1} onHide={handleClose1}>\n              <Modal.Header closeButton>\n                <Modal.Title>Assign Task</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <form>\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"Task\" className=\"form-label\">\n                      Task\n                    </label>\n                    <textarea\n                      value={values.task}\n                      onChange={handleInputChangeTask}\n                      name=\"task\"\n                      type=\"text\"\n                      placeholder=\"Task\"\n                      className=\"form-control\"\n                    />\n                    {errors.task && (\n                      <small className=\"text-danger\">{errors.task}</small>\n                    )}\n                  </div>\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"User\" className=\"form-label\">\n                      User\n                    </label>\n                    <select\n                      name=\"user\"\n                      id=\"user\"\n                      label=\"User\"\n                      value={values.user}\n                      className=\"form-control\"\n                      onChange={handleInputChangeTask}\n                    >\n                      <option value=\"\" />\n                      {users.map((option) => (\n                        <option key={option._id} value={option._id}>\n                          {option.name}\n                        </option>\n                      ))}\n                    </select>\n                    <div>\n                      {errors.user && (\n                        <small className=\"text-danger\">{errors.user}</small>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"Date\">Deadline Date</label>\n                    <br></br>\n                    <DatePicker\n                      selected={date}\n                      onChange={handleDateInput}\n                      name=\"date\"\n                      id=\"date\"\n                      label=\"Date\"\n                      minDate={new Date()}\n                      filterDate={isWeekday}\n                    />\n                  </div>\n                  <div>\n                      {errors.date && (\n                        <small className=\"text-danger\">{errors.date}</small>\n                      )}\n                    </div>\n                  <div className=\"mb-3\">\n                    <Button\n                      variant=\"primary\"\n                      type=\"submit\"\n                      onClick={handleSubmitTask}\n                    >\n                      Submit\n                    </Button>\n                  </div>\n                </form>\n              </Modal.Body>\n            </Modal>\n          </div>\n          <div className=\"container\">\n            <SearchBox value={searchQuery} onChange={handleSearch} />\n            <UserTable\n              tasks={tasks}\n              onSort={handleSort}\n              sortColumn={sortColumn}\n            />\n            <div className=\"row social-icons\" style={{ marginLeft: \"100px\" }}>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  users: state.users,\n  tasks: state.tasks\n});\n\nexport default withRouter(connect(mapStateToProps)(Project));\n","import React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { getTaskById, updateTask, removeTask } from \"../actions/taskAction\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from 'moment';\nimport DatePicker from 'react-datepicker';\nimport { getUser } from \"../actions/userAction\";\n\n\nconst token = localStorage.getItem(\"x-auth-token\");\nconst UpdateTask = (props) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const taskId = props.match.params.id;\n    dispatch(getUser(token)).then((res) => setUser(res));\n    dispatch(getTaskById(taskId, token));\n  }, [dispatch, props.match.params.id]);\n\n  const [show, setShow] = useState(false);\n  const [values, setValues] = useState({task:\"\",user:\"\"});\n  const [users, setUser] = useState([]);\n  const [errors, setErrors] = useState({});\n  const [date, setDate] = useState(moment().toDate()) \n \n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const validateProperty = (name, value) => {\n    if (name === \"task\") {\n      if (value.trim() === \"\") return \"Task Is Required\";\n    }\n    if (name === \"user\") {\n      if (value.trim() === \"\") return \"User Is Required\";\n    }\n  };\n  const validate = () => {\n    const errors = {};\n    if (values.task.trim() === \"\") errors.task = \"Task is required\";\n    if (values.user.trim() === \"\") errors.user = \"User is required\";\n    return Object.keys(errors).length === 0 ? null : errors;\n  };\n\n  const handleInputChange = (e) => {\n    const err = errors;\n    const { name, value } = e.currentTarget;\n    const errorMessages = validateProperty(name, value);\n    if (errorMessages) err[name] = errorMessages;\n    else delete err[name];\n    setErrors((errors) => err || {});\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const isWeekday = date => {\n    const day = date.getDay();\n    return day !== 0 && day !== 6;\n  };\n  const handleDateInput = (date) => {\n    if(!date) return \n    setDate(date)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const er = validate();\n    setErrors((errors) => er || {});\n    if (er) return;\n    const formattedDate = moment(date).format('ll')\n    const valuesWithDate = { ...values, formattedDate}\n    console.log(valuesWithDate)\n    dispatch(updateTask(valuesWithDate,token, props.match.params.id));\n    setValues({task:'', user:''})\n    handleClose()\n  };\n  const handleRemove =  (task) => {\n    dispatch(removeTask(task._id, token));\n    props.history.replace('/addproject')\n  };\n\n  return (\n    <div>\n      {!token && !props.users.isAdmin && (\n        <React.Fragment>\n          <Redirect to=\"/not-found\" />\n        </React.Fragment>\n      )}\n      {token && props.users.isAdmin && (\n        <React.Fragment>\n          <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Update Task</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <form>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"task\" className=\"form-label\">\n                    Task\n                  </label>\n                  <textarea\n                    value={values.task}\n                    onChange={handleInputChange}\n                    name=\"task\"\n                    type=\"text\"\n                    placeholder=\"Task\"\n                    className=\"form-control\"\n                  />\n                  {errors.task && (\n                    <small className=\"text-danger\">{errors.task}</small>\n                  )}\n                </div>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"user\" className=\"form-label\">\n                    User\n                  </label>\n                  <select\n                    name=\"user\"\n                    id=\"user\"\n                    label=\"User\"\n                    value={values.user}\n                    className=\"form-control\"\n                    onChange={handleInputChange}\n                  >\n                    <option value=\"\" />\n                    {users.map((option) => (\n                      <option key={option._id} value={option._id}>\n                        {option.name}\n                      </option>\n                    ))}\n                  </select>\n                  <div>\n                  {errors.user && (\n                    <small className=\"text-danger\">{errors.user}</small>\n                  )}\n                </div>\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"Date\">Deadline Date</label>\n                    <br></br>\n                    <DatePicker\n                      selected={date}\n                      onChange={handleDateInput}\n                      name=\"date\"\n                      id=\"date\"\n                      label=\"Date\"\n                      minDate={new Date()}\n                      filterDate={isWeekday}\n                    />\n                  </div>\n                <div className=\"mb-3\">\n                  <Button variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\n                    Submit\n                  </Button>\n                </div>\n              </form>\n            </Modal.Body>\n          </Modal>\n          <div className=\"container-fluid mt-5\">\n            <ul className=\"list-group\">\n              {props.tasks.map((task) => (\n                <li className=\"list-group-item\" key={task._id}>\n                  <div className=\"row\">\n                    <h5 className=\"col-4 text-left\">{task.description}</h5>\n                    <p className=\"col-2\">User : {task.owner.name}</p>\n                    <p className=\"col-2\">Status : {task.status}</p>\n                    <p className=\"col-2\">Deadline : {task.deadline}</p>\n                    <div className=\"col-1 text-right\">\n                      <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"\n                       onClick={handleShow}\n                      style={{ cursor: \"pointer\"}}></i>\n                    </div>\n                    <div className=\" col-1 text-right\">\n                        <i className=\"fa fa-trash\" aria-hidden=\"true\" \n                        onClick={() => handleRemove(task)} \n                        style={{ cursor: \"pointer\"}}></i>\n                        </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  tasks: state.tasks,\n  users : state.users\n});\nexport default connect(mapStateToProps)(UpdateTask);\n","import { v4 as uuid } from \"uuid\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport React, { useState, useEffect } from \"react\";\nimport { getUserTasks, toggleTask } from \"../actions/taskAction\";\n\nconst token = localStorage.getItem(\"x-auth-token\");\n\nconst Dnd = (props) => {\n  const dispatch = useDispatch();\n\n  const [columns, setColumns] = useState([]);\n\n  useEffect(() => {\n    const userId = props.users.user._id;\n    dispatch(getUserTasks(userId, token)).then((res) => {\n      setColumns({\n        [uuid()]: {\n          name: \"Todo\",\n          items: res.filter((a) => a.status === \"todo\"),\n        },\n        [uuid()]: {\n          name: \"In Progress\",\n          items: res.filter((a) => a.status === \"process\"),\n        },\n        [uuid()]: {\n          name: \"Done\",\n          items: res.filter((a) => a.status === \"done\"),\n        },\n      });\n    });\n  }, []);\n\n  const onDragEnd = (result, columns, setColumns) => {\n    if (!result.destination) return;\n    const { source, destination } = result;\n    if (source.droppableId !== destination.droppableId) {\n      const sourceColumn = columns[source.droppableId];\n      const destColumn = columns[destination.droppableId];\n      const sourceItems = [...sourceColumn.items];\n      const destItems = [...destColumn.items];\n      const [removed] = sourceItems.splice(source.index, 1);\n      if (removed.status === \"process\") {\n        if (destColumn.name === \"Done\") {\n          removed.status = \"done\";\n          dispatch(toggleTask(removed, token));\n        }\n        if (destColumn.name === \"Todo\") {\n          removed.status = \"todo\";\n          dispatch(toggleTask(removed, token));\n        }\n      }\n\n      if (removed.status === \"done\") {\n        if (destColumn.name === \"In Progress\") {\n          removed.status = \"process\";\n          dispatch(toggleTask(removed, token));\n        }\n        if (destColumn.name === \"Todo\") {\n          removed.status = \"todo\";\n          dispatch(toggleTask(removed, token));\n        }\n      }\n      if (removed.status === \"todo\") {\n        if (destColumn.name === \"In Progress\") {\n          removed.status = \"process\";\n          dispatch(toggleTask(removed, token));\n        }\n        if (destColumn.name === \"Done\") {\n          removed.status = \"done\";\n          dispatch(toggleTask(removed, token));\n        }\n      }\n      destItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems,\n        },\n        [destination.droppableId]: {\n          ...destColumn,\n          items: destItems,\n        },\n      });\n    } else {\n      const column = columns[source.droppableId];\n      const copiedItems = [...column.items];\n      const [removed] = copiedItems.splice(source.index, 1);\n      copiedItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...column,\n          items: copiedItems,\n        },\n      });\n    }\n  };\n  console.log(columns);\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\", height: \"100%\" }}>\n      {!token && (\n        <React.Fragment>\n          <Redirect to=\"/not-found\" />\n        </React.Fragment>\n      )}\n      {token && (\n        <React.Fragment>\n          <DragDropContext\n            onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\n          >\n            {Object.entries(columns).map(([columnId, column], index) => {\n              return (\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                  }}\n                  key={columnId}\n                >\n                  <h2>{column.name}</h2>\n\n                  <div style={{ margin: 8 }}>\n                    <Droppable droppableId={columnId} key={columnId}>\n                      {(provided, snapshot) => {\n                        return (\n                          <div\n                            {...provided.droppableProps}\n                            ref={provided.innerRef}\n                            style={{\n                              background: snapshot.isDraggingOver\n                                ? \"lightblue\"\n                                : \"lightgrey\",\n                              padding: 4,\n                              width: 250,\n                              minHeight: 500,\n                            }}\n                          >\n                            {column.items.map((item, index) => {\n                              return (\n                                <Draggable\n                                  key={item._id}\n                                  draggableId={item._id}\n                                  index={index}\n                                >\n                                  {(provided, snapshot) => {\n                                    return (\n                                      <div\n                                        ref={provided.innerRef}\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}\n                                        style={{\n                                          userSelect: \"none\",\n                                          padding: 16,\n                                          margin: \"0 0 8px 0\",\n                                          minHeight: \"50px\",\n                                          backgroundColor: snapshot.isDragging\n                                            ? \"#263B4A\"\n                                            : \"#2d4059\",\n                                          color: \"white\",\n                                          ...provided.draggableProps.style,\n                                        }}\n                                      >\n                                        {item.description}\n                                      </div>\n                                    );\n                                  }}\n                                </Draggable>\n                              );\n                            })}\n                            {provided.placeholder}\n                          </div>\n                        );\n                      }}\n                    </Droppable>\n                  </div>\n                </div>\n              );\n            })}\n          </DragDropContext>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  users: state.users,\n});\nexport default connect(mapStateToProps)(Dnd);\n","import { Route, Switch,Redirect } from 'react-router-dom';\nimport { ToastContainer} from 'react-toastify';\nimport Navbar from \"./components/navbar\";\nimport Home from './components/home';\nimport Login from './components/login';\nimport Signup from './components/signup';\nimport AddTasks from './components/addTasks';\nimport Tasks from \"./components/tasks\";\nimport NotFound from './components/notFound'\nimport Logout from './components/logout';\nimport Profile from './components/profile';\nimport Deleteaccount from './components/deleteAccount';\nimport addProject from './components/addProject';\nimport Project from './components/project'\nimport UpdateTask from './components/updateTask';\nimport Dnd from './components/dnd';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <ToastContainer/>\n      <Navbar/>\n      <Switch>\n      <Route path=\"/home\" component={Home} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/signup\" component={Signup} />\n      <Route path=\"/addtasks\" component={AddTasks} />\n      <Route path=\"/tasks/:id\" component={Tasks} />\n      <Route path=\"/addproject\" component={addProject} />\n      <Route path=\"/project/:id\" component={Project} />\n      <Route path=\"/updatetask/:id\" component={UpdateTask} />\n      <Route path=\"/logout\" component={Logout} />\n      <Route path=\"/profile\" component={Profile} />\n      <Route path=\"/delete-account\" component={Deleteaccount} />\n      <Route path=\"/dnd\" component={Dnd} />\n      <Route path=\"/not-found\" component={NotFound}/>\n      <Redirect from=\"/\"  exact to=\"/home\" />\n      <Redirect to=\"/not-found\"/>\n      </Switch>\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { HashRouter} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store , persistor} from './store';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\n\n\n\nstore.subscribe(() => console.log(store.getState()))\n\nReactDOM.render(\n \n      <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n      <HashRouter>\n         <App/>\n    </HashRouter>\n         </PersistGate>\n      </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}